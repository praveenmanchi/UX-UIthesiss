{"file_contents":{"client/src/components/tools-evolution-scatter.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { \n  SiAdobephotoshop,\n  SiAdobeillustrator, \n  SiAdobedreamweaver,\n  SiFigma,\n  SiSketch,\n  SiFramer,\n  SiAdobe,\n  SiApple,\n  SiHtml5,\n  SiCss3\n} from \"react-icons/si\";\nimport { ReactNode } from \"react\";\n\ninterface ToolDataPoint {\n  name: string;\n  year: number;\n  category: string;\n  era: \"Print to Digital Era\" | \"Web Revolution Era\" | \"Modern Design Tools Era\";\n  icon: ReactNode;\n}\n\nexport default function ToolsEvolutionScatter() {\n  const toolData: ToolDataPoint[] = [\n    // Print to Digital Era (1970-1995) - Cyan\n    { name: \"Apple II\", year: 1977, category: \"Personal Comput\", era: \"Print to Digital Era\", icon: <SiApple className=\"w-full h-full\" /> },\n    { name: \"Illustrator\", year: 1987, category: \"Vector Graphics\", era: \"Print to Digital Era\", icon: <SiAdobeillustrator className=\"w-full h-full\" /> },\n    { name: \"PageMaker\", year: 1985, category: \"Desktop Publish\", era: \"Print to Digital Era\", icon: <SiAdobe className=\"w-full h-full\" /> },\n    { name: \"Photoshop\", year: 1990, category: \"Raster Graphics\", era: \"Print to Digital Era\", icon: <SiAdobephotoshop className=\"w-full h-full\" /> },\n    { name: \"HTML\", year: 1993, category: \"Web Markup\", era: \"Print to Digital Era\", icon: <SiHtml5 className=\"w-full h-full\" /> },\n    { name: \"CSS\", year: 1996, category: \"Web Styling\", era: \"Print to Digital Era\", icon: <SiCss3 className=\"w-full h-full\" /> },\n    \n    // Web Revolution Era (1996-2009) - Red/Pink\n    { name: \"Flash\", year: 1996, category: \"Web Animation\", era: \"Web Revolution Era\", icon: <SiAdobe className=\"w-full h-full\" /> },\n    { name: \"Dreamweaver\", year: 1997, category: \"WYSIWYG Editor\", era: \"Web Revolution Era\", icon: <SiAdobedreamweaver className=\"w-full h-full\" /> },\n    { name: \"Fireworks\", year: 2003, category: \"Web Graphics\", era: \"Web Revolution Era\", icon: <SiAdobe className=\"w-full h-full\" /> },\n    { name: \"Axure\", year: 2005, category: \"Prototyping\", era: \"Web Revolution Era\", icon: <SiAdobe className=\"w-full h-full\" /> },\n    { name: \"OmniGraffle\", year: 2007, category: \"Diagramming\", era: \"Web Revolution Era\", icon: <SiApple className=\"w-full h-full\" /> },\n    { name: \"Balsamiq\", year: 2008, category: \"Wireframing\", era: \"Web Revolution Era\", icon: <SiAdobe className=\"w-full h-full\" /> },\n    \n    // Modern Design Tools Era (2010-2019) - Green\n    { name: \"Sketch\", year: 2010, category: \"UI Design\", era: \"Modern Design Tools Era\", icon: <SiSketch className=\"w-full h-full\" /> },\n    { name: \"InVision\", year: 2013, category: \"Prototyping\", era: \"Modern Design Tools Era\", icon: <SiAdobe className=\"w-full h-full\" /> },\n    { name: \"Framer\", year: 2014, category: \"Interaction\", era: \"Modern Design Tools Era\", icon: <SiFramer className=\"w-full h-full\" /> },\n    { name: \"Figma\", year: 2016, category: \"Collaboration\", era: \"Modern Design Tools Era\", icon: <SiFigma className=\"w-full h-full\" /> },\n    { name: \"Adobe XD\", year: 2017, category: \"All-in-One\", era: \"Modern Design Tools Era\", icon: <SiAdobe className=\"w-full h-full\" /> },\n    { name: \"Abstract\", year: 2017, category: \"Version Control\", era: \"Modern Design Tools Era\", icon: <SiAdobe className=\"w-full h-full\" /> },\n    { name: \"Storybook\", year: 2019, category: \"Design Systems\", era: \"Modern Design Tools Era\", icon: <SiAdobe className=\"w-full h-full\" /> }\n  ];\n\n  const categories = [\n    \"Design Systems\",\n    \"Version Control\",\n    \"All-in-One\",\n    \"Collaboration\",\n    \"Interaction\",\n    \"Prototyping\",\n    \"UI Design\",\n    \"Wireframing\",\n    \"Diagramming\",\n    \"Web Graphics\",\n    \"WYSIWYG Editor\",\n    \"Web Animation\",\n    \"Web Styling\",\n    \"Web Markup\",\n    \"Raster Graphics\",\n    \"Desktop Publish\",\n    \"Vector Graphics\",\n    \"Personal Comput\"\n  ];\n\n  const years = [1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2020];\n  \n  const getEraColor = (era: string) => {\n    switch (era) {\n      case \"Print to Digital Era\":\n        return \"hsl(217, 100%, 53%)\"; // IBM Carbon Blue\n      case \"Web Revolution Era\":\n        return \"hsl(292, 48%, 55%)\"; // Purple for categorical\n      case \"Modern Design Tools Era\":\n        return \"hsl(142, 63%, 39%)\"; // Success green\n      default:\n        return \"hsl(0, 0%, 63%)\";\n    }\n  };\n\n  const getYPosition = (category: string) => {\n    const index = categories.indexOf(category);\n    return (index / (categories.length - 1)) * 100;\n  };\n\n  const getXPosition = (year: number) => {\n    return ((year - 1970) / (2020 - 1970)) * 100;\n  };\n\n  return (\n    <div className=\"w-full bg-card dark:bg-card py-8 sm:py-10 md:py-12 px-4 sm:px-6 rounded-lg\">\n      <div className=\"max-w-6xl mx-auto\">\n        <h3 className=\"text-xl sm:text-2xl md:text-3xl font-display font-bold text-center mb-2 text-foreground\">\n          Design Tools Evolution (1977-2019)\n        </h3>\n        \n        {/* Legend */}\n        <div className=\"flex justify-center gap-2 sm:gap-3 md:gap-4 mb-8 flex-wrap\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: \"hsl(217, 100%, 53%)\" }} />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground\">Print to Digital Era</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: \"hsl(292, 48%, 55%)\" }} />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground\">Web Revolution Era</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: \"hsl(142, 63%, 39%)\" }} />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground\">Modern Design Tools Era</span>\n          </div>\n        </div>\n\n        {/* Chart Container */}\n        <div className=\"relative bg-background border border-primary/10 rounded-lg p-4 sm:p-6 md:p-8\">\n          {/* Y-axis labels */}\n          <div className=\"absolute left-0 top-4 sm:top-6 md:top-8 bottom-4 sm:bottom-6 md:bottom-8 w-24 sm:w-28 md:w-32 flex flex-col justify-between text-right pr-2 sm:pr-3 md:pr-4\">\n            {categories.map((cat, index) => (\n              <div key={cat} className=\"text-[10px] font-sans text-muted-foreground leading-tight\" style={{ \n                transform: 'translateY(-50%)',\n                position: 'absolute',\n                top: `${(index / (categories.length - 1)) * 100}%`,\n                right: '1rem'\n              }}>\n                {cat}\n              </div>\n            ))}\n          </div>\n\n          {/* Chart area */}\n          <div className=\"ml-24 sm:ml-28 md:ml-32 relative h-64 sm:h-96 md:h-[500px]\">\n            {/* Grid lines - vertical */}\n            {years.map((year) => (\n              <div\n                key={`grid-v-${year}`}\n                className=\"absolute top-0 bottom-0 border-l border-primary/5\"\n                style={{ left: `${getXPosition(year)}%` }}\n              />\n            ))}\n\n            {/* Grid lines - horizontal */}\n            {categories.map((cat, index) => (\n              <div\n                key={`grid-h-${cat}`}\n                className=\"absolute left-0 right-0 border-t border-primary/5\"\n                style={{ top: `${(index / (categories.length - 1)) * 100}%` }}\n              />\n            ))}\n\n            {/* Data points with icons */}\n            {toolData.map((tool, index) => (\n              <motion.div\n                key={`${tool.name}-${index}`}\n                initial={{ scale: 0, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                transition={{ delay: index * 0.03, duration: 0.4 }}\n                className=\"absolute cursor-pointer transform -translate-x-1/2 -translate-y-1/2 group\"\n                style={{\n                  left: `${getXPosition(tool.year)}%`,\n                  top: `${getYPosition(tool.category)}%`,\n                }}\n                data-testid={`icon-tool-${tool.name.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                {/* Icon container with colored background */}\n                <div \n                  className=\"w-5 h-5 sm:w-6 sm:h-6 md:w-7 md:h-7 rounded-lg flex items-center justify-center p-1 sm:p-1.5 shadow-md transition-all duration-200 group-hover:scale-125 group-hover:shadow-lg\"\n                  style={{\n                    backgroundColor: getEraColor(tool.era),\n                    color: 'white'\n                  }}\n                  title={`${tool.name} (${tool.year})`}\n                >\n                  {tool.icon}\n                </div>\n                \n                {/* Tooltip on hover */}\n                <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none z-10\">\n                  <div className=\"bg-card dark:bg-card text-foreground text-xs px-3 py-2 rounded shadow-xl whitespace-nowrap border border-primary/20\">\n                    {tool.name} ({tool.year})\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n\n            {/* X-axis labels */}\n            <div className=\"absolute -bottom-8 left-0 right-0 flex justify-between\">\n              {years.map((year) => (\n                <div\n                  key={`year-${year}`}\n                  className=\"text-[10px] sm:text-xs text-muted-foreground font-mono\"\n                  style={{ position: 'absolute', left: `${getXPosition(year)}%`, transform: 'translateX(-50%)' }}\n                >\n                  {year}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Axis labels */}\n          <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-12\">\n            <span className=\"text-xs sm:text-sm font-sans font-medium text-muted-foreground\">Year</span>\n          </div>\n          <div className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-8 sm:-translate-x-10 md:-translate-x-12 -rotate-90 origin-center\">\n            <span className=\"text-xs sm:text-sm font-sans font-medium text-muted-foreground\">Tool Categories</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":10222},"client/src/components/job-market-chart.tsx":{"content":"import { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend, ReferenceLine, ReferenceArea } from 'recharts';\n\n// Job market data with postings and search interest\nconst jobMarketData = [\n  {\n    year: 2014,\n    postings: 15,\n    searchInterest: 25,\n    annotation: null\n  },\n  {\n    year: 2015,\n    postings: 22,\n    searchInterest: 30,\n    annotation: null\n  },\n  {\n    year: 2016,\n    postings: 35,\n    searchInterest: 38,\n    annotation: null\n  },\n  {\n    year: 2017,\n    postings: 48,\n    searchInterest: 45,\n    annotation: null\n  },\n  {\n    year: 2018,\n    postings: 65,\n    searchInterest: 55,\n    annotation: null\n  },\n  {\n    year: 2019,\n    postings: 85,\n    searchInterest: 62,\n    annotation: null\n  },\n  {\n    year: 2020,\n    postings: 70,\n    searchInterest: 70,\n    annotation: 'COVID-19 Impact'\n  },\n  {\n    year: 2021,\n    postings: 110,\n    searchInterest: 85,\n    annotation: 'Recovery Surge'\n  },\n  {\n    year: 2022,\n    postings: 140,\n    searchInterest: 95,\n    annotation: null\n  },\n  {\n    year: 2023,\n    postings: 125,\n    searchInterest: 100,\n    annotation: 'Peak Interest'\n  },\n  {\n    year: 2024,\n    postings: 130,\n    searchInterest: 92,\n    annotation: null\n  }\n];\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    const data = jobMarketData.find(d => d.year === label);\n    \n    return (\n      <div className=\"bg-card dark:bg-card border border-primary/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200 min-w-[200px]\">\n        <p className=\"font-semibold text-foreground mb-2\">{label}</p>\n        \n        <div className=\"space-y-2\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-sm bg-primary\" />\n              <span className=\"text-sm text-foreground/90\">Job Postings</span>\n            </div>\n            <span className=\"text-sm font-mono font-semibold text-primary\">\n              {data?.postings}k\n            </span>\n          </div>\n          \n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: 'hsl(142, 63%, 39%)' }} />\n              <span className=\"text-sm text-foreground/90\">Search Interest</span>\n            </div>\n            <span className=\"text-sm font-mono font-semibold\" style={{ color: 'hsl(142, 63%, 39%)' }}>\n              {data?.searchInterest}\n            </span>\n          </div>\n        </div>\n        \n        {data?.annotation && (\n          <p className=\"text-xs text-primary mt-3 pt-2 border-t border-primary/20 italic\">\n            ✦ {data.annotation}\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Custom legend component\nconst CustomLegend = () => {\n  return (\n    <div className=\"flex justify-center gap-2 sm:gap-3 md:gap-4 mt-4\">\n      <div className=\"flex items-center gap-2\">\n        <div className=\"w-4 h-4 bg-primary rounded-sm\" />\n        <span className=\"text-xs sm:text-sm text-foreground/90 font-medium\">\n          Job Postings (thousands)\n        </span>\n      </div>\n      <div className=\"flex items-center gap-2\">\n        <div className=\"w-4 h-4 rounded-full\" style={{ backgroundColor: 'hsl(142, 63%, 39%)' }} />\n        <span className=\"text-xs sm:text-sm text-foreground/90 font-medium\">\n          Search Interest Index (0-100)\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default function JobMarketChart() {\n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-primary/[0.02] dark:bg-primary/[0.05] rounded-xl border border-primary/10 p-4 sm:p-6 md:p-8 transition-all duration-300 hover:border-primary/20\">\n          <div className=\"mb-6\">\n            <span className=\"text-muted-foreground uppercase tracking-wider text-xs font-mono\">Fig 04</span>\n            <h3 className=\"text-xl sm:text-2xl md:text-3xl font-semibold font-display text-foreground mt-1\">\n              UX/UI Job Market Growth\n            </h3>\n            <p className=\"text-xs sm:text-sm md:text-base text-muted-foreground mt-2\">\n              Annual job postings and search interest trends\n            </p>\n          </div>\n          \n          <div className=\"h-64 sm:h-80 md:h-96 w-full\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <ComposedChart \n                data={jobMarketData} \n                margin={{ top: 20, right: 60, left: 20, bottom: 60 }}\n              >\n                <CartesianGrid \n                  strokeDasharray=\"3 3\" \n                  stroke=\"hsl(217, 100%, 53%)\" \n                  opacity={0.1}\n                  verticalPoints={[0]}\n                />\n                \n                {/* X Axis */}\n                <XAxis \n                  dataKey=\"year\" \n                  stroke=\"transparent\"\n                  tick={{ fill: 'hsl(0, 0%, 45%)', fontSize: 10 }}\n                  className=\"text-xs sm:text-sm dark:text-xs dark:sm:text-sm\"\n                  axisLine={{ stroke: 'hsl(0, 0%, 70%)', opacity: 0.5 }}\n                  tickLine={false}\n                  interval={0}\n                  angle={-45}\n                  textAnchor=\"end\"\n                />\n                \n                {/* Left Y Axis - Job Postings */}\n                <YAxis \n                  yAxisId=\"postings\"\n                  orientation=\"left\"\n                  stroke=\"transparent\"\n                  tick={{ fill: 'hsl(0, 0%, 45%)', fontSize: 10 }}\n                  className=\"text-xs sm:text-sm dark:text-xs dark:sm:text-sm\"\n                  axisLine={{ stroke: 'hsl(0, 0%, 70%)', opacity: 0.5 }}\n                  tickLine={false}\n                  domain={[0, 150]}\n                  tickFormatter={(value) => `${value}k`}\n                  label={{ \n                    value: 'Job Postings (thousands)', \n                    angle: -90, \n                    position: 'insideLeft',\n                    style: { fill: 'hsl(217, 100%, 53%)', fontSize: 10 }\n                  }}\n                />\n                \n                {/* Right Y Axis - Search Interest */}\n                <YAxis \n                  yAxisId=\"interest\"\n                  orientation=\"right\"\n                  stroke=\"transparent\"\n                  tick={{ fill: 'hsl(0, 0%, 45%)', fontSize: 10 }}\n                  className=\"text-xs sm:text-sm dark:text-xs dark:sm:text-sm\"\n                  axisLine={{ stroke: 'hsl(0, 0%, 70%)', opacity: 0.5 }}\n                  tickLine={false}\n                  domain={[0, 100]}\n                  label={{ \n                    value: 'Search Interest Index', \n                    angle: 90, \n                    position: 'insideRight',\n                    style: { fill: 'hsl(142, 63%, 45%)', fontSize: 10 }\n                  }}\n                />\n                \n                <Tooltip \n                  content={<CustomTooltip />}\n                  cursor={{ fill: 'hsl(217, 100%, 53%)', opacity: 0.1 }}\n                  animationDuration={200}\n                />\n                \n                <Legend \n                  content={<CustomLegend />}\n                />\n                \n                {/* COVID-19 Reference Area */}\n                <ReferenceArea\n                  yAxisId=\"postings\"\n                  x1={2019.5}\n                  x2={2020.5}\n                  fill=\"hsl(354, 81%, 49%)\"\n                  fillOpacity={0.05}\n                  strokeOpacity={0}\n                />\n                \n                {/* Bar Chart - Job Postings */}\n                <Bar\n                  yAxisId=\"postings\"\n                  dataKey=\"postings\"\n                  fill=\"hsl(217, 100%, 53%)\"\n                  fillOpacity={0.8}\n                  radius={[4, 4, 0, 0]}\n                  animationDuration={1000}\n                  animationBegin={0}\n                />\n                \n                {/* Line Chart - Search Interest */}\n                <Line\n                  yAxisId=\"interest\"\n                  type=\"monotone\"\n                  dataKey=\"searchInterest\"\n                  stroke=\"hsl(142, 63%, 39%)\"\n                  strokeWidth={3}\n                  dot={{ fill: 'hsl(142, 63%, 39%)', r: 5 }}\n                  activeDot={{ r: 7 }}\n                  animationDuration={1200}\n                  animationBegin={200}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </div>\n          \n          {/* Annotations for Key Events */}\n          <div className=\"mt-8 pt-6 border-t border-primary/10\">\n            <h4 className=\"text-sm font-semibold text-foreground/90 mb-3\">Key Market Events:</h4>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-primary text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2020</p>\n                  <p className=\"text-xs text-muted-foreground\">COVID-19 causes temporary dip in job postings while search interest rises as professionals upskill</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-primary text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2021</p>\n                  <p className=\"text-xs text-muted-foreground\">Post-pandemic recovery surge with record hiring and digital transformation initiatives</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-primary text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2023</p>\n                  <p className=\"text-xs text-muted-foreground\">Search interest peaks at 100 as field matures, slight market correction in postings</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Market Insights */}\n          <div className=\"mt-6 pt-6 border-t border-primary/10\">\n            <h4 className=\"text-sm font-semibold text-foreground/90 mb-3\">Market Insights:</h4>\n            <ul className=\"space-y-2 text-xs text-muted-foreground\">\n              <li className=\"flex items-start\">\n                <span className=\"text-primary mr-2\">•</span>\n                Job postings grew 767% from 2014 to 2024, reflecting the industry's explosive expansion\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-primary mr-2\">•</span>\n                Search interest increased 268%, showing growing career interest in UX/UI design\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-primary mr-2\">•</span>\n                The 2020 pandemic briefly disrupted hiring but accelerated digital transformation demand\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-primary mr-2\">•</span>\n                2022 marked peak hiring with 140k postings, followed by market normalization\n              </li>\n            </ul>\n          </div>\n          \n          <p className=\"text-xs text-muted-foreground mt-6 font-mono\">\n            Source: Industry job boards aggregated data & Google Trends search interest data (2014-2024)\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":11700},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/progress-indicator.tsx":{"content":"import { useReadingProgress } from \"@/contexts/reading-progress-context\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { BookmarkCheck } from \"lucide-react\";\n\nexport default function ProgressIndicator() {\n  const { progress, getProgressPercentage } = useReadingProgress();\n  const percentage = getProgressPercentage();\n\n  if (percentage === 0) {\n    return null;\n  }\n\n  return (\n    <div \n      className=\"fixed bottom-6 right-6 z-40 bg-background/95 backdrop-blur-sm border border-accent rounded-lg p-4 shadow-lg w-64\"\n      data-testid=\"progress-indicator\"\n    >\n      <div className=\"flex items-center gap-2 mb-2\">\n        <BookmarkCheck className=\"h-4 w-4 text-foreground\" />\n        <span className=\"text-sm font-medium\">Reading Progress</span>\n      </div>\n      <Progress value={percentage} className=\"h-2\" data-testid=\"progress-bar\" />\n      <div className=\"flex justify-between items-center mt-2\">\n        <span className=\"text-xs text-muted-foreground\">\n          {progress.readTheses.length} of 18 theses read\n        </span>\n        <span className=\"text-xs font-medium\" data-testid=\"text-progress-percentage\">\n          {percentage}%\n        </span>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1209},"client/src/components/computing-democratization-scatter.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { \n  SiAdobe,\n  SiSketch,\n  SiFigma,\n} from \"react-icons/si\";\nimport { \n  Palette,\n  FileText,\n  Building2,\n  Users,\n  Code,\n  Smartphone,\n  Briefcase,\n  Globe\n} from \"lucide-react\";\nimport { ReactNode } from \"react\";\n\ninterface DataPoint {\n  name: string;\n  year: number;\n  category: string;\n  era: \"Desktop Era\" | \"Mobile Era\" | \"Modern Era\";\n  icon: ReactNode;\n  detail: string;\n}\n\nexport default function ComputingDemocratizationScatter() {\n  const data: DataPoint[] = [\n    // Desktop Era (1983-2006) - Cyan #4fd1c5\n    // Design Tools\n    { name: \"MacPaint\", year: 1984, category: \"Design Tools\", era: \"Desktop Era\", icon: <Palette className=\"w-full h-full\" />, detail: \"First accessible design tool\" },\n    { name: \"Illustrator\", year: 1987, category: \"Design Tools\", era: \"Desktop Era\", icon: <SiAdobe className=\"w-full h-full\" />, detail: \"Vector graphics standard\" },\n    { name: \"QuarkXPress\", year: 1987, category: \"Design Tools\", era: \"Desktop Era\", icon: <FileText className=\"w-full h-full\" />, detail: \"Desktop publishing\" },\n    { name: \"Photoshop\", year: 1990, category: \"Design Tools\", era: \"Desktop Era\", icon: <SiAdobe className=\"w-full h-full\" />, detail: \"Raster graphics revolution\" },\n    { name: \"Flash\", year: 1996, category: \"Design Tools\", era: \"Desktop Era\", icon: <SiAdobe className=\"w-full h-full\" />, detail: \"Web animation standard\" },\n    { name: \"Dreamweaver\", year: 1997, category: \"Design Tools\", era: \"Desktop Era\", icon: <Code className=\"w-full h-full\" />, detail: \"WYSIWYG web design\" },\n    \n    // UX Terminology\n    { name: \"User Experience\", year: 1986, category: \"UX Terminology\", era: \"Desktop Era\", icon: <FileText className=\"w-full h-full\" />, detail: \"Brenda Laurel coins phrase\" },\n    { name: \"UX Architect\", year: 1993, category: \"UX Terminology\", era: \"Desktop Era\", icon: <Building2 className=\"w-full h-full\" />, detail: \"Don Norman's title\" },\n    { name: \"UX Designer\", year: 2000, category: \"UX Terminology\", era: \"Desktop Era\", icon: <Users className=\"w-full h-full\" />, detail: \"Standard job title\" },\n    \n    // Tech Giants (USA)\n    { name: \"Apple HI Group\", year: 1986, category: \"Tech Giants (USA)\", era: \"Desktop Era\", icon: <Building2 className=\"w-full h-full\" />, detail: \"Human Interface Group\" },\n    { name: \"MS Usability Lab\", year: 1990, category: \"Tech Giants (USA)\", era: \"Desktop Era\", icon: <Building2 className=\"w-full h-full\" />, detail: \"Microsoft UX research\" },\n    { name: \"Apple UX Arch\", year: 1993, category: \"Tech Giants (USA)\", era: \"Desktop Era\", icon: <Briefcase className=\"w-full h-full\" />, detail: \"Don Norman joins Apple\" },\n    \n    // Mobile Era (2007-2015) - Orange #f59e0b\n    // Design Tools\n    { name: \"Sketch\", year: 2010, category: \"Design Tools\", era: \"Mobile Era\", icon: <SiSketch className=\"w-full h-full\" />, detail: \"UI design tool\" },\n    { name: \"InVision\", year: 2011, category: \"Design Tools\", era: \"Mobile Era\", icon: <Smartphone className=\"w-full h-full\" />, detail: \"Prototyping platform\" },\n    \n    // Tech Giants (USA)\n    { name: \"Google UX\", year: 2011, category: \"Tech Giants (USA)\", era: \"Mobile Era\", icon: <Globe className=\"w-full h-full\" />, detail: \"Google UX team formed\" },\n    { name: \"Material Design\", year: 2014, category: \"Tech Giants (USA)\", era: \"Mobile Era\", icon: <Palette className=\"w-full h-full\" />, detail: \"Google's design system\" },\n    \n    // Indian Tech Industry\n    { name: \"TCS UX\", year: 2010, category: \"Indian Tech Industry\", era: \"Mobile Era\", icon: <Building2 className=\"w-full h-full\" />, detail: \"TCS UX practice\" },\n    { name: \"Flipkart Design\", year: 2011, category: \"Indian Tech Industry\", era: \"Mobile Era\", icon: <Smartphone className=\"w-full h-full\" />, detail: \"E-commerce design\" },\n    { name: \"Wipro Digital\", year: 2014, category: \"Indian Tech Industry\", era: \"Mobile Era\", icon: <Code className=\"w-full h-full\" />, detail: \"Digital transformation\" },\n    { name: \"Infosys Design\", year: 2015, category: \"Indian Tech Industry\", era: \"Mobile Era\", icon: <Palette className=\"w-full h-full\" />, detail: \"Design practice\" },\n    \n    // Modern Era (2016-2025) - Green #48bb78\n    // UX Terminology\n    { name: \"Product Designer\", year: 2015, category: \"UX Terminology\", era: \"Modern Era\", icon: <Briefcase className=\"w-full h-full\" />, detail: \"Holistic role emerges\" },\n    \n    // Design Tools\n    { name: \"Figma\", year: 2016, category: \"Design Tools\", era: \"Modern Era\", icon: <SiFigma className=\"w-full h-full\" />, detail: \"Collaborative design\" },\n    { name: \"Adobe XD\", year: 2016, category: \"Design Tools\", era: \"Modern Era\", icon: <SiAdobe className=\"w-full h-full\" />, detail: \"Adobe's UX tool\" },\n  ];\n\n  const categories = [\n    \"Design Tools\",\n    \"UX Terminology\",\n    \"Tech Giants (USA)\",\n    \"Indian Tech Industry\"\n  ];\n\n  const years = [1983, 1990, 1995, 2000, 2005, 2010, 2015, 2020, 2025];\n  \n  const getEraColor = (era: string) => {\n    switch (era) {\n      case \"Desktop Era\":\n        return \"hsl(217, 100%, 53%)\"; // IBM Carbon Blue\n      case \"Mobile Era\":\n        return \"hsl(292, 48%, 55%)\"; // Purple for categorical\n      case \"Modern Era\":\n        return \"hsl(142, 63%, 39%)\"; // Success green\n      default:\n        return \"hsl(0, 0%, 63%)\";\n    }\n  };\n\n  const getYPosition = (category: string) => {\n    const index = categories.indexOf(category);\n    return (index / (categories.length - 1)) * 100;\n  };\n\n  const getXPosition = (year: number) => {\n    return ((year - 1983) / (2025 - 1983)) * 100;\n  };\n\n  // Group data points by year and category to detect overlaps\n  const groupedData = data.reduce((acc, point) => {\n    const key = `${point.year}-${point.category}`;\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(point);\n    return acc;\n  }, {} as Record<string, DataPoint[]>);\n\n  // Calculate offsets for overlapping points\n  const getPositionWithOffset = (point: DataPoint, index: number) => {\n    const key = `${point.year}-${point.category}`;\n    const group = groupedData[key];\n    const pointIndex = group.indexOf(point);\n    const totalInGroup = group.length;\n    \n    let xOffset = 0;\n    let yOffset = 0;\n    \n    if (totalInGroup > 1) {\n      // Spread points horizontally when they overlap\n      const spacing = 3; // 3% horizontal spacing between overlapping points\n      xOffset = (pointIndex - (totalInGroup - 1) / 2) * spacing;\n    }\n    \n    return {\n      x: getXPosition(point.year) + xOffset,\n      y: getYPosition(point.category) + yOffset\n    };\n  };\n\n  return (\n    <div className=\"w-full bg-card dark:bg-card py-8 sm:py-10 md:py-12 px-4 sm:px-6 rounded-lg\">\n      <div className=\"max-w-6xl mx-auto\">\n        <h3 className=\"text-xl sm:text-2xl md:text-3xl font-display font-bold text-center mb-2 text-foreground\">\n          The Race to Democratize Computing (1983-2025)\n        </h3>\n        <p className=\"text-center text-xs sm:text-sm md:text-base font-sans text-muted-foreground mb-8\">\n          How tools, terminology, and teams evolved to make design accessible globally\n        </p>\n        \n        {/* Legend */}\n        <div className=\"flex justify-center gap-2 sm:gap-3 md:gap-4 mb-8 flex-wrap\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: \"hsl(217, 100%, 53%)\" }} />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground\">Desktop Era (1983-2006)</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: \"hsl(292, 48%, 55%)\" }} />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground\">Mobile Era (2007-2015)</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: \"hsl(142, 63%, 39%)\" }} />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground\">Modern Era (2016-2025)</span>\n          </div>\n        </div>\n\n        {/* Chart Container */}\n        <div className=\"relative bg-background border border-primary/10 rounded-lg p-4 sm:p-6 md:p-8\">\n          {/* Y-axis labels */}\n          <div className=\"absolute left-0 top-4 sm:top-6 md:top-8 bottom-4 sm:bottom-6 md:bottom-8 w-24 sm:w-32 md:w-40 flex flex-col justify-between text-right pr-2 sm:pr-3 md:pr-4\">\n            {categories.map((cat, index) => (\n              <div key={cat} className=\"text-[10px] sm:text-xs font-sans text-muted-foreground leading-tight\" style={{ \n                transform: 'translateY(-50%)',\n                position: 'absolute',\n                top: `${(index / (categories.length - 1)) * 100}%`,\n                right: '1rem'\n              }}>\n                {cat}\n              </div>\n            ))}\n          </div>\n\n          {/* Chart area */}\n          <div className=\"ml-24 sm:ml-32 md:ml-40 relative h-64 sm:h-80 md:h-96\">\n            {/* Grid lines - vertical */}\n            {years.map((year) => (\n              <div\n                key={`grid-v-${year}`}\n                className=\"absolute top-0 bottom-0 border-l border-primary/5\"\n                style={{ left: `${getXPosition(year)}%` }}\n              />\n            ))}\n\n            {/* Grid lines - horizontal */}\n            {categories.map((cat, index) => (\n              <div\n                key={`grid-h-${cat}`}\n                className=\"absolute left-0 right-0 border-t border-primary/5\"\n                style={{ top: `${(index / (categories.length - 1)) * 100}%` }}\n              />\n            ))}\n\n            {/* Data points with icons */}\n            {data.map((point, index) => {\n              const position = getPositionWithOffset(point, index);\n              return (<motion.div\n                key={`${point.name}-${index}`}\n                initial={{ scale: 0, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                transition={{ delay: index * 0.05, duration: 0.4 }}\n                className=\"absolute cursor-pointer transform -translate-x-1/2 -translate-y-1/2 group\"\n                style={{\n                  left: `${position.x}%`,\n                  top: `${position.y}%`,\n                }}\n                data-testid={`icon-${point.category.toLowerCase().replace(/\\s+/g, '-')}-${point.name.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                {/* Icon container with colored background */}\n                <div \n                  className=\"w-6 h-6 sm:w-7 sm:h-7 md:w-9 md:h-9 rounded-lg flex items-center justify-center p-1 sm:p-1.5 md:p-2 shadow-md transition-all duration-200 group-hover:scale-125 group-hover:shadow-lg\"\n                  style={{\n                    backgroundColor: getEraColor(point.era),\n                    color: 'white'\n                  }}\n                >\n                  {point.icon}\n                </div>\n                \n                {/* Hover tooltip */}\n                <div className=\"absolute left-1/2 -translate-x-1/2 top-full mt-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none z-10\">\n                  <div className=\"bg-card dark:bg-card text-foreground text-xs rounded-lg px-3 py-2 whitespace-nowrap shadow-xl border border-primary/20\">\n                    <div className=\"font-bold\">{point.name}</div>\n                    <div className=\"text-muted-foreground\">{point.year} - {point.detail}</div>\n                  </div>\n                </div>\n              </motion.div>\n              );\n            })}\n\n            {/* X-axis labels */}\n            <div className=\"absolute left-0 right-0 -bottom-6 flex justify-between\">\n              {years.map((year) => (\n                <div\n                  key={`x-label-${year}`}\n                  className=\"text-[10px] sm:text-xs text-muted-foreground font-mono\"\n                  style={{ \n                    position: 'absolute',\n                    left: `${getXPosition(year)}%`,\n                    transform: 'translateX(-50%)'\n                  }}\n                >\n                  {year}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":12209},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ReadingProgressProvider } from \"@/contexts/reading-progress-context\";\nimport Home from \"@/pages/home\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ReadingProgressProvider>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </ReadingProgressProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":851},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"replit.md":{"content":"# Overview\n\nThis project is a React-based web application presenting \"The History of UX/UI Design: A Treatise on Professional Claims.\" Its core purpose is to mathematically debunk inflated UX/UI experience claims through a data-driven long-form article. The application features a single-page, content-focused website with a sophisticated editorial aesthetic inspired by 18theses.com, incorporating advanced timeline visualizations, stacked area charts, proportional comparison bars, and interactive data visualizations. The technical stack comprises a Vite-powered React frontend with an Express backend, all implemented with TypeScript. The business vision is to provide a compelling, evidence-based narrative that challenges prevailing industry misconceptions about UX/UI expertise.\n\n# Recent Changes (October 2025)\n\n## IBM Carbon Design System Migration (October 8, 2025)\n- Migrated entire application from sage green color palette to IBM Carbon Design System\n- **Light Theme**: White background (#ffffff) with IBM Blue (#0f62fe) primary color\n- **Dark Theme**: Carbon Gray 100 (#161616) with light blue (#78a9ff) primary color\n- Updated all 13+ chart components to use IBM Carbon colors (blue, green, purple, red, yellow)\n- Replaced hardcoded text colors with theme-aware Tailwind classes (text-foreground, text-muted-foreground)\n- Improved chart axis contrast with medium grey (hsl(0, 0%, 45%)) for better visibility in both themes\n- Added custom logo (UXUI-logo.svg) to header and footer with dynamic color changes:\n  - Light mode: Black logo via CSS filter `brightness-0`\n  - Dark mode: White logo via `brightness-0 invert`\n\n## Codebase Cleanup\n- Removed duplicate reading progress implementations (kept context version)\n- Deleted 29 unused UI components (accordion, alert-dialog, carousel, menubar, etc.)\n- Removed 21 unused npm dependencies\n- Cleaned up unused hooks and utilities\n\n## Design System Implementation\nEstablished comprehensive design system with CSS custom properties in `client/src/index.css`:\n- **Color System**: IBM Carbon Design System palette with blue primary, grays, and accent colors\n- **Typography Scale**: Fluid responsive typography with 10 size levels\n- **Spacing System**: Base-8 scale from 0 to 128px\n- **Shadows**: 7-level shadow system\n- **Transitions**: Standardized durations and easing functions\n- **Breakpoints**: Defined for sm, md, lg, xl, 2xl\n- **Z-index Scale**: Organized layering system\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# Design System\n\n## Color Tokens\n\n**IBM Carbon Design System**\n\n**Light Theme**\n- `--background`: hsl(0, 0%, 100%) - White (#ffffff)\n- `--foreground`: hsl(0, 0%, 9%) - Almost black text (#161616)\n- `--primary`: hsl(217, 100%, 53%) - IBM Blue (#0f62fe)\n- `--muted`: hsl(0, 0%, 96%) - Light gray background (#f4f4f4)\n- `--muted-foreground`: hsl(0, 0%, 45%) - Medium gray text\n- `--accent`: hsl(217, 100%, 53%) - IBM Blue accent\n\n**Dark Theme**\n- `--background`: hsl(0, 0%, 9%) - Carbon Gray 100 (#161616)\n- `--foreground`: hsl(0, 0%, 96%) - Light text (#f4f4f4)\n- `--primary`: hsl(215, 100%, 73%) - Light IBM Blue (#78a9ff)\n- `--muted`: hsl(0, 0%, 15%) - Dark gray background (#262626)\n- `--muted-foreground`: hsl(0, 0%, 70%) - Light gray text\n- `--accent`: hsl(215, 100%, 73%) - Light blue accent\n\n**Chart Colors** (IBM Carbon palette)\n- Primary Blue: hsl(217, 100%, 53%) - #0f62fe\n- Success Green: hsl(142, 63%, 39%) - #198038\n- Purple: hsl(292, 48%, 55%) - #a56eff\n- Red: hsl(354, 81%, 49%) - #da1e28\n- Yellow: hsl(47, 86%, 52%) - #f1c21b\n\n## Typography\n\n**Font Families**\n- `--font-sans`: Inter (body text)\n- `--font-display`: Space Grotesk (headings)\n- `--font-mono`: JetBrains Mono (code/data)\n- `--font-serif`: Georgia (quotes/accents)\n\n**Size Scale** (fluid/responsive)\n- `--text-xs` to `--text-6xl`: 10 size levels\n- Uses clamp() for responsive scaling\n\n**Font Weights**\n- `--font-light`: 300\n- `--font-normal`: 400\n- `--font-medium`: 500\n- `--font-semibold`: 600\n- `--font-bold`: 700\n\n**Line Heights**\n- `--leading-none`: 1.0\n- `--leading-tight`: 1.15\n- `--leading-normal`: 1.5\n- `--leading-relaxed`: 1.6\n\n## Spacing\n\nBase-8 scale with CSS custom properties:\n- `--space-1` (4px) through `--space-32` (128px)\n- Additional fractional sizes: `--space-0-5`, `--space-1-5`, etc.\n- Section padding responsive tokens: mobile, tablet, desktop\n\n## Layout\n\n**Content Widths**\n- `--content-max-width`: 1200px\n- `--content-narrow`: 800px\n- `--content-wide`: 1400px\n\n**Breakpoints** (for reference)\n- `--breakpoint-sm`: 640px\n- `--breakpoint-md`: 768px\n- `--breakpoint-lg`: 1024px\n- `--breakpoint-xl`: 1280px\n- `--breakpoint-2xl`: 1536px\n\n## Borders & Shadows\n\n**Border Radius**\n- `--radius-sm` through `--radius-2xl`\n- `--radius-full`: 9999px (pills)\n\n**Shadow System**\n- `--shadow-sm` through `--shadow-2xl`\n- `--shadow-inner`: inset shadow\n\n## Transitions\n\n**Durations**\n- `--duration-75` through `--duration-1000`\n\n**Easing Functions**\n- `--ease-linear`, `--ease-in`, `--ease-out`, `--ease-in-out`\n\n**Combined Presets**\n- `--transition-fast`: 150ms ease-out\n- `--transition-base`: 200ms ease-out\n- `--transition-slow`: 300ms ease-in-out\n\n## Z-index Scale\n\nOrganized layering from `--z-base` (0) to `--z-tooltip` (70):\n- dropdown: 10\n- sticky: 20\n- fixed: 30\n- modal-backdrop: 40\n- modal: 50\n- popover: 60\n- tooltip: 70\n\n## Utility Classes\n\n**Layout**\n- `.container-custom`: Max-width container with padding\n- `.section-padding`: Responsive section spacing\n- `.grid-12`: 12-column grid system\n\n**Effects**\n- `.glass`: Glassmorphism effect\n- `.glass-card`: Card with glass effect\n- `.hover-lift`: Lift on hover\n- `.hover-scale`: Scale on hover\n- `.button-hover`: Button ripple effect\n- `.link-underline`: Animated underline\n\n**Timeline Specific**\n- `.timeline-container`, `.timeline-line`, `.timeline-dot`\n- `.chart-dark-container`: Dark background for charts\n\n# System Architecture\n\n## Frontend Architecture\n\n**Framework & Build System**\n- React 18 with TypeScript\n- Vite for fast development and builds\n- Wouter for client-side routing\n- TanStack Query (React Query) for server state management\n\n**UI Component System**\n- Minimal Shadcn/ui components (button, card, dropdown-menu, form, progress, separator, toast, tooltip, toggle-group)\n- Tailwind CSS with comprehensive design tokens\n- Custom fonts: Inter, Space Grotesk, JetBrains Mono\n- Atomic design principles\n\n**Design Decisions**\n- Default dark theme with extensive CSS custom properties\n- Single-page application structure for long-form content\n- Visual hierarchy through content section dividers\n- Mobile-first responsive design\n- Editorial design inspired by 18theses.com, utilizing distinct visual identities for sections\n- Card-based layouts for content sections\n- Comprehensive mobile responsiveness across all components\n- Standardized UI across all visualizations with muted editorial color palette\n\n## Backend Architecture\n\n**Server Framework**\n- Express.js server with TypeScript\n- Vite integration for HMR during development\n- Middleware for JSON parsing and request/response logging\n\n**Data Layer**\n- Drizzle ORM for PostgreSQL\n- Shared schema for type safety across frontend and backend\n- Zod schemas for runtime validation\n- `IStorage` interface pattern with `MemStorage` fallback\n\n**Server Architecture Decisions**\n- Module-based routing system (`server/routes.ts`)\n- API routes are prefixed with `/api`\n- HTTP server wraps Express\n\n## System Design Choices & Features\n\n**Data Visualizations**\n- **Scatter Plots**: Dynamic scatter plots for timelines like \"Critical Moments in Pre-Digital Interface History,\" \"The Race to Democratize Computing,\" \"Industry Timeline: The Evolution of Design as a Business Function,\" and \"Design Tools Evolution,\" featuring era-based color coding, interactive icons, and hover tooltips\n- **TimelineTrack**: Horizontal timeline with interactive events, detail panels, and era groupings\n- **StackedAreaChart**: Recharts-based area charts with gradient fills and custom tooltips\n- **ProportionalBarGroup**: Horizontal stacked bars with animations and hover tooltips\n- **CurvedToolTimeline**: SVG-based curved timeline showing design tool evolution and relationships\n\n**Navigation & Interactivity**\n- **Timeline Mini-Map Navigation**: Compact, sticky bottom timeline for quick navigation\n- **Dynamic Navigation Header**: Header that hides and reappears with active section highlighting\n- **Animations**: Framer Motion for smooth spring animations, fade-in effects, and transitions\n- **Reading Progress**: Context-based reading progress tracking with localStorage persistence\n\n**Accessibility & Testing**\n- Comprehensive `data-testid` attributes for automated testing\n- Reduced motion support\n- Focus-visible indicators\n- Print styles\n\n## Build & Deployment\n- Vite outputs static assets to `dist/public`\n- ESBuild bundles the server to `dist/index.js`\n- Production mode serves static files via Express; development mode uses Vite middleware\n- Consistent path aliases across TypeScript and Vite\n- Environment-based configuration (NODE_ENV)\n\n# External Dependencies\n\n**Core Dependencies**\n- React 18 & React DOM\n- TypeScript 5.6\n- Vite 5.4\n\n**UI & Styling**\n- Tailwind CSS with plugins (@tailwindcss/typography, @tailwindcss/vite)\n- Radix UI primitives (dialog, dropdown-menu, label, popover, progress, scroll-area, select, separator, slot, toast, tooltip, toggle, toggle-group)\n- Lucide React for iconography\n- React Icons (SI) for brand icons\n- Class Variance Authority (CVA) for component variants\n- Framer Motion for animations\n\n**Data & Forms**\n- TanStack Query (React Query) for data fetching\n- React Hook Form for form management\n- Zod for schema validation\n- @hookform/resolvers for Zod integration\n\n**Utilities**\n- date-fns for date formatting\n- clsx & tailwind-merge for className management\n- Wouter for routing\n- Recharts for data visualization\n\n**Development Tools**\n- Replit Vite plugins (cartographer, dev-banner, runtime-error-modal)\n- @types packages for TypeScript\n- PostCSS & Autoprefixer\n","size_bytes":10020},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/reading-progress-bar.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { motion, useScroll, useSpring } from \"framer-motion\";\n\nexport default function ReadingProgressBar() {\n  const { scrollYProgress } = useScroll();\n  const scaleX = useSpring(scrollYProgress, {\n    stiffness: 100,\n    damping: 30,\n    restDelta: 0.001\n  });\n\n  return (\n    <motion.div\n      className=\"fixed top-0 left-0 right-0 h-1 bg-accent origin-left z-50\"\n      style={{ scaleX }}\n    />\n  );\n}\n","size_bytes":451},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":824},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/conclusion-section.tsx":{"content":"export default function ConclusionSection() {\n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\" data-testid=\"section-conclusion\">\n      <div className=\"max-w-3xl mx-auto space-y-12\">\n        <h2 className=\"font-display text-4xl sm:text-5xl font-bold leading-tight text-center\" data-testid=\"text-conclusion-heading\">\n          The Mathematical Proof of Professional Timeline\n        </h2>\n\n        <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n          <blockquote className=\"border-l-4 border-accent pl-6 italic text-xl\">\n            \"A little fact-checking now and then is a good thing, and as necessary in the professional world as audits in the financial.\"\n          </blockquote>\n\n          <div className=\"not-prose\">\n            <p className=\"text-muted uppercase tracking-wider text-sm font-mono mb-4\">Historical Verification</p>\n          </div>\n\n          <p>\n            I present these facts not because I hate the UX/UI profession, but because I love it profoundly.\n          </p>\n\n          <p>\n            We are in a state of <strong>undeclared resume inflation</strong>. For more than a decade, we've accepted <strong>chronologically impossible experience claims</strong> born from a <strong>complacent hiring process</strong> with no historical verification. We have <strong>believed inflated timelines for too long</strong>.\n          </p>\n\n          <p>\n            <strong>Change is now possible</strong> because we all realize there is something worse than correcting false claims: <strong>professional credibility collapse</strong>. We have no time to waste in <strong>establishing accurate professional standards</strong> we can depend on for reliable hiring.\n          </p>\n\n          <p className=\"text-xl font-medium text-foreground\">\n            It was accurate professional standards that underwrote industry credibility. They can once again if we embrace historical facts as our foundation.\n          </p>\n\n          <div className=\"mt-12 p-8 bg-accent/10 rounded-lg border border-accent\">\n            <h3 className=\"font-display text-2xl font-semibold mb-6\">Maximum Possible Experience Calculations</h3>\n            <p className=\"text-sm text-muted uppercase tracking-wider mb-4\">For 2025 Claims:</p>\n            <ul className=\"space-y-3 list-none\">\n              <li><strong>Don Norman (field creator):</strong> 32 years maximum (1993-2025)</li>\n              <li><strong>Early pioneers (1995 start):</strong> 30 years maximum</li>\n              <li><strong>Professional practice (2000 start):</strong> 25 years maximum</li>\n              <li><strong>Industry standards (2005 start):</strong> 20 years maximum</li>\n              <li><strong>Mainstream adoption (2010 start):</strong> 15 years maximum</li>\n            </ul>\n            <p className=\"mt-6 text-lg font-medium\">\n              <strong>REALITY CHECK:</strong> Anyone claiming 25+ years of dedicated UX/UI experience must be <strong>among the documented founders of the field</strong> with verifiable professional history.\n            </p>\n            <p className=\"mt-4 text-xl font-bold text-foreground\">\n              The evidence is definitive: Claims exceeding these mathematical limits are chronologically impossible and professionally misleading.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3377},"client/src/components/theses-section.tsx":{"content":"import FadeInSection from \"@/components/fade-in-section\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\n\nexport default function ThesesSection() {\n  const theses = [\n    {\n      number: 1,\n      title: \"Mathematical Timeline Impossibility: To have 25-20 years of UX & UI experience. \",\n      content: (\n        <>\n          Don Norman coined \"User Experience\" in <span className=\"font-bold\">1993</span> at Apple. This establishes an absolute mathematical constraint:{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold text-black cursor-help border-b border-dotted border-black/40\">\n                Max_UX_Experience = 2025 - 1993 = 32 years\n              </span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Current Year (2025) minus Field Origin Year (1993) equals maximum possible experience. Anyone claiming more than 32 years is mathematically impossible.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Only Don Norman himself could claim this maximum. Claims like{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">\"40+ years of UX experience\"</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">40 - 32 = 8 years impossible. This claim exceeds the maximum by 8 years.</p>\n            </TooltipContent>\n          </Tooltip>{\" \"}\n          are impossible by 8 years,{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">\"35 years designing user experiences\"</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">35 - 32 = 3 years before term existed. Would require starting in 1990, before \"UX\" was coined.</p>\n            </TooltipContent>\n          </Tooltip>{\" \"}\n          predates the term by 3 years, and \"UX pioneer since the 1980s\" references a field that didn't exist. Our timeline chart shows only{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">100 professionals globally in 1993</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">First year of \"UX\" as a formal field. Only founding members at Apple and a handful of early adopters.</p>\n            </TooltipContent>\n          </Tooltip>\n          , rising to{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">800,000 in 2025</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Growth rate: 100 → 800,000 = 8,000× increase over 32 years (exponential adoption curve).</p>\n            </TooltipContent>\n          </Tooltip>\n          .\n        </>\n      )\n    },\n    {\n      number: 2,\n      title: \"Tool Availability Constraints: The Photoshop Fallacy\",\n      content: (\n        <>\n          Professional UI design tools have strict inception dates that create mathematical constraints on experience claims. Photoshop launched in{\" \"}\n          <span className=\"font-bold\">1988</span> (37 years, not UI-specific), Sketch in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2010 (15 years max)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2010 = 15 years maximum possible Sketch experience.</p>\n            </TooltipContent>\n          </Tooltip>\n          , and Figma in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2016 (only 9 years)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2016 = 9 years. Figma is less than a decade old, making \"15+ years\" claims impossible.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Market share data from 2024 shows{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">Figma at 65%, Sketch at 10%, and Photoshop at 8%</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Figma overtook Sketch in 2020, just 4 years after launch. Dominance achieved in record time.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Claims like \"15+ years Figma experience\" are impossible when the tool is only 9 years old, \"Sketch user since 2005\" predates launch by 5 years, and \"20 years with collaborative design tools\" references technology that didn't exist.\n        </>\n      )\n    },\n    {\n      number: 3,\n      title: \"Role Non-Existence: When Jobs Weren't Even Imagined\",\n      content: (\n        <>\n          Specific UX/UI job titles emerged at documented points in history. Claims predating these points are mathematically impossible. Interaction Designer was first documented in{\" \"}\n          <span className=\"font-bold\">1990</span> by Bill Moggridge, Information Architect in <span className=\"font-bold\">1976</span> by Richard Saul Wurman, UX Designer in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">1995 (post-Norman)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2 years after Don Norman coined \"UX\" in 1993. The term needed time to become a job title.</p>\n            </TooltipContent>\n          </Tooltip>\n          , UI Designer in the <span className=\"font-bold\">late 1990s</span>, Product Designer in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2008 in Silicon Valley</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2008 = 17 years maximum. Role emerged during iPhone app boom.</p>\n            </TooltipContent>\n          </Tooltip>\n          , UX Researcher in the <span className=\"font-bold\">2000s</span>, and Design Systems Engineer in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2014 (post-Material Design)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2014 = 11 years maximum. Role created after Google's Material Design in 2014.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Job market data shows{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">fewer than 100 UX roles globally before 2000</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Pre-2000 UX was experimental. Probability of being one of first 100: 0.0125%.</p>\n            </TooltipContent>\n          </Tooltip>\n          , approximately 2,000 roles in 2005, 50,000 in 2010, and over 800,000 in 2025.\n        </>\n      )\n    },\n    {\n      number: 4,\n      title: \"Education Program Timeline: Academic Reality Check\",\n      content: (\n        <>\n          Formal UX/UI education has a traceable history. Claims of degrees or certifications must align with institutional records. The first HCI conference (CHI) was established in{\" \"}\n          <span className=\"font-bold\">1982</span>, Carnegie Mellon launched the first HCI Master's program in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">1990</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 1990 = 35 years maximum formal HCI education possible.</p>\n            </TooltipContent>\n          </Tooltip>\n          , Stanford began teaching Human-Computer Interaction in <span className=\"font-bold\">1994</span>, MIT Media Lab expanded its interaction design curriculum in <span className=\"font-bold\">2003</span>, the first UX bootcamps appeared in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2012 (General Assembly)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2012 = 13 years maximum bootcamp certificate age.</p>\n            </TooltipContent>\n          </Tooltip>\n          , and industry certifications became widespread in <span className=\"font-bold\">2015</span>. Maximum formal education timelines: HCI degree{\" \"}\n          <span className=\"font-bold\">35 years (1990-2025)</span>, UX-specific degree approximately <span className=\"font-bold\">20 years</span>, and bootcamp certificate{\" \"}\n          <span className=\"font-bold\">13 years maximum</span>.\n        </>\n      )\n    },\n    {\n      number: 5,\n      title: \"Industry Adoption Curves: The S-Curve Reality\",\n      content: (\n        <>\n          UX adoption followed a classic S-curve with mathematically predictable inflection points. The Innovation Phase (1990-2000) saw approximately{\" \"}\n          <span className=\"font-bold\">100 companies experimenting</span>, mostly tech giants. Early Adoption (2000-2007) reached{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2.5% of companies</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Innovators phase complete. Early adopters concentrated in Silicon Valley.</p>\n            </TooltipContent>\n          </Tooltip>{\" \"}\n          with Silicon Valley concentration. Early Majority (2007-2015) achieved{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">34% adoption post-iPhone revolution</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">iPhone launch in 2007 triggered mass UX adoption. Mobile apps required UX expertise.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Late Majority (2015-2020) brought{\" \"}\n          <span className=\"font-bold\">68% adoption</span> through enterprise transformation. Laggards (2020-present) represent the final{\" \"}\n          <span className=\"font-bold\">16%</span> in traditional industries. The S-curve formula for UX adoption:{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold font-mono cursor-help border-b border-dotted border-black/40\">A(t) = 100% / (1 + e^(-0.35(t-2011)))</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Logistic growth function. Inflection point at 2011 (50% adoption). Growth rate k=0.35.</p>\n            </TooltipContent>\n          </Tooltip>\n          , where t = year and inflection occurred at 2011.\n        </>\n      )\n    },\n    {\n      number: 6,\n      title: \"Geographic Impossibilities: India-Specific Constraints for Managers\",\n      content: (\n        <>\n          UX/UI practices spread geographically over time. For Indian managers claiming 20-25 years while staying in India, the timeline proves impossibility. UX adoption in India began experimentally in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">late 1990s during Y2K boom</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">1997-1999: Experimental UX driven by IT outsourcing and global firms introducing processes. Pre-2000 UX was \"non-existent\" or experimental.</p>\n            </TooltipContent>\n          </Tooltip>\n          , when global firms introduced UX processes to align with international standards. Formal/mainstream UX roles emerged around{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2000 with S-curve adoption</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Early adopters (2000-2007): ~2.5% of companies. Accelerated post-iPhone (2007) to 34% by 2015. Mainstream UX hit ~2010.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Maximum possible experience for someone starting in India:{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">25 years (2000-2025)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Only for pioneers in experimental roles. Probability ~0.0125% globally for early involvement, even lower locally. Pre-2000 had crowded interfaces without user studies.</p>\n            </TooltipContent>\n          </Tooltip>\n          , but only for pioneers—statistically rare. Claims of 20-25 years require starting between{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2000-2005</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">But mainstream UX (dedicated teams, design thinking) only hit ~2010, limiting realistic max to 15-20 years for most. Managerial positions postdate team formations.</p>\n            </TooltipContent>\n          </Tooltip>\n          . For managers (senior roles implying leadership in established teams), this is even tighter, as managerial positions postdate team formations. Claims like \"Indian manager with 25 years UX experience\" would need to have started in 2000, but pre-2000 UX was experimental. Claims exceeding 25 years are impossible; 20-25 are dubious without evidence of pioneering work in India.\n        </>\n      )\n    },\n    {\n      number: 7,\n      title: \"Technology Prerequisites: The Mobile UX Boundary\",\n      content: (\n        <>\n          Platform-specific UX experience is bounded by technology availability. Desktop GUI launched with the Xerox Alto in <span className=\"font-bold\">1973</span>, Web Design with the Mosaic browser in <span className=\"font-bold\">1993</span>, Flash/Interactive Web in <span className=\"font-bold\">1996</span>, Mobile Touch UX with the{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">iPhone in 2007 (18 years maximum)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2007 = 18 years. First capacitive touch interface. Pre-iPhone mobile UX was stylus-based.</p>\n            </TooltipContent>\n          </Tooltip>\n          , Tablet UX with the iPad in <span className=\"font-bold\">2010</span>, Responsive Design was formalized by Ethan Marcotte in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2010 (15 years maximum)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2010 = 15 years. Term coined in A List Apart article May 2010.</p>\n            </TooltipContent>\n          </Tooltip>\n          , Voice UI with Siri in <span className=\"font-bold\">2011</span>, AR/VR Design with consumer VR in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2016 (9 years maximum)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2016 = 9 years. Oculus Rift and HTC Vive consumer release.</p>\n            </TooltipContent>\n          </Tooltip>\n          , and AI-assisted Design in the ChatGPT era of{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2022 (3 years maximum)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2022 = 3 years. ChatGPT launched November 2022, enabling AI design tools.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Claims predating these technology availability dates are mathematically impossible.\n        </>\n      )\n    },\n    {\n      number: 8,\n      title: \"Methodology Evolution: Process Development Timeline\",\n      content: (\n        <>\n          UX methodologies were developed and formalized at specific points in history. Usability Testing was established at Xerox in <span className=\"font-bold\">1981</span>, Heuristic Evaluation by Nielsen in <span className=\"font-bold\">1990</span>, Card Sorting was formalized in <span className=\"font-bold\">1985</span>, Personas by Alan Cooper in <span className=\"font-bold\">1998</span>, Design Thinking was popularized by IDEO in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2008 (17 years maximum)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2008 = 17 years. IDEO's HCD toolkit widely adopted post-2008.</p>\n            </TooltipContent>\n          </Tooltip>\n          , Lean UX by Jeff Gothelf in <span className=\"font-bold\">2011</span>, Design Sprints by Google Ventures in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2016 (9 years maximum)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">2025 - 2016 = 9 years. Jake Knapp's book \"Sprint\" published 2016.</p>\n            </TooltipContent>\n          </Tooltip>\n          , Jobs-to-be-Done by Christensen in <span className=\"font-bold\">2003</span>, and Atomic Design by Brad Frost in <span className=\"font-bold\">2013</span>. Claims of \"Design thinking expert in the 1980s\" or \"Agile UX since 1990\" predate the formalization of these methodologies.\n        </>\n      )\n    },\n    {\n      number: 9,\n      title: \"Company Hiring Records: Proving Impossibility for Indian Managers at Popular Companies\",\n      content: (\n        <>\n          For managers in specific companies who stayed in India, 20-25 years is impossible if their UX teams formed later. TCS began user-driven development by{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">late 1990s with formal practices developing in the early 2000s</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">~25-28 years max if experimental start in 1997. Possible for 20-25 if started early, but managers likely post-2000 (max ~25). Claims &gt;25 impossible. Rare for pure India-stay as early work tied to global Y2K projects.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Infosys launched design thinking initiative in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2014 under Vishal Sikka</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">11 years max (2014-2025). Impossible for 20-25 years. Pre-2014 claims reference non-UX roles (e.g., general IT). UX via acquisitions like Brilliant Basics (2017), WongDoody (2018).</p>\n            </TooltipContent>\n          </Tooltip>\n          . Wipro Digital launched in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2014, Designit acquired 2015</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">11 years max. Impossible for 20-25 years. Pre-2014 UX was absent in India operations.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Tech Mahindra established UX research in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2007, formal practice ~2015</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">18 years max from 2007. Impossible for 25 years. 20 years only if started exactly in 2005 (rare for managers). Precursor Satyam in late 1990s. Claims &gt;18 impossible.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Google India started UX in{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">2008 for India-specific projects</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">17 years max. Impossible for 20-25 years. India ops from 2004, UX teams later. Maps adaptations drove UX focus.</p>\n            </TooltipContent>\n          </Tooltip>\n          . Apple India UX began{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">~2020 with developer collaborations</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Maximum 7 years at Apple India. Claims before 2018 are impossible as Apple’s UX presence was limited.</p>\n            </TooltipContent>\n          </Tooltip>\n              <p className=\"text-sm\">5 years max. Impossible for 20-25 years. Any higher claims require non-India experience. Limited presence before 2020.</p>\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">~2010 in Hyderabad IDC</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">15 years max. Impossible for 20-25 years. India ops from 1990, UX minimal pre-2010. Design teams formed in 2010s.</p>\n            </TooltipContent>\n          </Tooltip>\n          . This proves: For managers in Infosys, Wipro, Google, Apple, or Microsoft (majority cases), 20-25 years is mathematically impossible if stayed in India (5-17 years max). Even for TCS/Tech Mahindra, 25+ is impossible, and 20-25 requires verifiable pioneer status. Cross-reference with global constraints (UX coined 1993, tools like Figma 2016) amplifies impossibilities. Indian managers with legitimate 20-25 years likely had international experience or conflate non-UX IT roles with UX.\n        </>\n      )\n    },\n    {\n      number: 10,\n      title: \"Professional Community Size: The Numbers Don't Lie\",\n      content: (\n        <>\n          The global UX community grew exponentially, creating statistical constraints on certain claims. In 1993, there were approximately{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">100 UX professionals globally</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">P(being in first 100) = 100/800,000 = 0.0125%. Claiming pioneer status is statistically rare.</p>\n            </TooltipContent>\n          </Tooltip>{\" \"}\n          at the founding. By 1995, this grew to around 500 (400% growth). The year 2000 saw approximately 2,000 professionals (300% growth over 5 years). In 2005, there were around 10,000 (400% growth), in 2010 approximately 50,000 (400% growth), in 2015 around 150,000 (200% growth), in 2020 approximately 500,000 (230% growth), and in 2025 an estimated{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">800,000 professionals (60% growth over 5 years)</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">Growth formula: Community_Size(Year) = 100 × e^(0.35(Year-1993)). Exponential adoption.</p>\n            </TooltipContent>\n          </Tooltip>\n          . The probability of being in the first 100 is 0.0125%, yet{\" \"}\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <span className=\"font-bold cursor-help border-b border-dotted border-black/40\">5% of LinkedIn profiles claim \"UX pioneer\" status</span>\n            </TooltipTrigger>\n            <TooltipContent className=\"max-w-xs\">\n              <p className=\"text-sm\">40,000 claimed pioneers vs. 100 actual = 400× inflation. Statistically equivalent to 400% of people being astronauts.</p>\n            </TooltipContent>\n          </Tooltip>\n          —a mathematical impossibility representing 400 times more pioneers than actually existed.\n        </>\n      )\n    }\n  ];\n\n  return (\n    <TooltipProvider delayDuration={300}>\n      <section className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12 bg-[#f5f2ed]\" data-testid=\"section-theses\">\n        <div className=\"max-w-4xl mx-auto space-y-12\">\n          {/* Section Label */}\n          <div className=\"text-center mb-16\">\n            <h2 \n              className=\"text-xs sm:text-sm uppercase tracking-[0.2em] text-[#6b6b6b] mb-4\"\n              data-testid=\"label-professional-claims\"\n            >\n              Professional Claims\n            </h2>\n            <h3 className=\"text-3xl sm:text-4xl lg:text-5xl font-display font-light leading-tight text-black\">\n              Mathematical Proofs of Timeline Impossibilities\n            </h3>\n          </div>\n\n          {/* Thesis Cards */}\n          <div className=\"space-y-8\">\n            {theses.map((thesis) => (\n              <FadeInSection key={thesis.number}>\n                <div \n                  className=\"flex gap-6 items-start\"\n                  data-testid={`card-thesis-${thesis.number}`}\n                >\n                  {/* Circled Number */}\n                  <div \n                    className=\"flex-shrink-0 w-12 h-12 rounded-full border-2 border-black flex items-center justify-center\"\n                    data-testid={`number-thesis-${thesis.number}`}\n                  >\n                    <span className=\"text-black font-mono text-xs sm:text-sm font-bold\">\n                      {String(thesis.number).padStart(2, '0')}\n                    </span>\n                  </div>\n\n                  {/* Content */}\n                  <div className=\"flex-1 space-y-4\">\n                    <h4 \n                      className=\"text-xl sm:text-2xl md:text-3xl font-display font-bold leading-tight text-black\"\n                      data-testid={`title-thesis-${thesis.number}`}\n                    >\n                      {thesis.title}\n                    </h4>\n                    <div \n                      className=\"text-sm sm:text-base leading-[1.8] text-justify text-black/90\"\n                      data-testid={`description-thesis-${thesis.number}`}\n                    >\n                      {thesis.content}\n                    </div>\n                  </div>\n                </div>\n              </FadeInSection>\n            ))}\n          </div>\n        </div>\n      </section>\n    </TooltipProvider>\n  );\n}","size_bytes":28950},"client/src/components/data-callout.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { TrendingUp, AlertCircle, Info, DollarSign, Users, Calendar, Percent, BarChart3 } from \"lucide-react\";\nimport { LucideIcon } from \"lucide-react\";\n\nexport type DataCalloutType = \"trend\" | \"alert\" | \"info\" | \"money\" | \"users\" | \"date\" | \"percentage\" | \"chart\";\nexport type DataCalloutDisplay = \"inline\" | \"standalone\";\n\ninterface DataCalloutProps {\n  value: string;\n  label?: string;\n  type?: DataCalloutType;\n  display?: DataCalloutDisplay;\n  className?: string;\n}\n\nconst iconMap: Record<DataCalloutType, LucideIcon> = {\n  trend: TrendingUp,\n  alert: AlertCircle,\n  info: Info,\n  money: DollarSign,\n  users: Users,\n  date: Calendar,\n  percentage: Percent,\n  chart: BarChart3,\n};\n\nexport default function DataCallout({\n  value,\n  label,\n  type = \"info\",\n  display = \"standalone\",\n  className = \"\",\n}: DataCalloutProps) {\n  const Icon = iconMap[type];\n\n  if (display === \"inline\") {\n    return (\n      <motion.span\n        initial={{ opacity: 0, scale: 0.95 }}\n        whileInView={{ opacity: 1, scale: 1 }}\n        viewport={{ once: true }}\n        transition={{ duration: 0.3 }}\n        className={`inline-flex items-center gap-1.5 px-3 py-1 bg-accent/10 text-accent rounded-md font-semibold ${className}`}\n      >\n        <Icon className=\"w-4 h-4\" />\n        <span>{value}</span>\n      </motion.span>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20, scale: 0.95 }}\n      whileInView={{ opacity: 1, y: 0, scale: 1 }}\n      viewport={{ once: true, amount: 0.5 }}\n      transition={{ duration: 0.5, ease: \"easeOut\" }}\n      className={`my-8 p-6 bg-gradient-to-br from-accent/10 to-accent/5 border border-accent/20 rounded-lg ${className}`}\n    >\n      <div className=\"flex items-center gap-4\">\n        <div className=\"p-3 bg-accent/20 rounded-lg\">\n          <Icon className=\"w-6 h-6 text-accent\" />\n        </div>\n        <div className=\"flex-1\">\n          <div className=\"text-3xl sm:text-4xl font-bold text-accent\">\n            {value}\n          </div>\n          {label && (\n            <div className=\"mt-1 text-sm sm:text-base text-foreground/70\">\n              {label}\n            </div>\n          )}\n        </div>\n      </div>\n    </motion.div>\n  );\n}","size_bytes":2229},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/animated-bar-chart.tsx":{"content":"import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Card } from './ui/card';\nimport { motion } from 'framer-motion';\n\ninterface DataPoint {\n  name: string;\n  [key: string]: number | string;\n}\n\ninterface AnimatedBarChartProps {\n  data: DataPoint[];\n  title: string;\n  description?: string;\n  bars: Array<{\n    dataKey: string;\n    name: string;\n    color: string;\n  }>;\n}\n\nexport default function AnimatedBarChart({ data, title, description, bars }: AnimatedBarChartProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true }}\n      transition={{ duration: 0.6 }}\n    >\n      <Card className=\"p-4 sm:p-6 md:p-8 glass-card\">\n        <div className=\"mb-6\">\n          <h4 className=\"text-lg sm:text-xl md:text-2xl font-semibold mb-2\">{title}</h4>\n          {description && (\n            <p className=\"text-xs sm:text-sm md:text-base text-muted-foreground\">{description}</p>\n          )}\n        </div>\n        \n        <div className=\"h-64 sm:h-80 md:h-96 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(217, 100%, 53%)\" opacity={0.05} />\n            <XAxis \n              dataKey=\"name\" \n              stroke=\"transparent\"\n              tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n              className=\"text-xs sm:text-sm\"\n              axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n              tickLine={false}\n            />\n            <YAxis \n              stroke=\"transparent\"\n              tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n              className=\"text-xs sm:text-sm\"\n              axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n              tickLine={false}\n            />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'hsl(var(--card))',\n                border: '1px solid hsl(217, 100%, 53%, 0.4)',\n                borderRadius: '8px',\n                color: 'hsl(var(--foreground))'\n              }}\n              labelStyle={{ color: 'hsl(var(--foreground))' }}\n            />\n            <Legend \n              wrapperStyle={{ \n                fontFamily: 'JetBrains Mono',\n                fontSize: '11px'\n              }}\n              className=\"text-xs sm:text-sm\"\n            />\n            {bars.map((bar) => (\n              <Bar\n                key={bar.dataKey}\n                dataKey={bar.dataKey}\n                name={bar.name}\n                fill={bar.color}\n                radius={[4, 4, 0, 0]}\n              />\n            ))}\n          </BarChart>\n        </ResponsiveContainer>\n        </div>\n      </Card>\n    </motion.div>\n  );\n}\n","size_bytes":2860},"client/src/components/scroll-progress.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function ScrollProgress() {\n  const [scrollProgress, setScrollProgress] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      // Calculate scroll progress\n      const windowHeight = window.innerHeight;\n      const documentHeight = document.documentElement.scrollHeight;\n      const scrollTop = window.scrollY;\n      const scrollDistance = documentHeight - windowHeight;\n      const progress = scrollDistance > 0 ? (scrollTop / scrollDistance) * 100 : 0;\n      \n      setScrollProgress(Math.min(100, Math.max(0, progress)));\n    };\n\n    // Initial check\n    handleScroll();\n\n    // Add event listener with throttling\n    let ticking = false;\n    const updateScrollProgress = () => {\n      if (!ticking) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n        });\n        ticking = true;\n      }\n    };\n\n    window.addEventListener(\"scroll\", updateScrollProgress);\n    window.addEventListener(\"resize\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", updateScrollProgress);\n      window.removeEventListener(\"resize\", handleScroll);\n    };\n  }, []);\n\n  return (\n    <>\n      {/* Progress bar container - fixed at very top */}\n      <div \n        className=\"fixed top-0 left-0 right-0 z-[60] h-[3px] bg-background/50\"\n        data-testid=\"scroll-progress-container\"\n        aria-hidden=\"true\"\n      >\n        {/* Progress bar fill */}\n        <div\n          className={cn(\n            \"h-full transition-all duration-150 ease-out\",\n            \"bg-primary\",\n            \"shadow-[0_0_10px_rgba(15,98,254,0.5)]\"\n          )}\n          style={{\n            width: `${scrollProgress}%`,\n            transformOrigin: \"left\",\n          }}\n          data-testid=\"scroll-progress-bar\"\n        />\n        \n        {/* Subtle glow effect at the end of the progress bar */}\n        <div\n          className={cn(\n            \"absolute top-0 h-full w-8 bg-gradient-to-r from-primary to-transparent opacity-60\",\n            \"blur-sm transition-all duration-150\"\n          )}\n          style={{\n            left: `calc(${scrollProgress}% - 8px)`,\n            opacity: scrollProgress > 0 && scrollProgress < 100 ? 0.6 : 0,\n          }}\n        />\n      </div>\n\n      {/* Optional percentage indicator (hidden by default, can be shown on hover/focus) */}\n      <div\n        className={cn(\n          \"fixed top-3 right-4 z-[60] text-xs font-mono text-accent opacity-0\",\n          \"transition-opacity duration-300\",\n          \"pointer-events-none select-none\",\n          // Uncomment to show on scroll\n          // scrollProgress > 0 && scrollProgress < 100 && \"opacity-50\"\n        )}\n        data-testid=\"scroll-progress-percentage\"\n      >\n        {Math.round(scrollProgress)}%\n      </div>\n    </>\n  );\n}","size_bytes":2875},"client/src/components/byline-strip.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { User, Calendar, Clock, FileText, BookOpen, TrendingUp, Eye } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { format } from \"date-fns\";\n\ninterface BylineStripProps {\n  variant?: \"full\" | \"condensed\";\n  showScrollProgress?: boolean;\n}\n\nexport default function BylineStrip({ variant = \"full\", showScrollProgress = false }: BylineStripProps) {\n  const [scrollProgress, setScrollProgress] = useState(0);\n  const [viewCount] = useState(Math.floor(Math.random() * 10000) + 5000); // Simulated view count\n  \n  // Article metadata\n  const author = \"Research & Analysis Team\";\n  const articleType = \"Investigative Analysis\";\n  const publicationDate = new Date(); // Current date\n  const lastUpdatedDate = publicationDate; // Same as publication for now\n  const wordCount = 6847; // Estimated based on content\n  const readingTimeMinutes = Math.ceil(wordCount / 230); // Average reading speed\n  \n  useEffect(() => {\n    if (!showScrollProgress) return;\n    \n    const handleScroll = () => {\n      const windowHeight = window.innerHeight;\n      const documentHeight = document.documentElement.scrollHeight;\n      const scrollTop = window.scrollY;\n      const scrollableHeight = documentHeight - windowHeight;\n      const progress = Math.min((scrollTop / scrollableHeight) * 100, 100);\n      setScrollProgress(Math.round(progress));\n    };\n    \n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll(); // Initial check\n    \n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [showScrollProgress]);\n  \n  const isUpdated = lastUpdatedDate.getTime() !== publicationDate.getTime();\n  \n  if (variant === \"condensed\") {\n    return (\n      <div className=\"flex items-center gap-3 text-xs font-mono text-muted\">\n        <div className=\"flex items-center gap-1\">\n          <User className=\"w-3 h-3\" />\n          <span>{author.split(\" \").map(w => w[0]).join(\"\")}</span>\n        </div>\n        <span className=\"text-accent/50\">•</span>\n        <div className=\"flex items-center gap-1\">\n          <Clock className=\"w-3 h-3\" />\n          <span>{readingTimeMinutes} min</span>\n        </div>\n        {showScrollProgress && (\n          <>\n            <span className=\"text-accent/50\">•</span>\n            <div className=\"flex items-center gap-1\">\n              <TrendingUp className=\"w-3 h-3\" />\n              <span>{scrollProgress}%</span>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n  \n  return (\n    <div \n      className={cn(\n        \"w-full\",\n        \"bg-background/50 backdrop-blur-sm\",\n        \"border border-accent/20 rounded-lg\",\n        \"p-4 sm:p-5\",\n        \"transition-all duration-300\"\n      )}\n      data-testid=\"byline-strip\"\n    >\n      {/* Desktop Layout - Horizontal */}\n      <div className=\"hidden md:flex items-center justify-center gap-6 font-mono text-sm\">\n        {/* Author */}\n        <div className=\"flex items-center gap-2 text-foreground/90\">\n          <User className=\"w-4 h-4 text-accent\" />\n          <span data-testid=\"text-byline-author\">{author}</span>\n        </div>\n        \n        {/* Divider */}\n        <div className=\"w-px h-4 bg-accent/20\" />\n        \n        {/* Article Type */}\n        <div className=\"flex items-center gap-2 text-foreground/90\">\n          <FileText className=\"w-4 h-4 text-accent\" />\n          <span data-testid=\"text-byline-type\">{articleType}</span>\n        </div>\n        \n        {/* Divider */}\n        <div className=\"w-px h-4 bg-accent/20\" />\n        \n        {/* Publication Date */}\n        <div className=\"flex items-center gap-2 text-foreground/90\">\n          <Calendar className=\"w-4 h-4 text-accent\" />\n          <span data-testid=\"text-byline-date\">\n            {format(publicationDate, \"MMMM d, yyyy\")}\n          </span>\n        </div>\n        \n        {/* Divider */}\n        <div className=\"w-px h-4 bg-accent/20\" />\n        \n        {/* Reading Time */}\n        <div className=\"flex items-center gap-2 text-foreground/90\">\n          <Clock className=\"w-4 h-4 text-accent\" />\n          <span data-testid=\"text-byline-reading-time\">{readingTimeMinutes} min read</span>\n        </div>\n        \n        {/* Divider */}\n        <div className=\"w-px h-4 bg-accent/20\" />\n        \n        {/* Word Count */}\n        <div className=\"flex items-center gap-2 text-foreground/90\">\n          <BookOpen className=\"w-4 h-4 text-accent\" />\n          <span data-testid=\"text-byline-word-count\">{wordCount.toLocaleString()} words</span>\n        </div>\n        \n        {/* View Count */}\n        <div className=\"hidden lg:flex items-center gap-2 text-foreground/90\">\n          <div className=\"w-px h-4 bg-accent/20\" />\n          <Eye className=\"w-4 h-4 text-accent\" />\n          <span data-testid=\"text-byline-views\">{viewCount.toLocaleString()} views</span>\n        </div>\n        \n        {/* Scroll Progress */}\n        {showScrollProgress && (\n          <>\n            <div className=\"w-px h-4 bg-accent/20\" />\n            <div className=\"flex items-center gap-2 text-foreground/90\">\n              <TrendingUp className=\"w-4 h-4 text-accent\" />\n              <span data-testid=\"text-byline-progress\">{scrollProgress}% complete</span>\n            </div>\n          </>\n        )}\n      </div>\n      \n      {/* Tablet Layout - 2 Columns */}\n      <div className=\"hidden sm:flex md:hidden flex-col gap-3 font-mono text-sm\">\n        <div className=\"flex items-center justify-center gap-4\">\n          {/* Author */}\n          <div className=\"flex items-center gap-2 text-foreground/90\">\n            <User className=\"w-4 h-4 text-accent\" />\n            <span>{author}</span>\n          </div>\n          \n          <div className=\"w-px h-4 bg-accent/20\" />\n          \n          {/* Article Type */}\n          <div className=\"flex items-center gap-2 text-foreground/90\">\n            <FileText className=\"w-4 h-4 text-accent\" />\n            <span>{articleType}</span>\n          </div>\n          \n          <div className=\"w-px h-4 bg-accent/20\" />\n          \n          {/* Publication Date */}\n          <div className=\"flex items-center gap-2 text-foreground/90\">\n            <Calendar className=\"w-4 h-4 text-accent\" />\n            <span>{format(publicationDate, \"MMM d, yyyy\")}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center justify-center gap-4\">\n          {/* Reading Time */}\n          <div className=\"flex items-center gap-2 text-foreground/90\">\n            <Clock className=\"w-4 h-4 text-accent\" />\n            <span>{readingTimeMinutes} min read</span>\n          </div>\n          \n          <div className=\"w-px h-4 bg-accent/20\" />\n          \n          {/* Word Count */}\n          <div className=\"flex items-center gap-2 text-foreground/90\">\n            <BookOpen className=\"w-4 h-4 text-accent\" />\n            <span>{wordCount.toLocaleString()} words</span>\n          </div>\n          \n          {showScrollProgress && (\n            <>\n              <div className=\"w-px h-4 bg-accent/20\" />\n              <div className=\"flex items-center gap-2 text-foreground/90\">\n                <TrendingUp className=\"w-4 h-4 text-accent\" />\n                <span>{scrollProgress}%</span>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      \n      {/* Mobile Layout - Stacked */}\n      <div className=\"flex sm:hidden flex-col items-center gap-3 font-mono text-xs\">\n        <div className=\"flex flex-wrap items-center justify-center gap-x-3 gap-y-2\">\n          {/* Author */}\n          <div className=\"flex items-center gap-1.5 text-foreground/90\">\n            <User className=\"w-3.5 h-3.5 text-accent\" />\n            <span>{author}</span>\n          </div>\n          \n          {/* Article Type */}\n          <div className=\"flex items-center gap-1.5 text-foreground/90\">\n            <FileText className=\"w-3.5 h-3.5 text-accent\" />\n            <span>{articleType}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap items-center justify-center gap-x-3 gap-y-2\">\n          {/* Publication Date */}\n          <div className=\"flex items-center gap-1.5 text-foreground/90\">\n            <Calendar className=\"w-3.5 h-3.5 text-accent\" />\n            <span>{format(publicationDate, \"MMM d, yyyy\")}</span>\n          </div>\n          \n          {/* Reading Time */}\n          <div className=\"flex items-center gap-1.5 text-foreground/90\">\n            <Clock className=\"w-3.5 h-3.5 text-accent\" />\n            <span>{readingTimeMinutes} min</span>\n          </div>\n          \n          {/* Word Count */}\n          <div className=\"flex items-center gap-1.5 text-foreground/90\">\n            <BookOpen className=\"w-3.5 h-3.5 text-accent\" />\n            <span>{wordCount.toLocaleString()} words</span>\n          </div>\n        </div>\n        \n        {showScrollProgress && (\n          <div className=\"flex items-center gap-1.5 text-foreground/90\">\n            <TrendingUp className=\"w-3.5 h-3.5 text-accent\" />\n            <span>{scrollProgress}% complete</span>\n          </div>\n        )}\n      </div>\n      \n      {/* Last Updated Notice (if different from publication) */}\n      {isUpdated && (\n        <div className=\"mt-3 pt-3 border-t border-accent/10 text-center\">\n          <span className=\"text-xs font-mono text-muted\">\n            Last updated: {format(lastUpdatedDate, \"MMM d, yyyy 'at' h:mm a\")}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":9432},"client/src/components/hero-section.tsx":{"content":"import { ArrowDown } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function HeroSection() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  return (\n    <section className=\"relative min-h-screen flex flex-col px-4 sm:px-6 lg:px-8 overflow-hidden\">\n      {/* Main Grid Layout - Side Alignment */}\n      <div className=\"flex-1 grid lg:grid-cols-2 gap-12 items-center max-w-7xl w-full mx-auto py-20\">\n        {/* Left Column - Content */}\n        <div className=\"space-y-8\">\n          <h1 \n            className={`font-display font-bold text-4xl sm:text-5xl lg:text-6xl leading-[0.9] tracking-tighter transition-all duration-700 ${\n              isVisible ? 'opacity-100 translate-x-0' : 'opacity-0 -translate-x-8'\n            }`}\n            style={{ \n              transitionDelay: '100ms'\n            }}\n          >\n            <span className=\"block\">The</span>\n            <span className=\"block text-accent inline-flex items-center gap-4\">\n              <svg className=\"inline-block\" width=\"80\" height=\"60\" viewBox=\"0 0 80 60\" fill=\"none\">\n                <rect width=\"80\" height=\"60\" fill=\"currentColor\" fillOpacity=\"0.1\" />\n                <rect x=\"10\" y=\"10\" width=\"60\" height=\"8\" fill=\"currentColor\" />\n                <rect x=\"10\" y=\"26\" width=\"60\" height=\"8\" fill=\"currentColor\" />\n                <rect x=\"10\" y=\"42\" width=\"60\" height=\"8\" fill=\"currentColor\" />\n              </svg>\n              UX & UI\n            </span>\n            <span className=\"block\">Reformation</span>\n          </h1>\n          \n          <h2 \n            className={`font-display text-xl sm:text-2xl lg:text-3xl text-muted-foreground leading-tight transition-all duration-700 ${\n              isVisible ? 'opacity-100 translate-x-0' : 'opacity-0 -translate-x-8'\n            }`}\n            style={{ \n              transitionDelay: '300ms'\n            }}\n          >\n            How User Experience and Interface Design Evolved from Academic Research to Global Industry\n          </h2>\n        </div>\n\n        {/* Right Column - Decorative Element */}\n        <div \n          className={`hidden lg:flex items-center justify-center transition-all duration-1000 ${\n            isVisible ? 'opacity-100 scale-100' : 'opacity-0 scale-95'\n          }`}\n          style={{ transitionDelay: '500ms' }}\n        >\n          <div className=\"relative w-full h-[500px]\">\n            {/* Animated geometric shapes */}\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              <div \n                className=\"absolute w-64 h-64 rounded-2xl bg-accent/10 rotate-12\"\n                style={{ animation: 'float 6s ease-in-out infinite' }}\n              />\n              <div \n                className=\"absolute w-64 h-64 rounded-2xl bg-accent/5 rotate-6\"\n                style={{ animation: 'float 6s ease-in-out infinite 0.5s' }}\n              />\n              <div \n                className=\"absolute w-64 h-64 rounded-2xl border-2 border-accent/30\"\n                style={{ animation: 'pulse 3s ease-in-out infinite' }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Bottom Metadata Strip */}\n      <div \n        className={`border-t border-border py-6 transition-all duration-700 ${\n          isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n        }`}\n        style={{ transitionDelay: '700ms' }}\n      >\n        <div className=\"max-w-7xl mx-auto grid grid-cols-2 md:grid-cols-4 gap-8 text-sm sm:text-base\">\n          <div>\n            <p className=\"text-muted-foreground uppercase tracking-wider text-xs sm:text-sm mb-1\">Written By</p>\n            <p className=\"font-semibold text-sm sm:text-base\">Praveen Manchi</p>\n            <p className=\"text-muted-foreground text-xs sm:text-sm\">UX/UI Designer</p>\n          </div>\n          <div>\n            <p className=\"text-muted-foreground uppercase tracking-wider text-xs sm:text-sm mb-1\">Published</p>\n            <p className=\"font-semibold text-sm sm:text-base\">January 2025</p>\n          </div>\n          <div>\n            <p className=\"text-muted-foreground uppercase tracking-wider text-xs sm:text-sm mb-1\">Length</p>\n            <p className=\"font-semibold text-sm sm:text-base\">30 Min</p>\n            <p className=\"text-muted-foreground text-xs sm:text-sm\">~7,500 Words</p>\n          </div>\n          <div className=\"flex items-end\">\n            <div className=\"flex flex-col items-start gap-2\">\n              <span className=\"text-xs sm:text-sm font-mono text-muted uppercase tracking-wider flex items-center gap-2\">\n                <ArrowDown className=\"w-3 h-3\" />\n                Scroll to read\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4840},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/proportional-bar-group.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\n\ninterface BarData {\n  year: string;\n  label: string;\n  segments: {\n    value: number;\n    color: string;\n    label: string;\n  }[];\n  total: number;\n}\n\ninterface ProportionalBarGroupProps {\n  data: BarData[];\n  title: string;\n  description?: string;\n}\n\nexport default function ProportionalBarGroup({\n  data,\n  title,\n  description,\n}: ProportionalBarGroupProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 30 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true }}\n      transition={{\n        type: \"spring\",\n        stiffness: 100,\n        damping: 20,\n      }}\n      data-testid=\"proportional-bar-group\"\n    >\n      <Card className=\"p-4 sm:p-6 md:p-8 chart-dark-container\">\n        <div className=\"mb-8\">\n          <h4 className=\"font-display text-xl sm:text-2xl md:text-3xl font-bold text-timeline-cream mb-2\">\n            {title}\n          </h4>\n          {description && (\n            <p className=\"text-xs sm:text-sm md:text-base text-muted-foreground\">\n              {description}\n            </p>\n          )}\n        </div>\n\n        <div className=\"space-y-6\">\n          {data.map((item, index) => (\n            <motion.div\n              key={item.year}\n              initial={{ opacity: 0, x: -20 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: true }}\n              transition={{\n                delay: index * 0.1,\n                type: \"spring\",\n                stiffness: 100,\n              }}\n              className=\"space-y-2\"\n            >\n              {/* Year and Label */}\n              <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2 mb-2\">\n                <div className=\"flex items-baseline gap-3\">\n                  <span className=\"font-mono text-base sm:text-lg md:text-xl font-bold text-timeline-cream\" data-testid={`bar-year-${index}`}>\n                    {item.year}\n                  </span>\n                  <span className=\"text-xs sm:text-sm text-muted-foreground\" data-testid={`bar-label-${index}`}>\n                    {item.label}\n                  </span>\n                </div>\n                <span className=\"text-xs sm:text-sm text-timeline-sage font-semibold\" data-testid={`bar-total-${index}`}>\n                  Total: {item.total}M users\n                </span>\n              </div>\n\n              {/* Proportional Bar */}\n              <div className=\"relative h-10 sm:h-12 rounded-lg overflow-hidden bg-background/30 border border-timeline-sage/10\">\n                <div className=\"flex h-full\">\n                  {item.segments.map((segment, segmentIndex) => {\n                    const percentage = (segment.value / item.total) * 100;\n                    return (\n                      <motion.div\n                        key={segmentIndex}\n                        initial={{ width: 0 }}\n                        whileInView={{ width: `${percentage}%` }}\n                        viewport={{ once: true }}\n                        transition={{\n                          delay: index * 0.1 + segmentIndex * 0.05,\n                          duration: 0.8,\n                          ease: \"easeOut\",\n                        }}\n                        className=\"flex items-center justify-center text-xs font-semibold relative group\"\n                        style={{ backgroundColor: segment.color }}\n                        data-testid={`bar-segment-${index}-${segmentIndex}`}\n                      >\n                        {percentage > 8 && (\n                          <span className=\"text-background/90 px-2\" data-testid={`segment-value-${index}-${segmentIndex}`}>\n                            {segment.value}M\n                          </span>\n                        )}\n                        \n                        {/* Tooltip on hover */}\n                        <div className=\"absolute bottom-full mb-2 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none z-10\">\n                          <div className=\"bg-timeline-charcoal border border-timeline-sage/30 px-3 py-2 rounded shadow-lg whitespace-nowrap\" data-testid={`segment-tooltip-${index}-${segmentIndex}`}>\n                            <p className=\"text-xs text-timeline-cream font-semibold\" data-testid={`tooltip-segment-label-${index}-${segmentIndex}`}>\n                              {segment.label}\n                            </p>\n                            <p className=\"text-xs text-muted-foreground\" data-testid={`tooltip-segment-value-${index}-${segmentIndex}`}>\n                              {segment.value}M ({percentage.toFixed(1)}%)\n                            </p>\n                          </div>\n                        </div>\n                      </motion.div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Segment Labels */}\n              <div className=\"flex flex-wrap gap-2 sm:gap-3 md:gap-4 mt-2\">\n                {item.segments.map((segment, segmentIndex) => (\n                  <div key={segmentIndex} className=\"flex items-center gap-2\" data-testid={`segment-label-${index}-${segmentIndex}`}>\n                    <div\n                      className=\"w-3 h-3 rounded-full\"\n                      style={{ backgroundColor: segment.color }}\n                    />\n                    <span className=\"text-xs sm:text-sm text-foreground/70\" data-testid={`segment-text-${index}-${segmentIndex}`}>\n                      {segment.label}: {segment.value}M\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        {/* Additional Context */}\n        <div className=\"mt-8 pt-6 border-t border-timeline-sage/20\">\n          <p className=\"text-sm text-muted-foreground leading-relaxed\">\n            Each bar shows the proportional market share at a specific point in time, \n            illustrating the dramatic shift in the GUI operating system landscape.\n          </p>\n        </div>\n      </Card>\n    </motion.div>\n  );\n}\n","size_bytes":6177},"client/src/components/ux-tool-evolution-chart.tsx":{"content":"import { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\n\nconst data = [\n  { period: '1988-2010', tool: 'Photoshop', users: 50, collab: 10 },\n  { period: '2010-2016', tool: 'Sketch', users: 150, collab: 30 },\n  { period: '2016-2020', tool: 'Figma', users: 400, collab: 90 },\n  { period: '2020-2025', tool: 'Advanced Figma', users: 600, collab: 95 }\n];\n\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"bg-card dark:bg-card border border-primary/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200\">\n        <p className=\"font-semibold text-foreground mb-2\">{label}</p>\n        {payload.map((entry: any, index: number) => (\n          <p key={index} className=\"text-sm text-foreground/90\">\n            {entry.name === 'users' ? 'UX Professionals' : 'Collaboration'}:\n            <span className=\"ml-2 font-mono font-semibold\" style={{ color: entry.color }}>\n              {entry.name === 'users' ? `${entry.value}k` : `${entry.value}%`}\n            </span>\n          </p>\n        ))}\n        {data.find(d => d.period === label)?.tool && (\n          <p className=\"text-xs text-muted-foreground mt-2\">\n            Primary Tool: {data.find(d => d.period === label)?.tool}\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default function UXToolEvolutionChart() {\n  return (\n    <div className=\"w-full\">\n      <div className=\"bg-primary/[0.02] rounded-xl border border-primary/10 p-4 sm:p-6 md:p-8 transition-all duration-300 hover:border-primary/20\">\n        <div className=\"mb-4\">\n          <span className=\"text-muted-foreground uppercase tracking-wider text-xs font-mono\">Fig 01</span>\n          <h3 className=\"text-xl sm:text-2xl md:text-3xl font-semibold font-display text-foreground mt-1\">Design Tool Evolution & Professional Growth</h3>\n          <p className=\"text-xs sm:text-sm md:text-base text-foreground/70 mt-2\">\n            Tracking the correlation between tool capabilities and industry expansion over four decades\n          </p>\n        </div>\n        \n        <div className=\"h-64 sm:h-80 md:h-96 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <ComposedChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 60 }}>\n              <CartesianGrid \n                strokeDasharray=\"3 3\" \n                stroke=\"hsl(217, 100%, 53%)\" \n                opacity={0.05}\n                verticalPoints={[0]}\n              />\n              <XAxis \n                dataKey=\"period\" \n                stroke=\"transparent\"\n                tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                className=\"text-xs sm:text-sm\"\n                axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n                tickLine={false}\n              />\n              <YAxis \n                yAxisId=\"left\"\n                stroke=\"transparent\"\n                tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                className=\"text-xs sm:text-sm\"\n                axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n                tickLine={false}\n                label={{ \n                  value: 'UX Professionals (thousands)', \n                  angle: -90, \n                  position: 'insideLeft',\n                  style: { fill: 'hsl(0, 0%, 55%)', fontSize: 11 }\n                }}\n              />\n              <YAxis \n                yAxisId=\"right\"\n                orientation=\"right\"\n                stroke=\"transparent\"\n                tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                className=\"text-xs sm:text-sm\"\n                axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n                tickLine={false}\n                label={{ \n                  value: 'Collaboration Capability (%)', \n                  angle: 90, \n                  position: 'insideRight',\n                  style: { fill: 'hsl(0, 0%, 55%)', fontSize: 11 }\n                }}\n                domain={[0, 100]}\n              />\n              <Tooltip \n                content={<CustomTooltip />}\n                cursor={{ fill: 'hsl(217, 100%, 53%)', opacity: 0.05 }}\n                animationDuration={200}\n              />\n              <Legend \n                wrapperStyle={{ paddingTop: '24px' }}\n                iconType=\"rect\"\n                iconSize={12}\n                formatter={(value: string) => {\n                  const labels: Record<string, string> = {\n                    users: 'UX Professionals',\n                    collab: 'Collaboration Capability'\n                  };\n                  return <span className=\"text-xs sm:text-sm text-foreground/80\">{labels[value] || value}</span>;\n                }}\n              />\n              <Bar \n                yAxisId=\"left\"\n                dataKey=\"users\" \n                fill=\"hsl(217, 100%, 53%)\"\n                radius={[6, 6, 0, 0]}\n                animationDuration={800}\n                animationBegin={0}\n              />\n              <Line \n                yAxisId=\"right\"\n                type=\"monotone\" \n                dataKey=\"collab\" \n                stroke=\"hsl(354, 81%, 49%)\"\n                strokeWidth={3}\n                dot={{ fill: 'hsl(354, 81%, 49%)', r: 5, strokeWidth: 0 }}\n                activeDot={{ r: 7, strokeWidth: 2, stroke: 'hsl(354, 81%, 49%)', fill: 'hsl(var(--card))' }}\n                animationDuration={1000}\n                animationBegin={200}\n              />\n            </ComposedChart>\n          </ResponsiveContainer>\n        </div>\n        \n        <p className=\"text-xs text-muted-foreground mt-4 font-mono\">\n          Source: Industry surveys and tool adoption metrics (1988-2025)\n        </p>\n      </div>\n    </div>\n  );\n}","size_bytes":5811},"client/src/components/timeline-track.tsx":{"content":"import { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\n\ninterface TimelineEvent {\n  year: string;\n  title: string;\n  description: string;\n  details?: string;\n  impact?: string;\n}\n\ninterface TimelineTrackProps {\n  events: TimelineEvent[];\n  title?: string;\n  description?: string;\n}\n\ninterface Era {\n  name: string;\n  yearRange: string;\n  startYear: number;\n  endYear: number;\n  color: string;\n  gradient: string;\n}\n\nconst ERAS: Era[] = [\n  {\n    name: \"Early Computing\",\n    yearRange: \"1960-1984\",\n    startYear: 1960,\n    endYear: 1984,\n    color: \"hsl(88, 16%, 53%)\",\n    gradient: \"linear-gradient(90deg, hsl(88, 16%, 53%, 0.08), hsl(88, 16%, 53%, 0.15), hsl(88, 16%, 53%, 0.08))\"\n  },\n  {\n    name: \"GUI Revolution\",\n    yearRange: \"1984-1995\",\n    startYear: 1984,\n    endYear: 1995,\n    color: \"hsl(56, 24%, 82%)\",\n    gradient: \"linear-gradient(90deg, hsl(56, 24%, 82%, 0.08), hsl(56, 24%, 82%, 0.15), hsl(56, 24%, 82%, 0.08))\"\n  },\n  {\n    name: \"Web Era\",\n    yearRange: \"1995-2010\",\n    startYear: 1995,\n    endYear: 2010,\n    color: \"hsl(24, 30%, 58%)\",\n    gradient: \"linear-gradient(90deg, hsl(24, 30%, 58%, 0.08), hsl(24, 30%, 58%, 0.15), hsl(24, 30%, 58%, 0.08))\"\n  },\n  {\n    name: \"Modern Era\",\n    yearRange: \"2010-2020\",\n    startYear: 2010,\n    endYear: 2020,\n    color: \"hsl(48, 18%, 75%)\",\n    gradient: \"linear-gradient(90deg, hsl(48, 18%, 75%, 0.08), hsl(48, 18%, 75%, 0.15), hsl(48, 18%, 75%, 0.08))\"\n  },\n  {\n    name: \"AI Era\",\n    yearRange: \"2020+\",\n    startYear: 2020,\n    endYear: 2030,\n    color: \"hsl(120, 5%, 8%)\",\n    gradient: \"linear-gradient(90deg, hsl(120, 5%, 8%, 0.08), hsl(120, 5%, 8%, 0.15), hsl(120, 5%, 8%, 0.08))\"\n  }\n];\n\nexport default function TimelineTrack({ events, title, description }: TimelineTrackProps) {\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n\n  // Calculate era backgrounds based on visible events\n  const getEraBackgrounds = () => {\n    if (events.length === 0) return [];\n\n    const firstEventYear = parseInt(events[0].year);\n    const lastEventYear = parseInt(events[events.length - 1].year);\n\n    return ERAS.filter(era => \n      (era.startYear <= lastEventYear && era.endYear >= firstEventYear)\n    ).map(era => {\n      // Calculate the position percentage for each era\n      const eraStart = Math.max(era.startYear, firstEventYear);\n      const eraEnd = Math.min(era.endYear, lastEventYear);\n      \n      const totalRange = lastEventYear - firstEventYear;\n      const startPercent = ((eraStart - firstEventYear) / totalRange) * 100;\n      const widthPercent = ((eraEnd - eraStart) / totalRange) * 100;\n\n      return {\n        ...era,\n        startPercent,\n        widthPercent\n      };\n    });\n  };\n\n  const eraBackgrounds = getEraBackgrounds();\n\n  return (\n    <div className=\"w-full\" data-testid=\"timeline-track\">\n      {title && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6 }}\n          className=\"mb-12\"\n        >\n          <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-4\">{title}</h3>\n          {description && (\n            <p className=\"text-sm sm:text-base md:text-lg text-muted-foreground\">{description}</p>\n          )}\n        </motion.div>\n      )}\n\n      <div className=\"relative px-4 sm:px-6 md:px-8\">\n        {/* Era Background Shading */}\n        {eraBackgrounds.map((era, index) => (\n          <motion.div\n            key={era.name}\n            className=\"absolute top-0 bottom-0 pointer-events-none\"\n            style={{\n              left: `${era.startPercent}%`,\n              width: `${era.widthPercent}%`,\n              background: era.gradient,\n              zIndex: 0\n            }}\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            viewport={{ once: true }}\n            transition={{ duration: 1, delay: index * 0.1 }}\n            data-testid={`era-background-${era.name.toLowerCase().replace(/\\s+/g, '-')}`}\n          >\n            {/* Era Label */}\n            <div className=\"absolute -top-8 left-1/2 -translate-x-1/2\">\n              <p className=\"text-[10px] sm:text-xs font-mono text-muted-foreground/60 whitespace-nowrap\" data-testid={`era-label-${era.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                {era.name} <span className=\"text-[9px] sm:text-[10px]\">({era.yearRange})</span>\n              </p>\n            </div>\n          </motion.div>\n        ))}\n\n        {/* Timeline Line */}\n        <div className=\"timeline-line\" />\n\n        {/* Timeline Events */}\n        <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4 sm:gap-8 relative z-10 py-12\">\n          {events.map((event, index) => (\n            <div key={index} className=\"flex flex-col items-center\" data-year={event.year}>\n              {/* Timeline Dot */}\n              <motion.div\n                className=\"relative\"\n                initial={{ scale: 0 }}\n                whileInView={{ scale: 1 }}\n                viewport={{ once: true }}\n                transition={{\n                  type: \"spring\",\n                  stiffness: 260,\n                  damping: 20,\n                  delay: index * 0.1,\n                }}\n              >\n                <button\n                  onClick={() => setActiveIndex(activeIndex === index ? null : index)}\n                  className={`timeline-dot ${activeIndex === index ? \"active\" : \"\"}`}\n                  data-testid={`timeline-dot-${index}`}\n                  aria-label={`View ${event.year} event`}\n                />\n                \n                {/* Vertical Marker Line */}\n                {activeIndex === index && (\n                  <motion.div\n                    className=\"timeline-marker\"\n                    initial={{ height: 0 }}\n                    animate={{ height: 60 }}\n                    transition={{ duration: 0.3 }}\n                  />\n                )}\n              </motion.div>\n\n              {/* Year Label */}\n              <motion.div\n                className=\"mt-4 text-center\"\n                initial={{ opacity: 0 }}\n                whileInView={{ opacity: 1 }}\n                viewport={{ once: true }}\n                transition={{ delay: index * 0.1 + 0.2 }}\n              >\n                <p className=\"font-mono text-base sm:text-lg md:text-xl font-bold text-timeline-cream\" data-testid={`timeline-year-${index}`}>\n                  {event.year}\n                </p>\n                <p className=\"text-xs sm:text-sm text-muted-foreground mt-1 line-clamp-2\" data-testid={`timeline-title-${index}`}>\n                  {event.title}\n                </p>\n              </motion.div>\n            </div>\n          ))}\n        </div>\n\n        {/* Detail Panel */}\n        <AnimatePresence mode=\"wait\">\n          {activeIndex !== null && (\n            <motion.div\n              key={activeIndex}\n              initial={{ opacity: 0, y: -20, height: 0 }}\n              animate={{ opacity: 1, y: 0, height: \"auto\" }}\n              exit={{ opacity: 0, y: -20, height: 0 }}\n              transition={{\n                type: \"spring\",\n                stiffness: 300,\n                damping: 30,\n              }}\n              className=\"mt-8\"\n            >\n              <Card className=\"p-4 sm:p-6 md:p-8 chart-dark-container border-timeline-sage/30\" data-testid={`timeline-detail-${activeIndex}`}>\n                <div className=\"space-y-4\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-baseline gap-2 sm:gap-4\">\n                    <h4 className=\"font-display text-xl sm:text-2xl md:text-3xl font-bold text-timeline-cream\" data-testid={`timeline-detail-year-${activeIndex}`}>\n                      {events[activeIndex].year}\n                    </h4>\n                    <span className=\"text-base sm:text-lg md:text-xl text-timeline-sage\" data-testid={`timeline-detail-title-${activeIndex}`}>\n                      {events[activeIndex].title}\n                    </span>\n                  </div>\n\n                  <p className=\"text-sm sm:text-base md:text-lg text-foreground/90 leading-relaxed\" data-testid={`timeline-detail-description-${activeIndex}`}>\n                    {events[activeIndex].description}\n                  </p>\n\n                  {events[activeIndex].details && (\n                    <div className=\"pt-4 border-t border-timeline-sage/20\">\n                      <p className=\"text-xs sm:text-sm text-muted-foreground\" data-testid={`timeline-detail-details-${activeIndex}`}>\n                        {events[activeIndex].details}\n                      </p>\n                    </div>\n                  )}\n\n                  {events[activeIndex].impact && (\n                    <div className=\"mt-4 p-4 bg-timeline-sage/10 rounded-lg border border-timeline-sage/20\">\n                      <p className=\"text-xs sm:text-sm uppercase tracking-wider text-timeline-sage font-semibold mb-2\">\n                        Impact\n                      </p>\n                      <p className=\"text-xs sm:text-sm text-foreground/80\" data-testid={`timeline-detail-impact-${activeIndex}`}>\n                        {events[activeIndex].impact}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </Card>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9479},"client/src/components/max-experience-chart.tsx":{"content":"import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine, Label, Cell } from 'recharts';\n\nconst data = [\n  { role: 'Field Creator', experience: 32, highlight: true },\n  { role: 'Early Pioneer', experience: 30, highlight: true },\n  { role: 'Prof Practice', experience: 25, highlight: false },\n  { role: 'Industry Std', experience: 20, highlight: false },\n  { role: 'Mainstream', experience: 15, highlight: false },\n  { role: 'Modern Tools', experience: 10, highlight: false },\n  { role: 'Recent Graduate', experience: 5, highlight: false }\n];\n\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    const entry = data.find(d => d.role === label);\n    return (\n      <div className=\"bg-card dark:bg-card border border-primary/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200\">\n        <p className=\"font-semibold text-foreground mb-2\">{label}</p>\n        <p className=\"text-sm text-foreground/90\">\n          Max Experience: \n          <span className=\"ml-2 font-mono font-semibold text-primary\">\n            {payload[0].value} years\n          </span>\n        </p>\n        {entry?.highlight && (\n          <p className=\"text-xs mt-2 font-semibold\" style={{ color: 'hsl(354, 81%, 49%)' }}>\n            Above 24-year threshold\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default function MaxExperienceChart() {\n  return (\n    <div className=\"w-full\">\n      <div className=\"bg-primary/[0.02] rounded-xl border border-primary/10 p-4 sm:p-6 md:p-8 transition-all duration-300 hover:border-primary/20\">\n        <div className=\"mb-4\">\n          <span className=\"text-muted-foreground uppercase tracking-wider text-xs font-mono\">Fig 02</span>\n          <h3 className=\"text-xl sm:text-2xl md:text-3xl font-semibold font-display text-foreground mt-1\">Maximum UX/UI Experience by Professional Category</h3>\n          <p className=\"text-xs sm:text-sm md:text-base text-foreground/70 mt-2\">\n            Years of potential experience across different generations of UX professionals in 2025\n          </p>\n        </div>\n        \n        <div className=\"h-64 sm:h-80 md:h-96 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={data} margin={{ top: 30, right: 30, left: 80, bottom: 80 }}>\n              <CartesianGrid \n                strokeDasharray=\"3 3\" \n                stroke=\"hsl(217, 100%, 53%)\" \n                opacity={0.05}\n                verticalPoints={[0]}\n              />\n              <XAxis \n                dataKey=\"role\" \n                stroke=\"transparent\"\n                tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                className=\"text-xs sm:text-sm\"\n                angle={-45}\n                textAnchor=\"end\"\n                height={100}\n                axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n                tickLine={false}\n              />\n              <YAxis \n                stroke=\"transparent\"\n                tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                className=\"text-xs sm:text-sm\"\n                axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n                tickLine={false}\n                label={{ \n                  value: 'Maximum Years of Experience', \n                  angle: -90, \n                  position: 'insideLeft',\n                  style: { fill: 'hsl(0, 0%, 55%)', fontSize: 11 }\n                }}\n                domain={[0, 35]}\n              />\n              <Tooltip \n                content={<CustomTooltip />}\n                cursor={{ fill: 'hsl(217, 100%, 53%)', opacity: 0.05 }}\n                animationDuration={200}\n              />\n              <ReferenceLine \n                y={24} \n                stroke=\"hsl(354, 81%, 49%)\" \n                strokeDasharray=\"5 5\"\n                strokeWidth={2}\n                opacity={0.7}\n              >\n                <Label \n                  value=\"24-year experience threshold\" \n                  position=\"insideTopRight\" \n                  fill=\"hsl(354, 81%, 49%)\"\n                  fontSize={11}\n                  offset={10}\n                  style={{ fontWeight: 600 }}\n                />\n              </ReferenceLine>\n              <Bar \n                dataKey=\"experience\" \n                radius={[6, 6, 0, 0]}\n                animationDuration={800}\n                animationBegin={0}\n              >\n                {data.map((entry, index) => (\n                  <Cell \n                    key={`cell-${index}`}\n                    fill={entry.highlight ? (index === 0 ? 'hsl(217, 100%, 53%)' : 'hsl(354, 81%, 49%)') : 'hsl(142, 63%, 39%)'}\n                  />\n                ))}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        \n        <p className=\"text-xs text-muted-foreground mt-4 font-mono\">\n          Source: Career timeline analysis of UX/UI professional roles (1993-2025)\n        </p>\n      </div>\n    </div>\n  );\n}","size_bytes":5042},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"attached_assets/chart_script_1759698157803.py":{"content":"import pandas as pd\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# Load the data\ndf = pd.read_csv('ux_ui_timeline_milestones.csv')\n\n# Create the timeline chart\nfig = go.Figure()\n\n# Add the main line showing professional roles growth\nfig.add_trace(go.Scatter(\n    x=df['year'],\n    y=df['professional_roles_estimate'],\n    mode='lines+markers',\n    line=dict(color='#1FB8CD', width=3),\n    marker=dict(size=8, color='#1FB8CD'),\n    name='UX/UI Roles',\n    hovertemplate='Year: %{x}<br>Roles: %{y:,}<extra></extra>'\n))\n\n# Add milestone markers with annotations\nmilestone_colors = ['#DB4545', '#2E8B57', '#5D878F', '#D2BA4C', '#B4413C']\nfor i, row in df.iterrows():\n    if row['professional_roles_estimate'] > 0:  # Only show milestones where there are roles\n        color = milestone_colors[i % len(milestone_colors)]\n        \n        # Add milestone marker\n        fig.add_trace(go.Scatter(\n            x=[row['year']],\n            y=[row['professional_roles_estimate']],\n            mode='markers',\n            marker=dict(size=12, color=color, symbol='diamond'),\n            name=row['milestone'][:15] + '...' if len(row['milestone']) > 15 else row['milestone'],\n            hovertemplate=f\"{row['milestone']}<br>Year: {row['year']}<br>Roles: {row['professional_roles_estimate']:,}<extra></extra>\",\n            showlegend=True\n        ))\n\n# Update layout with logarithmic y-axis\nfig.update_layout(\n    title='UX/UI Professional Roles Evolution',\n    xaxis_title='Year',\n    yaxis_title='Prof. Roles',\n    yaxis_type='log',\n    legend=dict(\n        orientation='v',\n        yanchor='top',\n        y=1,\n        xanchor='left',\n        x=1.02\n    )\n)\n\n# Update axes\nfig.update_xaxes(\n    range=[1970, 2025],\n    dtick=10\n)\n\nfig.update_yaxes(\n    range=[0, 6],  # log scale: 10^0 to 10^6\n    dtick=1\n)\n\n# Update traces to prevent clipping\nfig.update_traces(cliponaxis=False)\n\n# Save as both PNG and SVG\nfig.write_image('timeline_chart.png')\nfig.write_image('timeline_chart.svg', format='svg')\n\nprint(\"Chart created successfully!\")\nprint(\"Final data preview:\")\nprint(df[['year', 'milestone', 'professional_roles_estimate']])","size_bytes":2138},"client/src/components/video-section.tsx":{"content":"export default function VideoSection() {\n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\" data-testid=\"section-video\">\n      <div className=\"max-w-5xl mx-auto\">\n        <div className=\"space-y-6\">\n          <div className=\"space-y-2 text-center\">\n            <p className=\"text-muted uppercase tracking-wider text-sm font-mono\">Section 2</p>\n            <h3 className=\"font-display text-4xl sm:text-5xl font-bold leading-tight\" data-testid=\"text-video-heading\">The Profession's Genesis</h3>\n          </div>\n\n          <div className=\"max-w-3xl mx-auto prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p>\n              Everyone, including the marketing departments and business analysts, wanted to design interfaces except there was no profession called UX/UI. The only problem is that <strong>we are bad historians</strong>.\n            </p>\n\n            <p>\n              We run a <strong>chronologically impossible claim process</strong> that neither acknowledges the actual timeline of professional development nor the documented history of the field. <strong>Historical evidence explains the impossibility of extended experience claims:</strong>\n            </p>\n\n            <blockquote className=\"border-l-4 border-accent pl-6 italic text-lg\">\n              \"The field of UX/UI design as a distinct profession is based on the concepts of human-centered design that were revolutionary in the 1990s and at the forefront of the technology industry before it was systematized by pioneers like Don Norman and Alan Cooper. Centralized, predictive interface design and user research were then thought to be superior to the trial and error engineering approaches that dominated early computing.\"\n            </blockquote>\n\n            <div className=\"not-prose\">\n              <p className=\"text-muted uppercase tracking-wider text-sm font-mono mb-4\">Historical Evidence</p>\n            </div>\n\n            <p>\n              There is no resume that can claim 25+ years of UX/UI experience without being anachronistic. <strong>The mathematics are unforgiving</strong>. We must be very careful not to conflate <strong>graphic design experience with UX/UI professional practice</strong>. As Don Norman said, <strong>\"UX encompasses all aspects of the person's experience with a system.\"</strong> This holistic approach didn't exist before the 1990s.\n            </p>\n\n            <p>\n              Our <strong>human-centered design methodology</strong> values <strong>user research, not just visual design</strong>. It values <strong>usability testing and iterative improvement</strong>, not just aesthetic appeal.\n            </p>\n\n            <p>\n              The GUI revolution created a new discipline that was <strong>unaware of or separate from traditional graphic design</strong>. In Silicon Valley, we call them <strong>interaction designers and user researchers</strong>—distinct from visual designers. We once had generalist \"computer programmers,\" but UX/UI required <strong>specialized knowledge of human psychology, information architecture, and usability principles</strong>.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3213},"client/src/components/industry-timeline-scatter.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { \n  Building2,\n  Users,\n  Smartphone,\n  Layers,\n  GitBranch,\n  Sparkles,\n  Briefcase,\n  Globe,\n  Target,\n  TrendingUp\n} from \"lucide-react\";\nimport { ReactNode } from \"react\";\n\ninterface MilestoneDataPoint {\n  name: string;\n  year: number;\n  category: string;\n  era: \"Foundation Era\" | \"Digital Era\" | \"Modern Era\";\n  icon: ReactNode;\n  detail: string;\n}\n\nexport default function IndustryTimelineScatter() {\n  const milestoneData: MilestoneDataPoint[] = [\n    // Foundation Era (1990-2004) - Purple\n    { \n      name: \"First UX Title\", \n      year: 1993, \n      category: \"Role Creation\", \n      era: \"Foundation Era\", \n      icon: <Building2 className=\"w-full h-full\" />,\n      detail: \"Don Norman at Apple\"\n    },\n    { \n      name: \"Web Agencies\", \n      year: 2000, \n      category: \"Service Business\", \n      era: \"Foundation Era\", \n      icon: <Globe className=\"w-full h-full\" />,\n      detail: \"UX becomes service\"\n    },\n    \n    // Digital Era (2005-2014) - Blue\n    { \n      name: \"iPhone Era\", \n      year: 2007, \n      category: \"Platform Shift\", \n      era: \"Digital Era\", \n      icon: <Smartphone className=\"w-full h-full\" />,\n      detail: \"Mobile UX explosion\"\n    },\n    { \n      name: \"Design Systems\", \n      year: 2014, \n      category: \"Systematization\", \n      era: \"Digital Era\", \n      icon: <Layers className=\"w-full h-full\" />,\n      detail: \"Scalable design\"\n    },\n    \n    // Modern Era (2015-2025) - Green\n    { \n      name: \"DesignOps\", \n      year: 2020, \n      category: \"Operations\", \n      era: \"Modern Era\", \n      icon: <GitBranch className=\"w-full h-full\" />,\n      detail: \"Design operations\"\n    },\n    { \n      name: \"AI Integration\", \n      year: 2025, \n      category: \"AI Augmentation\", \n      era: \"Modern Era\", \n      icon: <Sparkles className=\"w-full h-full\" />,\n      detail: \"AI-assisted design\"\n    }\n  ];\n\n  const categories = [\n    \"AI Augmentation\",\n    \"Operations\",\n    \"Systematization\",\n    \"Platform Shift\",\n    \"Service Business\",\n    \"Role Creation\"\n  ];\n\n  const years = [1990, 1995, 2000, 2005, 2010, 2015, 2020, 2025];\n  \n  const getEraColor = (era: string) => {\n    switch (era) {\n      case \"Foundation Era\":\n        return \"hsl(217, 100%, 53%)\"; // IBM Carbon Blue\n      case \"Digital Era\":\n        return \"hsl(292, 48%, 55%)\"; // Purple for categorical\n      case \"Modern Era\":\n        return \"hsl(142, 63%, 39%)\"; // Success green\n      default:\n        return \"hsl(0, 0%, 63%)\";\n    }\n  };\n\n  const getYPosition = (category: string) => {\n    const index = categories.indexOf(category);\n    return (index / (categories.length - 1)) * 100;\n  };\n\n  const getXPosition = (year: number) => {\n    return ((year - 1990) / (2025 - 1990)) * 100;\n  };\n\n  return (\n    <div className=\"w-full bg-card dark:bg-card py-8 sm:py-10 md:py-12 px-4 sm:px-6 rounded-lg\">\n      <div className=\"max-w-6xl mx-auto\">\n        <h3 className=\"text-xl sm:text-2xl md:text-3xl font-display font-bold text-center mb-2 text-foreground\">\n          Industry Timeline: The Evolution of Design as a Business Function (1993-2025)\n        </h3>\n        \n        {/* Legend */}\n        <div className=\"flex justify-center gap-2 sm:gap-3 md:gap-4 mb-8 flex-wrap\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: \"hsl(217, 100%, 53%)\" }} />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground\">Foundation Era (1993-2004)</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: \"hsl(292, 48%, 55%)\" }} />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground\">Digital Era (2005-2014)</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full\" style={{ backgroundColor: \"hsl(142, 63%, 39%)\" }} />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground\">Modern Era (2015-2025)</span>\n          </div>\n        </div>\n\n        {/* Chart Container */}\n        <div className=\"relative bg-background border border-primary/10 rounded-lg p-4 sm:p-6 md:p-8\">\n          {/* Y-axis labels */}\n          <div className=\"absolute left-0 top-4 sm:top-6 md:top-8 bottom-4 sm:bottom-6 md:bottom-8 w-24 sm:w-28 md:w-32 flex flex-col justify-between text-right pr-2 sm:pr-3 md:pr-4\">\n            {categories.map((cat, index) => (\n              <div key={cat} className=\"text-[10px] sm:text-xs font-sans text-muted-foreground leading-tight\" style={{ \n                transform: 'translateY(-50%)',\n                position: 'absolute',\n                top: `${(index / (categories.length - 1)) * 100}%`,\n                right: '1rem'\n              }}>\n                {cat}\n              </div>\n            ))}\n          </div>\n\n          {/* Chart area */}\n          <div className=\"ml-24 sm:ml-28 md:ml-32 relative h-64 sm:h-80 md:h-96\">\n            {/* Grid lines - vertical */}\n            {years.map((year) => (\n              <div\n                key={`grid-v-${year}`}\n                className=\"absolute top-0 bottom-0 border-l border-primary/5\"\n                style={{ left: `${getXPosition(year)}%` }}\n              />\n            ))}\n\n            {/* Grid lines - horizontal */}\n            {categories.map((cat, index) => (\n              <div\n                key={`grid-h-${cat}`}\n                className=\"absolute left-0 right-0 border-t border-primary/5\"\n                style={{ top: `${(index / (categories.length - 1)) * 100}%` }}\n              />\n            ))}\n\n            {/* Data points with icons */}\n            {milestoneData.map((milestone, index) => (\n              <motion.div\n                key={`${milestone.name}-${index}`}\n                initial={{ scale: 0, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                transition={{ delay: index * 0.1, duration: 0.4 }}\n                className=\"absolute cursor-pointer transform -translate-x-1/2 -translate-y-1/2 group\"\n                style={{\n                  left: `${getXPosition(milestone.year)}%`,\n                  top: `${getYPosition(milestone.category)}%`,\n                }}\n                data-testid={`icon-milestone-${milestone.name.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                {/* Icon container with colored background */}\n                <div \n                  className=\"w-6 h-6 sm:w-7 sm:h-7 md:w-9 md:h-9 rounded-lg flex items-center justify-center p-1 sm:p-1.5 md:p-2 shadow-md transition-all duration-200 group-hover:scale-125 group-hover:shadow-lg\"\n                  style={{\n                    backgroundColor: getEraColor(milestone.era),\n                    color: 'white'\n                  }}\n                >\n                  {milestone.icon}\n                </div>\n                \n                {/* Hover tooltip */}\n                <div className=\"absolute left-1/2 -translate-x-1/2 top-full mt-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none z-10\">\n                  <div className=\"bg-card dark:bg-card text-foreground text-xs rounded-lg px-3 py-2 whitespace-nowrap shadow-xl border border-primary/20\">\n                    <div className=\"font-bold\">{milestone.name}</div>\n                    <div className=\"text-muted-foreground\">{milestone.year} - {milestone.detail}</div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n\n            {/* X-axis labels */}\n            <div className=\"absolute left-0 right-0 -bottom-6 flex justify-between\">\n              {years.map((year) => (\n                <div\n                  key={`x-label-${year}`}\n                  className=\"text-[10px] sm:text-xs text-muted-foreground font-mono\"\n                  style={{ \n                    position: 'absolute',\n                    left: `${getXPosition(year)}%`,\n                    transform: 'translateX(-50%)'\n                  }}\n                >\n                  {year}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8208},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/share-buttons.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Share2, Twitter, Linkedin, Facebook, Link as LinkIcon } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\ninterface ShareButtonsProps {\n  title?: string;\n  description?: string;\n  url?: string;\n}\n\nexport default function ShareButtons({ \n  title = \"The History of UX/UI Design | Professional Timeline Analysis\",\n  description = \"A comprehensive analysis of UX/UI professional evolution and chronologically impossible experience claims.\",\n  url\n}: ShareButtonsProps) {\n  const { toast } = useToast();\n  const [currentUrl, setCurrentUrl] = useState(url || '');\n\n  useEffect(() => {\n    if (!url && typeof window !== 'undefined') {\n      setCurrentUrl(window.location.href);\n    }\n  }, [url]);\n\n  const shareUrls = {\n    twitter: `https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(currentUrl)}`,\n    linkedin: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(currentUrl)}`,\n    facebook: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(currentUrl)}`,\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(currentUrl);\n      toast({\n        title: \"Link copied!\",\n        description: \"The link has been copied to your clipboard.\",\n      });\n    } catch (err) {\n      toast({\n        title: \"Failed to copy\",\n        description: \"Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleShare = (platform: string) => {\n    window.open(shareUrls[platform as keyof typeof shareUrls], '_blank', 'noopener,noreferrer,width=600,height=400');\n  };\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button \n          variant=\"outline\" \n          size=\"sm\" \n          className=\"gap-2\"\n          data-testid=\"button-share\"\n        >\n          <Share2 className=\"h-4 w-4\" />\n          Share\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-48\">\n        <DropdownMenuItem \n          onClick={() => handleShare('twitter')}\n          data-testid=\"button-share-twitter\"\n        >\n          <Twitter className=\"mr-2 h-4 w-4\" />\n          Share on Twitter\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => handleShare('linkedin')}\n          data-testid=\"button-share-linkedin\"\n        >\n          <Linkedin className=\"mr-2 h-4 w-4\" />\n          Share on LinkedIn\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => handleShare('facebook')}\n          data-testid=\"button-share-facebook\"\n        >\n          <Facebook className=\"mr-2 h-4 w-4\" />\n          Share on Facebook\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={copyToClipboard}\n          data-testid=\"button-copy-link\"\n        >\n          <LinkIcon className=\"mr-2 h-4 w-4\" />\n          Copy Link\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n","size_bytes":3194},"attached_assets/script_1759698157803.py":{"content":"# Create comprehensive data for charts and metrics that would support the UX/UI timeline argument\n\nimport pandas as pd\nimport json\n\n# Timeline data for key milestones\ntimeline_data = {\n    \"year\": [1973, 1984, 1988, 1990, 1993, 1995, 2000, 2007, 2010, 2014, 2016, 2020, 2025],\n    \"milestone\": [\n        \"Xerox Alto GUI\",\n        \"Apple Macintosh\",\n        \"Don Norman's Book\",\n        \"Nielsen Heuristics\", \n        \"UX Term Coined\",\n        \"First UX Consultancy\",\n        \"UX Job Roles Emerge\",\n        \"iPhone/Mobile UX\",\n        \"Sketch Tool Launch\",\n        \"Google Material Design\",\n        \"Figma Collaboration\",\n        \"UX Industry Maturity\",\n        \"Current Year\"\n    ],\n    \"professional_roles_estimate\": [0, 5, 20, 50, 100, 500, 2000, 10000, 50000, 100000, 200000, 500000, 800000],\n    \"tools_available\": [0, 1, 1, 2, 3, 5, 10, 15, 25, 40, 60, 100, 150],\n    \"experience_claims_validity\": [0, 0, 0, 5, 15, 25, 35, 45, 55, 65, 75, 85, 95]\n}\n\n# Maximum possible experience by start year\nexperience_calculation = {\n    \"start_year\": [1993, 1995, 2000, 2005, 2010, 2015, 2020],\n    \"role_type\": [\n        \"Field Creator (Don Norman)\",\n        \"Early Pioneer\", \n        \"Professional Practice\",\n        \"Industry Standards\",\n        \"Mainstream Adoption\",\n        \"Modern Tools Era\",\n        \"Recent Graduate\"\n    ],\n    \"max_experience_2025\": [32, 30, 25, 20, 15, 10, 5],\n    \"global_professionals_estimate\": [1, 10, 100, 1000, 10000, 50000, 100000]\n}\n\n# Tools evolution timeline\ntools_evolution = {\n    \"period\": [\"1988-2010\", \"2010-2016\", \"2016-2020\", \"2020-2025\"],\n    \"primary_tool\": [\"Photoshop\", \"Sketch\", \"Figma\", \"Advanced Figma\"],\n    \"tool_type\": [\"Photo Editor Adapted\", \"First Dedicated UI Tool\", \"Collaborative Design\", \"AI-Enhanced Design\"],\n    \"ux_professionals_using\": [50000, 150000, 400000, 600000],\n    \"collaboration_capability\": [10, 30, 90, 95]\n}\n\n# Company design system timeline\ndesign_systems = {\n    \"year\": [1987, 2006, 2014, 2016, 2018, 2020],\n    \"company\": [\"Apple\", \"Yahoo!\", \"Google\", \"IBM\", \"Microsoft\", \"Shopify\"],\n    \"system_name\": [\"Human Interface Guidelines\", \"Design Pattern Library\", \"Material Design\", \"Carbon Design System\", \"Fluent Design\", \"Polaris\"],\n    \"adoption_scale\": [10000, 50000, 1000000, 100000, 500000, 50000],\n    \"maturity_level\": [60, 70, 95, 85, 80, 75]\n}\n\n# Create DataFrames\ntimeline_df = pd.DataFrame(timeline_data)\nexperience_df = pd.DataFrame(experience_calculation)\ntools_df = pd.DataFrame(tools_evolution)\nsystems_df = pd.DataFrame(design_systems)\n\n# Save to CSV files for chart creation\ntimeline_df.to_csv('ux_ui_timeline_milestones.csv', index=False)\nexperience_df.to_csv('ux_ui_experience_calculations.csv', index=False)\ntools_df.to_csv('ux_ui_tools_evolution.csv', index=False)\nsystems_df.to_csv('ux_ui_design_systems.csv', index=False)\n\nprint(\"UX/UI HISTORICAL DATA ANALYSIS\")\nprint(\"=\" * 50)\n\nprint(\"\\n1. TIMELINE MILESTONES:\")\nprint(timeline_df.to_string(index=False))\n\nprint(\"\\n2. MAXIMUM POSSIBLE EXPERIENCE CALCULATIONS:\")\nprint(experience_df.to_string(index=False))\n\nprint(\"\\n3. TOOLS EVOLUTION:\")\nprint(tools_df.to_string(index=False))\n\nprint(\"\\n4. DESIGN SYSTEMS TIMELINE:\")\nprint(systems_df.to_string(index=False))\n\n# Key statistics for the argument\nprint(\"\\n\" + \"=\" * 50)\nprint(\"KEY STATISTICS FOR DEBUNKING 24+ YEAR CLAIMS:\")\nprint(\"=\" * 50)\n\nprint(f\"• UX term coined in: {timeline_df[timeline_df['milestone'] == 'UX Term Coined']['year'].values[0]}\")\nprint(f\"• Maximum possible experience in 2025: {experience_df['max_experience_2025'].max()} years\")\nprint(f\"• Professional roles before 2000: {timeline_df[timeline_df['year'] <= 2000]['professional_roles_estimate'].sum():,}\")\nprint(f\"• First dedicated UI tool launched: {tools_df['period'].iloc[1]}\")\nprint(f\"• First major design system: {systems_df['year'].min()} ({systems_df[systems_df['year'] == systems_df['year'].min()]['system_name'].values[0]})\")\n\nprint(\"\\n\" + \"=\" * 50)\nprint(\"MATHEMATICAL PROOF:\")\nprint(\"=\" * 50)\nprint(\"For 24 years of experience in 2025:\")\nprint(\"• Start year would be: 2025 - 24 = 2001\")\nprint(\"• UX roles in 2001: ~2,000 globally\")  \nprint(\"• Dedicated UX tools in 2001: None (Sketch launched 2010)\")\nprint(\"• Formal UX education in 2001: Minimal\")\nprint(\"• Conclusion: 24+ year claims are statistically implausible\")","size_bytes":4314},"client/src/components/ux-timeline-chart.tsx":{"content":"import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Dot } from 'recharts';\n\nconst data = [\n  { year: 1973, professionals: 1, milestone: 'Xerox Alto GUI' },\n  { year: 1984, professionals: 5, milestone: 'Apple Macintosh' },\n  { year: 1988, professionals: 20, milestone: \"Don Norman's Book\" },\n  { year: 1990, professionals: 50, milestone: 'Nielsen Heuristics' },\n  { year: 1993, professionals: 100, milestone: 'UX Term Coined' },\n  { year: 1995, professionals: 500, milestone: 'First UX Consultancy' },\n  { year: 2000, professionals: 2000, milestone: 'UX Job Roles Emerge' },\n  { year: 2007, professionals: 10000, milestone: 'iPhone/Mobile UX' },\n  { year: 2010, professionals: 50000, milestone: 'Sketch Tool Launch' },\n  { year: 2014, professionals: 100000, milestone: 'Google Material Design' },\n  { year: 2016, professionals: 200000, milestone: 'Figma Collaboration' },\n  { year: 2020, professionals: 500000, milestone: 'UX Industry Maturity' },\n  { year: 2025, professionals: 800000, milestone: 'Current Year' }\n];\n\nconst CustomDot = (props: any) => {\n  const { cx, cy, payload } = props;\n  \n  if (payload.milestone && typeof cx === 'number' && typeof cy === 'number' && !isNaN(cx) && !isNaN(cy)) {\n    return (\n      <g>\n        <circle \n          cx={cx} \n          cy={cy} \n          r={5} \n          fill=\"hsl(217, 100%, 53%)\" \n          stroke=\"hsl(217, 100%, 53%)\" \n          strokeWidth={2}\n          className=\"transition-all duration-200\"\n        />\n      </g>\n    );\n  }\n  return null;\n};\n\nconst CustomTooltip = ({ active, payload }: any) => {\n  if (active && payload && payload.length) {\n    const data = payload[0].payload;\n    return (\n      <div className=\"bg-card dark:bg-card border border-primary/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200\">\n        <p className=\"font-semibold text-foreground mb-2\">{data.year}</p>\n        <p className=\"text-sm text-foreground/90\">\n          Professionals: \n          <span className=\"ml-2 font-mono font-semibold text-primary\">\n            {data.professionals.toLocaleString()}\n          </span>\n        </p>\n        {data.milestone && (\n          <p className=\"text-xs text-muted-foreground mt-2\">\n            {data.milestone}\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default function UXTimelineChart() {\n  return (\n    <>\n      <section id=\"formalization\" className=\"py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"space-y-6\">\n            <div className=\"bg-primary/[0.02] rounded-xl border border-primary/10 p-4 sm:p-6 md:p-8 transition-all duration-300 hover:border-primary/20\">\n              <div className=\"mb-4\">\n                <span className=\"text-muted-foreground uppercase tracking-wider text-xs font-mono\">Fig 03</span>\n                <h3 className=\"text-xl sm:text-2xl md:text-3xl font-semibold font-display text-foreground mt-1\">\n                  UX/UI Professional Roles Evolution Timeline\n                </h3>\n                <p className=\"text-xs sm:text-sm md:text-base text-foreground/70 mt-2\">\n                  Exponential growth of UX professionals from GUI inception to industry maturity\n                </p>\n              </div>\n              \n              <div className=\"w-full h-64 sm:h-80 md:h-96\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={data} margin={{ top: 20, right: 30, left: 60, bottom: 60 }}>\n                    <CartesianGrid \n                      strokeDasharray=\"3 3\" \n                      stroke=\"hsl(217, 100%, 53%)\" \n                      opacity={0.05}\n                      verticalPoints={[0]}\n                    />\n                    <XAxis \n                      dataKey=\"year\" \n                      stroke=\"transparent\"\n                      tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                      className=\"text-xs sm:text-sm\"\n                      axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n                      tickLine={false}\n                      label={{ \n                        value: 'Year', \n                        position: 'insideBottom', \n                        offset: -10,\n                        style: { fill: 'hsl(0, 0%, 55%)', fontSize: 11 }\n                      }}\n                      domain={[1970, 2025]}\n                    />\n                    <YAxis \n                      stroke=\"transparent\"\n                      tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                      className=\"text-xs sm:text-sm\"\n                      axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n                      tickLine={false}\n                      label={{ \n                        value: 'Professional Roles (log scale)', \n                        angle: -90, \n                        position: 'insideLeft',\n                        style: { fill: 'hsl(0, 0%, 55%)', fontSize: 11 }\n                      }}\n                      scale=\"log\"\n                      domain={[1, 1000000]}\n                      ticks={[1, 10, 100, 1000, 10000, 100000, 1000000]}\n                      tickFormatter={(value) => {\n                        if (value >= 1000000) return '1M';\n                        if (value >= 100000) return '100K';\n                        if (value >= 10000) return '10K';\n                        if (value >= 1000) return '1K';\n                        if (value >= 100) return '100';\n                        if (value >= 10) return '10';\n                        return '1';\n                      }}\n                    />\n                    <Tooltip \n                      content={<CustomTooltip />}\n                      cursor={{ stroke: 'hsl(217, 100%, 53%)', strokeWidth: 1, opacity: 0.2 }}\n                      animationDuration={200}\n                    />\n                    <Line \n                      type=\"monotone\" \n                      dataKey=\"professionals\" \n                      stroke=\"hsl(217, 100%, 53%)\"\n                      strokeWidth={3}\n                      dot={<CustomDot />}\n                      activeDot={{ \n                        r: 7, \n                        fill: 'hsl(354, 81%, 49%)',\n                        strokeWidth: 2,\n                        stroke: 'hsl(354, 81%, 49%)'\n                      }}\n                      animationDuration={1500}\n                      animationBegin={0}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n              \n              <p className=\"text-xs text-muted-foreground mt-4 font-mono\">\n                Source: Industry research on UX/UI professional growth patterns (1973-2025)\n              </p>\n            </div>\n\n            <div className=\"space-y-4 pt-4\">\n              <h4 className=\"font-semibold text-sm uppercase tracking-wider text-foreground/70\">Key Milestones</h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {data.filter(d => d.milestone).map((item, index) => (\n                  <div \n                    key={item.year}\n                    className=\"flex items-start space-x-3 p-3 bg-primary/[0.02] rounded-lg border border-primary/10 transition-all duration-200 hover:border-primary/20\"\n                    data-testid={`milestone-${item.year}`}\n                  >\n                    <div className=\"w-2 h-2 rounded-full bg-primary mt-1.5 flex-shrink-0 animate-pulse\" />\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-baseline justify-between\">\n                        <span className=\"font-mono text-sm font-semibold text-foreground\">{item.year}</span>\n                        <span className=\"text-xs text-muted-foreground\">{item.professionals.toLocaleString()} roles</span>\n                      </div>\n                      <p className=\"text-sm text-foreground/80 mt-0.5\">{item.milestone}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <p className=\"text-xs text-muted-foreground pt-4 font-mono\">\n              Note: Professional roles estimates based on industry growth and tool adoption data\n            </p>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"py-8 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-3xl mx-auto\">\n          <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p>\n              But the rapid growth won't be the last. Because today the Designers are back — in the hundreds of thousands — and they are backed by billions of dollars in design tools and resources to build user-centered experiences. However, their effort and tools alone are not enough to transform every digital experience. We need a UX Renaissance to democratize design and transform the way teams build products. Here is my treatise on how to get that done.\n            </p>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}","size_bytes":9059},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* ================================ */\n  /* DESIGN SYSTEM TOKENS */\n  /* ================================ */\n  \n  /* === IBM CARBON COLOR SYSTEM === */\n  /* Base Colors - White Theme */\n  --background: hsl(0, 0%, 100%); /* #ffffff */\n  --foreground: hsl(0, 0%, 9%); /* #161616 text-01 */\n  --card: hsl(0, 0%, 96%); /* #f4f4f4 ui-01 */\n  --card-foreground: hsl(0, 0%, 9%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(0, 0%, 9%);\n  \n  /* Primary & Secondary */\n  --primary: hsl(217, 100%, 53%); /* #0f62fe interactive-01 */\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(0, 0%, 15%); /* #262626 ui-01 dark */\n  --secondary-foreground: hsl(0, 0%, 100%);\n  \n  /* Accent & States */\n  --accent: hsl(217, 100%, 53%); /* #0f62fe */\n  --accent-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(0, 0%, 96%); /* #f4f4f4 */\n  --muted-foreground: hsl(0, 0%, 55%); /* #8d8d8d text-03 */\n  --destructive: hsl(354, 81%, 49%); /* #da1e28 danger-01 */\n  --destructive-foreground: hsl(0, 0%, 100%);\n  \n  /* UI Elements */\n  --border: hsl(0, 0%, 88%); /* #e0e0e0 ui-03 */\n  --input: hsl(0, 0%, 96%);\n  --ring: hsl(217, 100%, 53%);\n  \n  /* IBM Carbon Extended Palette */\n  --carbon-blue: hsl(217, 100%, 53%); /* #0f62fe */\n  --carbon-blue-hover: hsl(220, 100%, 46%); /* #0353e9 */\n  --carbon-blue-active: hsl(220, 100%, 31%); /* #002d9c */\n  --carbon-text-primary: hsl(0, 0%, 9%); /* #161616 */\n  --carbon-text-secondary: hsl(0, 0%, 32%); /* #525252 */\n  --carbon-text-tertiary: hsl(0, 0%, 55%); /* #8d8d8d */\n  --carbon-success: hsl(142, 63%, 39%); /* #24a148 */\n  --carbon-warning: hsl(47, 86%, 52%); /* #f1c21b */\n  --carbon-error: hsl(354, 81%, 49%); /* #da1e28 */\n  \n  /* Chart Colors - IBM Carbon */\n  --chart-1: hsl(217, 100%, 53%); /* Blue */\n  --chart-2: hsl(142, 63%, 39%); /* Green */\n  --chart-3: hsl(292, 48%, 55%); /* Purple */\n  --chart-4: hsl(354, 81%, 49%); /* Red */\n  --chart-5: hsl(47, 86%, 52%); /* Yellow */\n  --chart-dark-bg: hsl(0, 0%, 96%);\n  \n  /* === TYPOGRAPHY SYSTEM === */\n  /* Font Families */\n  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n  --font-serif: Georgia, 'Times New Roman', serif;\n  --font-mono: 'JetBrains Mono', 'Courier New', monospace;\n  --font-display: 'Space Grotesk', var(--font-sans);\n  \n  /* Font Sizes - Fluid Typography Scale */\n  --text-xs: clamp(0.75rem, 0.7rem + 0.2vw, 0.875rem);      /* 12-14px */\n  --text-sm: clamp(0.875rem, 0.8rem + 0.3vw, 1rem);         /* 14-16px */\n  --text-base: clamp(1rem, 0.95rem + 0.3vw, 1.125rem);      /* 16-18px */\n  --text-lg: clamp(1.125rem, 1.05rem + 0.4vw, 1.25rem);     /* 18-20px */\n  --text-xl: clamp(1.25rem, 1.15rem + 0.5vw, 1.5rem);       /* 20-24px */\n  --text-2xl: clamp(1.5rem, 1.35rem + 0.75vw, 2rem);        /* 24-32px */\n  --text-3xl: clamp(1.875rem, 1.65rem + 1.1vw, 2.5rem);     /* 30-40px */\n  --text-4xl: clamp(2.25rem, 2rem + 1.25vw, 3rem);          /* 36-48px */\n  --text-5xl: clamp(3rem, 2.5rem + 2.5vw, 4rem);            /* 48-64px */\n  --text-6xl: clamp(3.75rem, 3rem + 3.75vw, 6rem);          /* 60-96px */\n  \n  /* Font Weights */\n  --font-light: 300;\n  --font-normal: 400;\n  --font-medium: 500;\n  --font-semibold: 600;\n  --font-bold: 700;\n  \n  /* Line Heights */\n  --leading-none: 1;\n  --leading-tight: 1.15;\n  --leading-snug: 1.3;\n  --leading-normal: 1.5;\n  --leading-relaxed: 1.6;\n  --leading-loose: 1.75;\n  \n  /* Letter Spacing */\n  --tracking-tighter: -0.05em;\n  --tracking-tight: -0.025em;\n  --tracking-normal: 0;\n  --tracking-wide: 0.025em;\n  --tracking-wider: 0.05em;\n  \n  /* === SPACING SYSTEM === */\n  /* Base 8px scale */\n  --space-0: 0;\n  --space-px: 1px;\n  --space-0-5: 0.125rem;  /* 2px */\n  --space-1: 0.25rem;     /* 4px */\n  --space-1-5: 0.375rem;  /* 6px */\n  --space-2: 0.5rem;      /* 8px */\n  --space-2-5: 0.625rem;  /* 10px */\n  --space-3: 0.75rem;     /* 12px */\n  --space-3-5: 0.875rem;  /* 14px */\n  --space-4: 1rem;        /* 16px */\n  --space-5: 1.25rem;     /* 20px */\n  --space-6: 1.5rem;      /* 24px */\n  --space-7: 1.75rem;     /* 28px */\n  --space-8: 2rem;        /* 32px */\n  --space-9: 2.25rem;     /* 36px */\n  --space-10: 2.5rem;     /* 40px */\n  --space-11: 2.75rem;    /* 44px */\n  --space-12: 3rem;       /* 48px */\n  --space-14: 3.5rem;     /* 56px */\n  --space-16: 4rem;       /* 64px */\n  --space-20: 5rem;       /* 80px */\n  --space-24: 6rem;       /* 96px */\n  --space-28: 7rem;       /* 112px */\n  --space-32: 8rem;       /* 128px */\n  \n  /* === LAYOUT === */\n  /* Content Width */\n  --content-max-width: 1200px;\n  --content-narrow: 800px;\n  --content-wide: 1400px;\n  \n  /* Section Padding */\n  --section-padding-mobile: 2.5rem;    /* 40px */\n  --section-padding-tablet: 3.75rem;   /* 60px */\n  --section-padding-desktop: 7.5rem;   /* 120px */\n  \n  /* === BORDERS === */\n  /* Border Radius */\n  --radius-none: 0;\n  --radius-sm: 0.25rem;    /* 4px */\n  --radius-base: 0.5rem;   /* 8px */\n  --radius-md: 0.625rem;   /* 10px */\n  --radius-lg: 0.75rem;    /* 12px */\n  --radius-xl: 1rem;       /* 16px */\n  --radius-2xl: 1.5rem;    /* 24px */\n  --radius-full: 9999px;\n  --radius: var(--radius-base); /* Default */\n  \n  /* Border Width */\n  --border-width: 1px;\n  --border-width-2: 2px;\n  --border-width-4: 4px;\n  \n  /* === SHADOWS === */\n  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n  --shadow-base: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);\n  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);\n  --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n  --shadow-inner: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);\n  \n  /* === TRANSITIONS & ANIMATIONS === */\n  /* Durations */\n  --duration-75: 75ms;\n  --duration-100: 100ms;\n  --duration-150: 150ms;\n  --duration-200: 200ms;\n  --duration-300: 300ms;\n  --duration-500: 500ms;\n  --duration-700: 700ms;\n  --duration-1000: 1000ms;\n  \n  /* Easing Functions */\n  --ease-linear: linear;\n  --ease-in: cubic-bezier(0.4, 0, 1, 1);\n  --ease-out: cubic-bezier(0, 0, 0.2, 1);\n  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);\n  --ease-spring: cubic-bezier(0.4, 0, 0.2, 1);\n  \n  /* Combined Transitions */\n  --transition-fast: var(--duration-150) var(--ease-out);\n  --transition-base: var(--duration-200) var(--ease-out);\n  --transition-slow: var(--duration-300) var(--ease-in-out);\n  --transition-slower: var(--duration-500) var(--ease-in-out);\n  \n  /* === BREAKPOINTS (for reference in JS) === */\n  --breakpoint-sm: 640px;\n  --breakpoint-md: 768px;\n  --breakpoint-lg: 1024px;\n  --breakpoint-xl: 1280px;\n  --breakpoint-2xl: 1536px;\n  \n  /* === Z-INDEX SCALE === */\n  --z-base: 0;\n  --z-dropdown: 10;\n  --z-sticky: 20;\n  --z-fixed: 30;\n  --z-modal-backdrop: 40;\n  --z-modal: 50;\n  --z-popover: 60;\n  --z-tooltip: 70;\n}\n\n.dark {\n  /* IBM Carbon Dark Theme (Gray 100) */\n  --background: hsl(0, 0%, 9%); /* #161616 */\n  --foreground: hsl(0, 0%, 96%); /* #f4f4f4 text-01 */\n  --card: hsl(0, 0%, 15%); /* #262626 ui-01 */\n  --card-foreground: hsl(0, 0%, 96%);\n  --popover: hsl(0, 0%, 9%);\n  --popover-foreground: hsl(0, 0%, 96%);\n  --primary: hsl(217, 100%, 70%); /* #78a9ff link-01 dark */\n  --primary-foreground: hsl(0, 0%, 9%);\n  --secondary: hsl(0, 0%, 22%); /* #393939 ui-02 */\n  --secondary-foreground: hsl(0, 0%, 96%);\n  --muted: hsl(0, 0%, 15%);\n  --muted-foreground: hsl(0, 0%, 78%); /* #c6c6c6 text-02 */\n  --accent: hsl(217, 100%, 70%);\n  --accent-foreground: hsl(0, 0%, 9%);\n  --destructive: hsl(354, 95%, 66%); /* #ff8389 danger dark */\n  --destructive-foreground: hsl(0, 0%, 9%);\n  --border: hsl(0, 0%, 32%); /* #525252 ui-03 */\n  --input: hsl(0, 0%, 15%);\n  --ring: hsl(217, 100%, 70%);\n  --chart-dark-bg: hsl(0, 0%, 9%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  html {\n    scroll-behavior: smooth;\n    background-color: hsl(var(--background));\n    scrollbar-gutter: stable;\n  }\n  \n  body {\n    @apply bg-background text-foreground;\n    font-family: var(--font-sans);\n    font-size: var(--text-base);\n    line-height: var(--leading-relaxed);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  /* Typography Styles */\n  h1, h2, h3, h4, h5, h6 {\n    font-family: var(--font-display);\n    font-weight: var(--font-semibold);\n    line-height: var(--leading-tight);\n    letter-spacing: var(--tracking-tight);\n  }\n  \n  h1 {\n    font-size: var(--text-6xl);\n    line-height: var(--leading-none);\n  }\n  \n  h2 {\n    font-size: var(--text-5xl);\n  }\n  \n  h3 {\n    font-size: var(--text-4xl);\n  }\n  \n  h4 {\n    font-size: var(--text-3xl);\n  }\n  \n  h5 {\n    font-size: var(--text-2xl);\n  }\n  \n  h6 {\n    font-size: var(--text-xl);\n  }\n  \n  p {\n    font-size: var(--text-base);\n    line-height: var(--leading-relaxed);\n  }\n  \n  /* Selection Colors */\n  ::selection {\n    background-color: hsl(217 100% 53% / 0.2);\n    color: hsl(var(--foreground));\n  }\n  \n  ::-moz-selection {\n    background-color: hsl(217 100% 53% / 0.2);\n    color: hsl(var(--foreground));\n  }\n  \n  /* Focus Visible */\n  :focus-visible {\n    outline: 2px solid hsl(var(--accent));\n    outline-offset: 2px;\n  }\n  \n  /* Scrollbar Styling */\n  ::-webkit-scrollbar {\n    width: 12px;\n    height: 12px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background: hsl(var(--background));\n    border-radius: 6px;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background: hsl(217 100% 53% / 0.3);\n    border-radius: 6px;\n    border: 2px solid hsl(var(--background));\n    transition: background var(--transition-base);\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    background: hsl(217 100% 53% / 0.5);\n  }\n  \n  /* Firefox Scrollbar */\n  * {\n    scrollbar-width: thin;\n    scrollbar-color: hsl(217 100% 53% / 0.3) hsl(var(--background));\n  }\n}\n\n@layer components {\n  /* ================================ */\n  /* UTILITY CLASSES */\n  /* ================================ */\n  \n  /* Container */\n  .container-custom {\n    width: 100%;\n    max-width: var(--content-max-width);\n    margin: 0 auto;\n    padding-left: var(--space-4);\n    padding-right: var(--space-4);\n  }\n  \n  /* Section Padding */\n  .section-padding {\n    padding-top: var(--section-padding-mobile);\n    padding-bottom: var(--section-padding-mobile);\n  }\n  \n  @media (min-width: 768px) {\n    .section-padding {\n      padding-top: var(--section-padding-tablet);\n      padding-bottom: var(--section-padding-tablet);\n    }\n  }\n  \n  @media (min-width: 1024px) {\n    .section-padding {\n      padding-top: var(--section-padding-desktop);\n      padding-bottom: var(--section-padding-desktop);\n    }\n  }\n  \n  /* Grid System */\n  .grid-12 {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    gap: var(--space-6);\n  }\n  \n  @media (min-width: 768px) {\n    .grid-12 {\n      gap: var(--space-8);\n    }\n  }\n  \n  /* Glassmorphism */\n  .glass {\n    background: rgba(255, 255, 255, 0.05);\n    backdrop-filter: blur(10px);\n    -webkit-backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .glass-card {\n    background: rgba(244, 244, 244, 0.6);\n    backdrop-filter: blur(20px);\n    -webkit-backdrop-filter: blur(20px);\n    border: 1px solid rgba(15, 98, 254, 0.2);\n    transition: all var(--transition-slow);\n  }\n\n  .glass-card:hover {\n    background: rgba(244, 244, 244, 0.8);\n    border-color: rgba(15, 98, 254, 0.4);\n    transform: translateY(-4px);\n    box-shadow: var(--shadow-2xl);\n  }\n  \n  /* Transitions */\n  .transition-base {\n    transition: all var(--transition-base);\n  }\n  \n  .transition-slow {\n    transition: all var(--transition-slow);\n  }\n  \n  /* Hover Effects */\n  .hover-lift {\n    transition: transform var(--transition-base);\n  }\n  \n  .hover-lift:hover {\n    transform: translateY(-4px);\n  }\n  \n  .hover-scale {\n    transition: transform var(--transition-base);\n  }\n  \n  .hover-scale:hover {\n    transform: scale(1.02);\n  }\n  \n  /* Section Divider */\n  .section-divider {\n    height: 1px;\n    background: linear-gradient(90deg, transparent, hsl(217 100% 53% / 0.3), transparent);\n  }\n\n  /* Thesis Number */\n  .thesis-number {\n    background: hsl(0 0% 96%);\n    border: 1px solid hsl(217 100% 53% / 0.5);\n  }\n  \n  /* Button Hover Effects */\n  .button-hover {\n    position: relative;\n    overflow: hidden;\n    transition: all var(--transition-base);\n  }\n  \n  .button-hover::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 0;\n    height: 0;\n    border-radius: 50%;\n    background: hsl(217 100% 53% / 0.15);\n    transform: translate(-50%, -50%);\n    transition: width var(--transition-slow), height var(--transition-slow);\n  }\n  \n  .button-hover:hover::before {\n    width: 300px;\n    height: 300px;\n  }\n  \n  /* Link Underline Animation */\n  .link-underline {\n    position: relative;\n    transition: color var(--transition-base);\n  }\n  \n  .link-underline::after {\n    content: '';\n    position: absolute;\n    bottom: -2px;\n    left: 0;\n    width: 0;\n    height: 2px;\n    background: hsl(217 100% 53%);\n    transition: width var(--transition-base);\n  }\n  \n  .link-underline:hover::after {\n    width: 100%;\n  }\n  \n  /* Card Hover */\n  .card-hover {\n    transition: all var(--transition-base);\n    border: 1px solid hsl(var(--border));\n  }\n  \n  .card-hover:hover {\n    border-color: hsl(217 100% 53% / 0.5);\n    box-shadow: var(--shadow-lg);\n  }\n  \n  /* Timeline Styles */\n  .timeline-container {\n    position: relative;\n    padding: var(--space-16) 0;\n  }\n  \n  .timeline-line {\n    position: absolute;\n    top: 50%;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background: linear-gradient(90deg, transparent, hsl(217 100% 53%), transparent);\n    transform: translateY(-50%);\n  }\n  \n  .timeline-dot {\n    position: relative;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    background: hsl(217 100% 53%);\n    box-shadow: 0 0 0 4px hsl(var(--background)), 0 0 20px hsl(217 100% 53%);\n    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n  }\n  \n  .timeline-dot:hover {\n    width: 20px;\n    height: 20px;\n    box-shadow: 0 0 0 6px hsl(var(--background)), 0 0 30px hsl(217 100% 53%);\n  }\n  \n  .timeline-dot.active {\n    width: 20px;\n    height: 20px;\n    background: hsl(220 100% 46%);\n    box-shadow: 0 0 0 6px hsl(var(--background)), 0 0 40px hsl(220 100% 46%);\n  }\n  \n  .timeline-marker {\n    position: absolute;\n    width: 2px;\n    height: 60px;\n    background: linear-gradient(180deg, hsl(217 100% 53%), transparent);\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n  \n  /* Chart Container */\n  .chart-dark-container {\n    background: var(--chart-dark-bg);\n    border: 1px solid hsl(217 100% 53% / 0.15);\n    border-radius: var(--radius);\n    padding: var(--space-8);\n  }\n  \n  /* Area Chart Gradients */\n  .area-gradient-1 {\n    fill: url(#areaGradient1);\n  }\n  \n  .area-gradient-2 {\n    fill: url(#areaGradient2);\n  }\n  \n  /* Animations */\n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  .animate-fade-in-up {\n    animation: fadeInUp 0.6s ease-out;\n  }\n  \n  /* Staggered Animation Delays */\n  .animation-delay-200 {\n    animation-delay: var(--duration-200);\n  }\n  \n  .animation-delay-400 {\n    animation-delay: 400ms;\n  }\n  \n  .animation-delay-600 {\n    animation-delay: 600ms;\n  }\n  \n  @keyframes float {\n    0%, 100% {\n      transform: translateY(0px) rotate(12deg);\n    }\n    50% {\n      transform: translateY(-20px) rotate(15deg);\n    }\n  }\n\n  @keyframes pulse {\n    0%, 100% {\n      opacity: 0.5;\n      transform: scale(1);\n    }\n    50% {\n      opacity: 0.8;\n      transform: scale(1.05);\n    }\n  }\n\n  .animate-float {\n    animation: float 6s ease-in-out infinite;\n  }\n}\n\n/* Reduced Motion */\n@media (prefers-reduced-motion: reduce) {\n  html {\n    scroll-behavior: auto;\n  }\n  \n  *, *::before, *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/* Print Styles */\n@media print {\n  @page {\n    margin: 1.5cm;\n    size: A4;\n  }\n\n  html, body {\n    background: white !important;\n    color: black !important;\n  }\n\n  header, nav, footer {\n    display: none !important;\n  }\n\n  button, .hover-lift, .button-hover {\n    display: none !important;\n  }\n\n  .section-divider {\n    background: #e5e5e5 !important;\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    color: black !important;\n    page-break-after: avoid;\n  }\n\n  p, li {\n    color: black !important;\n  }\n\n  .thesis-number {\n    background: #f5f5f5 !important;\n    border: 1px solid #d5d5d5 !important;\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n\n  [data-state=\"closed\"],\n  [data-state=\"open\"] {\n    display: block !important;\n    height: auto !important;\n    overflow: visible !important;\n    animation: none !important;\n  }\n\n  svg {\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n\n  a {\n    color: #0066cc !important;\n    text-decoration: underline;\n  }\n\n  table {\n    page-break-inside: avoid;\n  }\n\n  .bg-accent {\n    background: #f5f5f5 !important;\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n\n  .border-accent {\n    border-color: #d5d5d5 !important;\n  }\n\n  .text-muted, .text-muted-foreground {\n    color: #666 !important;\n  }\n}\n","size_bytes":17495},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/components/market-share-chart.tsx":{"content":"import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { useState } from 'react';\n\n// Comprehensive market share data from 2010-2024\nconst marketData = [\n  {\n    year: 2010,\n    Photoshop: 85,\n    Sketch: 0,\n    'Adobe XD': 0,\n    Figma: 0,\n    InVision: 0,\n    Framer: 0,\n    Others: 15,\n    milestone: 'Sketch launches'\n  },\n  {\n    year: 2012,\n    Photoshop: 70,\n    Sketch: 20,\n    'Adobe XD': 0,\n    Figma: 0,\n    InVision: 0,\n    Framer: 0,\n    Others: 10,\n  },\n  {\n    year: 2014,\n    Photoshop: 50,\n    Sketch: 35,\n    'Adobe XD': 0,\n    Figma: 0,\n    InVision: 10,\n    Framer: 0,\n    Others: 5,\n  },\n  {\n    year: 2016,\n    Photoshop: 35,\n    Sketch: 40,\n    'Adobe XD': 5,\n    Figma: 0,\n    InVision: 15,\n    Framer: 0,\n    Others: 5,\n    milestone: 'Figma launches'\n  },\n  {\n    year: 2018,\n    Photoshop: 25,\n    Sketch: 35,\n    'Adobe XD': 10,\n    Figma: 15,\n    InVision: 10,\n    Framer: 5,\n    Others: 0,\n  },\n  {\n    year: 2020,\n    Photoshop: 15,\n    Sketch: 25,\n    'Adobe XD': 10,\n    Figma: 35,\n    InVision: 5,\n    Framer: 10,\n    Others: 0,\n    milestone: 'Figma overtakes Sketch'\n  },\n  {\n    year: 2022,\n    Photoshop: 10,\n    Sketch: 15,\n    'Adobe XD': 8,\n    Figma: 55,\n    InVision: 0,\n    Framer: 7,\n    Others: 5,\n    milestone: 'Adobe acquires Figma'\n  },\n  {\n    year: 2024,\n    Photoshop: 8,\n    Sketch: 10,\n    'Adobe XD': 5,\n    Figma: 65,\n    InVision: 0,\n    Framer: 7,\n    Others: 5,\n    milestone: 'Figma dominance'\n  },\n];\n\n// Color palette - IBM Carbon Design System colors\nconst toolColors: Record<string, string> = {\n  Figma: 'hsl(217, 100%, 53%)',      // IBM Carbon Blue\n  Sketch: 'hsl(292, 48%, 55%)',      // Purple\n  Photoshop: 'hsl(142, 63%, 39%)',   // Success green\n  'Adobe XD': 'hsl(47, 86%, 52%)',   // Yellow\n  InVision: 'hsl(354, 81%, 49%)',    // Red\n  Framer: 'hsl(180, 29%, 50%)',      // Teal\n  Others: 'hsl(0, 0%, 40%)',         // Neutral gray\n};\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    const data = marketData.find(d => d.year === label);\n    const sortedPayload = [...payload].sort((a, b) => b.value - a.value);\n    \n    return (\n      <div className=\"bg-card dark:bg-card border border-primary/40 rounded-lg px-4 py-3 shadow-xl transition-opacity duration-200 min-w-[200px]\">\n        <p className=\"font-display font-semibold text-foreground mb-2\">{label}</p>\n        {sortedPayload.map((entry: any) => {\n          if (entry.value > 0) {\n            return (\n              <div key={entry.name} className=\"flex justify-between items-center py-1\">\n                <div className=\"flex items-center gap-2\">\n                  <div \n                    className=\"w-3 h-3 rounded-sm\" \n                    style={{ backgroundColor: entry.color }}\n                  />\n                  <span className=\"text-sm font-sans text-foreground/90\">{entry.name}</span>\n                </div>\n                <span className=\"text-sm font-mono font-semibold text-foreground\">\n                  {entry.value}%\n                </span>\n              </div>\n            );\n          }\n          return null;\n        })}\n        {data?.milestone && (\n          <p className=\"text-xs font-sans text-primary mt-3 pt-2 border-t border-primary/20 italic\">\n            ✦ {data.milestone}\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Custom legend component with interactivity\nconst CustomLegend = ({ payload, onToggle, hiddenTools }: any) => {\n  return (\n    <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 md:gap-4 mt-6\">\n      {payload.map((entry: any) => {\n        const isHidden = hiddenTools.includes(entry.value);\n        return (\n          <button\n            key={entry.value}\n            onClick={() => onToggle(entry.value)}\n            className={`flex items-center gap-2 px-3 py-1.5 rounded-lg transition-all duration-200 \n              ${isHidden \n                ? 'opacity-40 bg-card hover:opacity-60' \n                : 'bg-primary/10 hover:bg-primary/20'\n              }`}\n          >\n            <div \n              className=\"w-3 h-3 rounded-sm transition-all duration-200\"\n              style={{ \n                backgroundColor: isHidden ? 'hsl(0, 0%, 40%)' : entry.color,\n              }}\n            />\n            <span className=\"text-xs sm:text-sm font-sans text-foreground/90 font-medium\">\n              {entry.value}\n            </span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default function MarketShareChart() {\n  const [hiddenTools, setHiddenTools] = useState<string[]>([]);\n  \n  const toggleTool = (tool: string) => {\n    setHiddenTools(prev => \n      prev.includes(tool) \n        ? prev.filter(t => t !== tool)\n        : [...prev, tool]\n    );\n  };\n  \n  // Filter data based on hidden tools\n  const displayData = marketData.map(entry => {\n    const newEntry = { ...entry };\n    hiddenTools.forEach(tool => {\n      if (tool in newEntry) {\n        (newEntry as any)[tool] = 0;\n      }\n    });\n    return newEntry;\n  });\n  \n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-primary/[0.02] rounded-xl border border-primary/10 p-4 sm:p-6 md:p-8 transition-all duration-300 hover:border-primary/20\">\n          <div className=\"mb-6\">\n            <span className=\"text-muted-foreground uppercase tracking-wider text-xs font-mono\">Fig 02</span>\n            <h3 className=\"text-xl sm:text-2xl md:text-3xl font-semibold font-display text-foreground mt-1\">\n              Design Tool Market Share Evolution\n            </h3>\n            <p className=\"text-xs sm:text-sm md:text-base font-sans text-foreground/70 mt-2\">\n              Percentage of professional designers using each tool as primary (2010-2024)\n            </p>\n          </div>\n          \n          <div className=\"h-64 sm:h-80 md:h-96 w-full\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart \n                data={displayData} \n                margin={{ top: 10, right: 30, left: 20, bottom: 60 }}\n              >\n                <CartesianGrid \n                  strokeDasharray=\"3 3\" \n                  stroke=\"hsl(217, 100%, 53%)\" \n                  opacity={0.05}\n                  verticalPoints={[0]}\n                />\n                <XAxis \n                  dataKey=\"year\" \n                  stroke=\"transparent\"\n                  tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                  className=\"text-xs sm:text-sm\"\n                  axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n                  tickLine={false}\n                  interval={0}\n                />\n                <YAxis \n                  stroke=\"transparent\"\n                  tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                  className=\"text-xs sm:text-sm\"\n                  axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n                  tickLine={false}\n                  domain={[0, 100]}\n                  tickFormatter={(value) => `${value}%`}\n                  label={{ \n                    value: 'Market Share (%)', \n                    angle: -90, \n                    position: 'insideLeft',\n                    style: { fill: 'hsl(0, 0%, 55%)', fontSize: 11 }\n                  }}\n                />\n                <Tooltip \n                  content={<CustomTooltip />}\n                  cursor={{ fill: 'hsl(217, 100%, 53%)', opacity: 0.05 }}\n                  animationDuration={200}\n                />\n                <Legend \n                  content={(props) => \n                    <CustomLegend \n                      {...props} \n                      onToggle={toggleTool} \n                      hiddenTools={hiddenTools} \n                    />\n                  }\n                />\n                \n                {/* Areas stacked from bottom to top */}\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Others\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Others}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={0}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Framer\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Framer}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={100}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"InVision\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.InVision}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={200}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Adobe XD\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors['Adobe XD']}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={300}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Photoshop\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Photoshop}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={400}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Sketch\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Sketch}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={500}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Figma\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Figma}\n                  fillOpacity={0.9}\n                  animationDuration={1200}\n                  animationBegin={600}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          \n          {/* Key Milestones */}\n          <div className=\"mt-8 pt-6 border-t border-primary/10\">\n            <h4 className=\"text-sm font-display font-semibold text-foreground/90 mb-3\">Key Milestones:</h4>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-primary text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2010</p>\n                  <p className=\"text-xs font-sans text-muted-foreground\">Sketch launches, challenges Photoshop</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-primary text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2016</p>\n                  <p className=\"text-xs font-sans text-muted-foreground\">Figma introduces real-time collaboration</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-primary text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2020</p>\n                  <p className=\"text-xs font-sans text-muted-foreground\">Figma becomes market leader</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-primary text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2022</p>\n                  <p className=\"text-xs font-sans text-muted-foreground\">Adobe acquires Figma for $20B</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <p className=\"text-xs text-muted-foreground mt-6 font-mono\">\n            Source: Designer Tools Survey, State of Design Reports (2010-2024)\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":12532},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        \"flag-green\": \"var(--flag-green)\",\n        sage: {\n          DEFAULT: \"#8AA97A\",\n          light: \"var(--sage-light)\",\n          dark: \"var(--sage-dark)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        display: [\"var(--font-display)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n      spacing: {\n        '18': '72px',\n        '20': '80px',\n        '22': '88px',\n        '24': '96px',\n        '26': '104px',\n        '28': '112px',\n        '30': '120px',\n        '32': '128px',\n      },\n      maxWidth: {\n        'container': '1200px',\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3235},"client/src/components/professional-formalization-section.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  User, \n  BookOpen, \n  Building2, \n  DollarSign, \n  TrendingUp, \n  Award, \n  Users, \n  Briefcase,\n  GraduationCap,\n  Lightbulb,\n  Target,\n  Brain,\n  CheckCircle,\n  ArrowRight\n} from \"lucide-react\";\nimport PullQuote from \"@/components/pull-quote\";\nimport DataCallout from \"@/components/data-callout\";\nimport DonNormanImg from \"@assets/Visionaries/Don-Norman_headshot.jpg\";\nimport JakobNielsenImg from \"@assets/Visionaries/jakob-nielsen.webp\";\nimport AlanCooperImg from \"@assets/Visionaries/AlanCooper.jpg\";\nimport JesseGarrettImg from \"@assets/Visionaries/Jesse-James-Garrett.jpg\";\nimport SteveKrugImg from \"@assets/Visionaries/Steve_Krug.png\";\n\nexport default function ProfessionalFormalizationSection() {\n  const timelineEvents = [\n    {\n      year: \"1993\",\n      event: \"Don Norman coins 'User Experience'\",\n      detail: \"Becomes Apple's first User Experience Architect, establishing UX as a formal discipline\",\n      type: \"milestone\"\n    },\n    {\n      year: \"1994\",\n      event: \"Jakob Nielsen publishes 'Usability Engineering'\",\n      detail: \"Foundational text establishes scientific approach to interface design\",\n      type: \"publication\"\n    },\n    {\n      year: \"1995\",\n      event: \"Nielsen Norman Group founded\",\n      detail: \"World's first UX consultancy launches, legitimizing the field professionally\",\n      type: \"company\"\n    },\n    {\n      year: \"1996\",\n      event: \"Alan Cooper's 'About Face' introduces personas\",\n      detail: \"Revolutionary methodology for understanding and designing for users\",\n      type: \"publication\"\n    },\n    {\n      year: \"1998\",\n      event: \"Jesse James Garrett's Elements framework\",\n      detail: \"Creates the definitive model for understanding user experience layers\",\n      type: \"framework\"\n    },\n    {\n      year: \"2000\",\n      event: \"First Information Architecture Summit\",\n      detail: \"Professional conference establishes IA as distinct discipline within UX\",\n      type: \"milestone\"\n    }\n  ];\n\n  const pioneers = [\n    {\n      name: \"Don Norman\",\n      title: \"The Godfather of UX\",\n      role: \"Cognitive Scientist & Design Theorist\",\n      company: \"Apple (1993-1997)\",\n      contributions: [\n        \"Coined the term 'User Experience' in 1993\",\n        \"Applied cognitive science to design\",\n        \"Wrote 'The Design of Everyday Things'\",\n        \"Advocated for human-centered design\"\n      ],\n      quote: \"I invented the term because I thought human interface and usability were too narrow. I wanted to cover all aspects of the person's experience with the system.\",\n      impact: \"Transformed design from aesthetic exercise to scientific discipline\",\n      keyPublication: \"The Design of Everyday Things (1988)\",\n      philosophy: \"Design for how people actually behave, not how you wish they would\"\n    },\n    {\n      name: \"Jakob Nielsen\",\n      title: \"The Usability Guru\",\n      role: \"Usability Engineer\",\n      company: \"Sun Microsystems (1994-1998)\",\n      contributions: [\n        \"Created the 10 Usability Heuristics\",\n        \"Pioneered discount usability methods\",\n        \"Established usability testing standards\",\n        \"Championed web accessibility\"\n      ],\n      quote: \"Users spend most of their time on other sites. This means that users prefer your site to work the same way as all the other sites they already know.\",\n      impact: \"Made usability testing accessible and affordable for all companies\",\n      keyPublication: \"Usability Engineering (1994)\",\n      philosophy: \"Simplicity wins over complexity, always\"\n    },\n    {\n      name: \"Alan Cooper\",\n      title: \"Father of Visual Basic\",\n      role: \"Software Designer & Theorist\",\n      company: \"Cooper (1992-present)\",\n      contributions: [\n        \"Invented the persona methodology\",\n        \"Created Visual Basic's interface\",\n        \"Defined interaction design as discipline\",\n        \"Wrote influential design manifestos\"\n      ],\n      quote: \"The inmates are running the asylum - programmers design for themselves, not users.\",\n      impact: \"Shifted focus from features to user goals and behaviors\",\n      keyPublication: \"About Face: The Essentials of Interaction Design (1995)\",\n      philosophy: \"Design for specific people with specific needs, not generic users\"\n    },\n    {\n      name: \"Jesse James Garrett\",\n      title: \"The Information Architect\",\n      role: \"User Experience Designer\",\n      company: \"Adaptive Path (2001-2014)\",\n      contributions: [\n        \"Created the Elements of User Experience model\",\n        \"Coined the term 'Ajax' for web development\",\n        \"Advanced information architecture practice\",\n        \"Pioneered UX strategy consulting\"\n      ],\n      quote: \"User experience is the quality of experience a person has when interacting with a specific design.\",\n      impact: \"Provided clear framework for understanding UX layers and dependencies\",\n      keyPublication: \"The Elements of User Experience (2002)\",\n      philosophy: \"Every design decision affects user experience at multiple levels\"\n    },\n    {\n      name: \"Steve Krug\",\n      title: \"The Common Sense Advocate\",\n      role: \"Usability Consultant\",\n      company: \"Independent (1990-present)\",\n      contributions: [\n        \"Popularized guerrilla usability testing\",\n        \"Made UX principles accessible to non-designers\",\n        \"Advocated for simplicity in web design\",\n        \"Influenced a generation of web designers\"\n      ],\n      quote: \"Don't make me think! When I look at a web page it should be self-evident, obvious, self-explanatory.\",\n      impact: \"Democratized UX knowledge beyond specialist practitioners\",\n      keyPublication: \"Don't Make Me Think (2000)\",\n      philosophy: \"The best designs are those that require the least cognitive effort\"\n    }\n  ];\n\n  const industryMilestones = [\n    {\n      year: \"1993\",\n      company: \"Apple\",\n      event: \"First UX Team\",\n      detail: \"Don Norman builds first formal User Experience team\",\n      employees: \"12 designers\",\n      budget: \"$2M\"\n    },\n    {\n      year: \"1995\",\n      company: \"Microsoft\",\n      event: \"Usability Labs\",\n      detail: \"Establishes dedicated usability testing facilities\",\n      employees: \"25 researchers\",\n      budget: \"$5M\"\n    },\n    {\n      year: \"1996\",\n      company: \"IBM\",\n      event: \"User-Centered Design\",\n      detail: \"Adopts company-wide UCD methodology\",\n      employees: \"50+ designers\",\n      budget: \"$10M\"\n    },\n    {\n      year: \"1998\",\n      company: \"Amazon\",\n      event: \"Customer Experience Team\",\n      detail: \"Creates dedicated CX organization\",\n      employees: \"30 specialists\",\n      budget: \"$8M\"\n    },\n    {\n      year: \"1999\",\n      company: \"Google\",\n      event: \"User Experience Group\",\n      detail: \"Hires first UX designer (later VP of Design)\",\n      employees: \"5 designers\",\n      budget: \"$1M\"\n    },\n    {\n      year: \"2000\",\n      company: \"eBay\",\n      event: \"Trust & Safety UX\",\n      detail: \"First UX team focused on user trust\",\n      employees: \"15 designers\",\n      budget: \"$3M\"\n    }\n  ];\n\n  const jobTitleEvolution = [\n    {\n      era: \"1990-1993\",\n      titles: [\"HCI Specialist\", \"Interface Designer\", \"Human Factors Engineer\"],\n      avgSalary: \"$38,000\",\n      totalJobs: \"~500 worldwide\"\n    },\n    {\n      era: \"1994-1996\",\n      titles: [\"Usability Engineer\", \"Interaction Designer\", \"Information Architect\"],\n      avgSalary: \"$45,000\",\n      totalJobs: \"~2,000 worldwide\"\n    },\n    {\n      era: \"1997-1999\",\n      titles: [\"User Experience Designer\", \"UX Architect\", \"Experience Lead\"],\n      avgSalary: \"$55,000\",\n      totalJobs: \"~8,000 worldwide\"\n    },\n    {\n      era: \"2000-2002\",\n      titles: [\"UX Designer\", \"UX Researcher\", \"UX Manager\", \"Chief Experience Officer\"],\n      avgSalary: \"$65,000\",\n      totalJobs: \"~25,000 worldwide\"\n    }\n  ];\n\n  const methodologies = [\n    {\n      name: \"Nielsen's 10 Usability Heuristics\",\n      year: \"1994\",\n      creator: \"Jakob Nielsen\",\n      principles: [\n        \"Visibility of system status\",\n        \"Match between system and real world\",\n        \"User control and freedom\",\n        \"Consistency and standards\",\n        \"Error prevention\",\n        \"Recognition rather than recall\",\n        \"Flexibility and efficiency of use\",\n        \"Aesthetic and minimalist design\",\n        \"Help users recognize and recover from errors\",\n        \"Help and documentation\"\n      ],\n      impact: \"Became the industry standard for heuristic evaluation\",\n      adoptionRate: \"Used by 78% of UX teams by 2000\"\n    },\n    {\n      name: \"Cooper's Persona Development\",\n      year: \"1996\",\n      creator: \"Alan Cooper\",\n      principles: [\n        \"Research-based user archetypes\",\n        \"Goal-directed design approach\",\n        \"Scenario-based thinking\",\n        \"Behavioral patterns over demographics\",\n        \"Primary vs. secondary personas\"\n      ],\n      impact: \"Replaced feature-driven with user-driven design\",\n      adoptionRate: \"Adopted by 45% of Fortune 500 by 2001\"\n    },\n    {\n      name: \"User-Centered Design Process\",\n      year: \"1999\",\n      creator: \"ISO 13407 Standard\",\n      principles: [\n        \"Understand users and tasks\",\n        \"Produce design solutions iteratively\",\n        \"Evaluate designs against requirements\",\n        \"Involve users throughout design\"\n      ],\n      impact: \"First international standard for UX process\",\n      adoptionRate: \"Required for government contracts in 12 countries\"\n    },\n    {\n      name: \"Information Architecture\",\n      year: \"1998\",\n      creator: \"Rosenfeld & Morville\",\n      principles: [\n        \"Organization systems\",\n        \"Labeling systems\",\n        \"Navigation systems\",\n        \"Search systems\",\n        \"Controlled vocabularies and thesauri\"\n      ],\n      impact: \"Established IA as core UX discipline\",\n      adoptionRate: \"Essential for all web projects over 100 pages\"\n    },\n    {\n      name: \"Usability Testing Protocols\",\n      year: \"1993\",\n      creator: \"Multiple practitioners\",\n      principles: [\n        \"Task-based testing scenarios\",\n        \"Think-aloud protocol\",\n        \"Quantitative metrics (time, errors, success)\",\n        \"Qualitative observations\",\n        \"Iterative testing cycles\"\n      ],\n      impact: \"Made user feedback integral to design process\",\n      adoptionRate: \"92% of successful products used testing by 2000\"\n    }\n  ];\n\n  return (\n    <section className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\" data-testid=\"section-professional-formalization\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Opening Narrative */}\n        <div className=\"max-w-4xl mx-auto mb-20\">\n          <h2 className=\"font-display text-3xl sm:text-4xl lg:text-5xl font-bold mb-8 leading-tight\" data-testid=\"text-formalization-heading\">\n            The Birth of a Profession: When Design Became Science\n          </h2>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p className=\"text-base sm:text-lg lg:text-xl\">\n              In 1993, a cognitive scientist at Apple did something revolutionary: he gave a name to what designers had been doing intuitively for years. When Don Norman coined \"User Experience,\" he didn't just create a job title — he legitimized an entire field of study, transforming design from art into science, from opinion into methodology.\n            </p>\n            \n            <p className=\"text-sm sm:text-base\">\n              The formalization of UX marked a pivotal shift in how companies approached product development. No longer could interfaces be designed based on engineering constraints or executive preferences. A new breed of professionals emerged, armed with psychology degrees, research methodologies, and an unwavering focus on the end user. They didn't just make things pretty; they made them work for humans.\n            </p>\n\n            <p className=\"text-sm sm:text-base\">\n              Between 1993 and 2000, the field exploded from a handful of pioneers to thousands of practitioners. Universities launched programs, consultancies opened doors, and Fortune 500 companies scrambled to build UX teams. This is the story of how user experience transformed from radical idea to essential business function.\n            </p>\n          </div>\n        </div>\n\n        {/* Historical Timeline */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <BookOpen className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold\">Key Moments in UX History</h3>\n          </div>\n          \n          <div className=\"relative\">\n            {/* Timeline Line */}\n            <div className=\"absolute left-8 top-0 bottom-0 w-0.5 bg-gradient-to-b from-accent/50 via-accent/30 to-transparent\" />\n            \n            <div className=\"space-y-8\">\n              {timelineEvents.map((event) => (\n                <div key={event.year} className=\"relative pl-20\" data-testid={`timeline-${event.year}`}>\n                  {/* Year Badge */}\n                  <div className=\"absolute left-0 top-0 w-16 h-16 rounded-full bg-background border-2 border-accent/50 flex items-center justify-center\">\n                    <span className=\"text-xs sm:text-sm font-bold\">{event.year}</span>\n                  </div>\n                  \n                  {/* Content Card */}\n                  <Card className={`p-6 ${\n                    event.type === 'milestone' ? 'bg-gradient-to-r from-accent/10 to-transparent' :\n                    event.type === 'publication' ? 'bg-gradient-to-r from-blue-500/10 to-transparent' :\n                    event.type === 'company' ? 'bg-gradient-to-r from-green-500/10 to-transparent' :\n                    'bg-gradient-to-r from-purple-500/10 to-transparent'\n                  } border-accent/30`}>\n                    <div className=\"flex items-start justify-between\">\n                      <div>\n                        <h4 className=\"text-lg sm:text-xl font-bold mb-2\">{event.event}</h4>\n                        <p className=\"text-sm sm:text-base text-foreground/70\">{event.detail}</p>\n                      </div>\n                      <div className={`px-3 py-1 rounded-full text-xs sm:text-sm font-semibold ${\n                        event.type === 'milestone' ? 'bg-accent/20 text-accent' :\n                        event.type === 'publication' ? 'bg-blue-500/20 text-blue-400' :\n                        event.type === 'company' ? 'bg-green-500/20 text-green-400' :\n                        'bg-purple-500/20 text-purple-400'\n                      }`}>\n                        {event.type}\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Pull Quote from Don Norman */}\n        <PullQuote\n          quote=\"I invented the term because I thought Human Interface and usability were too narrow. I wanted to cover all aspects of the person's experience with the system.\"\n          attribution=\"Don Norman\"\n        />\n\n        {/* Key Data Callout */}\n        <DataCallout\n          value=\"<100 people with 'UX' in job title worldwide in 1995\"\n          label=\"By 2000, this number grew 250x with average salaries increasing 44% from $45k to $65k, marking the explosive growth of the UX profession\"\n          type=\"users\"\n        />\n\n        {/* Pioneer Profiles */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <User className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold\">The Pioneers Who Defined the Field</h3>\n          </div>\n          \n          <div className=\"space-y-8\">\n            {pioneers.map((pioneer, index) => {\n              const images = [\n                DonNormanImg,\n                JakobNielsenImg,\n                AlanCooperImg,\n                JesseGarrettImg,\n                SteveKrugImg\n              ];\n              \n              return (\n                <Card key={pioneer.name} className=\"overflow-hidden bg-card/30 border-accent/20\" data-testid={`pioneer-${pioneer.name.toLowerCase().replace(' ', '-')}`}>\n                  <div className=\"grid md:grid-cols-[320px_1fr] gap-0\">\n                    {/* Image Section */}\n                    <div className=\"bg-black/40 p-6\">\n                      <img \n                        src={images[index]} \n                        alt={pioneer.name}\n                        className=\"w-full aspect-square object-cover rounded-lg\"\n                      />\n                    </div>\n                    \n                    {/* Content Section */}\n                    <div className=\"p-8\">\n                      {/* Header with Quote */}\n                      <div className=\"mb-8\">\n                        <h4 className=\"text-xl sm:text-2xl font-bold mb-1\">{pioneer.name}</h4>\n                        <p className=\"text-accent text-xs sm:text-sm font-semibold mb-1\">{pioneer.title}</p>\n                        <p className=\"text-muted-foreground text-xs sm:text-sm mb-4\">{pioneer.role} • {pioneer.company}</p>\n                        \n                        <blockquote className=\"border-l-4 border-accent/50 pl-4 mt-6\">\n                          <p className=\"italic text-foreground/70 text-xs sm:text-sm\">\"{pioneer.quote}\"</p>\n                        </blockquote>\n                      </div>\n                      \n                      {/* Grid Layout for Info Sections */}\n                      <div className=\"grid md:grid-cols-2 gap-8\">\n                        {/* Key Contributions */}\n                        <div>\n                          <p className=\"text-xs sm:text-sm text-accent font-bold uppercase tracking-wider mb-4\">Key Contributions</p>\n                          <ul className=\"space-y-3\">\n                            {pioneer.contributions.map((contribution, idx) => (\n                              <li key={idx} className=\"flex items-start gap-3 text-xs sm:text-sm\">\n                                <span className=\"text-accent font-mono text-xs mt-0.5 flex-shrink-0\">0{idx + 1}</span>\n                                <span className=\"text-foreground/80 leading-relaxed\">{contribution}</span>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                        \n                        {/* Industry Impact */}\n                        <div>\n                          <p className=\"text-xs sm:text-sm text-accent font-bold uppercase tracking-wider mb-4\">Industry Impact</p>\n                          <p className=\"text-xs sm:text-sm text-foreground/80 leading-relaxed mb-6\">{pioneer.impact}</p>\n                          \n                          {/* Key Publication */}\n                          <p className=\"text-xs sm:text-sm text-accent font-bold uppercase tracking-wider mb-2\">Key Publication</p>\n                          <p className=\"text-xs sm:text-sm text-foreground/80 mb-6\">{pioneer.keyPublication}</p>\n                          \n                          {/* Philosophy */}\n                          <p className=\"text-xs sm:text-sm text-accent font-bold uppercase tracking-wider mb-2\">Philosophy</p>\n                          <p className=\"text-xs sm:text-sm italic text-foreground/70\">{pioneer.philosophy}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Industry Formation */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <Building2 className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold\">The First UX Teams & Consultancies</h3>\n          </div>\n          \n          <div className=\"grid gap-6 mb-12\">\n            {industryMilestones.map((milestone) => (\n              <Card key={milestone.year + milestone.company} className=\"p-6 bg-gradient-to-r from-accent/5 to-transparent border-accent/30\" data-testid={`industry-${milestone.company.toLowerCase()}`}>\n                <div className=\"flex flex-wrap items-center justify-between gap-4\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-12 h-12 rounded-lg bg-accent/20 flex items-center justify-center\">\n                      <span className=\"text-xs sm:text-sm font-bold\">{milestone.year}</span>\n                    </div>\n                    <div>\n                      <h4 className=\"text-base sm:text-lg font-bold\">{milestone.company}: {milestone.event}</h4>\n                      <p className=\"text-xs sm:text-sm text-foreground/70\">{milestone.detail}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex gap-6\">\n                    <div className=\"text-right\">\n                      <p className=\"text-xs sm:text-sm font-bold text-accent\">{milestone.employees}</p>\n                      <p className=\"text-xs sm:text-sm text-muted-foreground\">Team Size</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"text-xs sm:text-sm font-bold text-accent\">{milestone.budget}</p>\n                      <p className=\"text-xs sm:text-sm text-muted-foreground\">Annual Budget</p>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n\n          {/* Consultancy Rise */}\n          <Card className=\"p-8 bg-gradient-to-br from-blue-500/10 to-transparent border-blue-500/30\">\n            <div className=\"flex items-start gap-4\">\n              <Briefcase className=\"w-6 h-6 text-blue-400 mt-1\" />\n              <div>\n                <h4 className=\"text-lg sm:text-xl font-semibold mb-3 text-blue-400\">Rise of UX Consultancies</h4>\n                <div className=\"grid sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  <div>\n                    <p className=\"text-sm sm:text-base font-semibold mb-2\">Nielsen Norman Group (1998)</p>\n                    <p className=\"text-xs sm:text-sm text-foreground/70\">First pure-play UX consultancy. Clients included Microsoft, IBM, and Sun. Established evidence-based design practice.</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm sm:text-base font-semibold mb-2\">Cooper (1992)</p>\n                    <p className=\"text-xs sm:text-sm text-foreground/70\">Pioneered interaction design consulting. Created Visual Basic interface. Developed persona methodology for clients.</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm sm:text-base font-semibold mb-2\">Adaptive Path (2001)</p>\n                    <p className=\"text-xs sm:text-sm text-foreground/70\">Founded by Jesse James Garrett and peers. Focused on UX strategy. Coined Ajax, advanced web standards.</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Job Title Evolution */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <GraduationCap className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold\">Evolution of UX Job Titles & Compensation</h3>\n          </div>\n          \n          <div className=\"grid gap-4\">\n            {jobTitleEvolution.map((era, index) => (\n              <Card key={era.era} className=\"p-6 bg-card/50 backdrop-blur border-accent/30\" data-testid={`job-evolution-${era.era}`}>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <div className=\"flex items-center gap-3 mb-2\">\n                      <div className=\"w-2 h-8 bg-accent rounded-full\" />\n                      <h4 className=\"text-xl font-bold\">{era.era}</h4>\n                    </div>\n                    <div className=\"flex flex-wrap gap-2 mb-3\">\n                      {era.titles.map((title) => (\n                        <span key={title} className=\"px-3 py-1 bg-accent/20 text-accent text-sm rounded-full font-medium\">\n                          {title}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-2xl font-bold text-accent\">{era.avgSalary}</p>\n                    <p className=\"text-xs text-muted-foreground\">Average Salary</p>\n                    <p className=\"text-sm font-medium mt-2\">{era.totalJobs}</p>\n                    <p className=\"text-xs text-muted-foreground\">Total Jobs</p>\n                  </div>\n                </div>\n                {index < jobTitleEvolution.length - 1 && (\n                  <div className=\"flex justify-center mt-4\">\n                    <ArrowRight className=\"w-4 h-4 text-accent/50\" />\n                  </div>\n                )}\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Methodologies */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <Target className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-3xl font-semibold\">Methodologies That Became Standards</h3>\n          </div>\n          \n          <div className=\"space-y-8\">\n            {methodologies.map((method) => (\n              <Card key={method.name} className=\"p-8 bg-gradient-to-br from-accent/5 to-transparent border-accent/30\" data-testid={`methodology-${method.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                <div className=\"grid lg:grid-cols-3 gap-6\">\n                  <div className=\"lg:col-span-1\">\n                    <h4 className=\"text-xl font-bold mb-2\">{method.name}</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <p>\n                        <span className=\"text-muted-foreground\">Created by:</span> <span className=\"font-medium\">{method.creator}</span>\n                      </p>\n                      <p>\n                        <span className=\"text-muted-foreground\">Year:</span> <span className=\"font-medium\">{method.year}</span>\n                      </p>\n                      <p>\n                        <span className=\"text-muted-foreground\">Adoption:</span> <span className=\"font-medium text-accent\">{method.adoptionRate}</span>\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"lg:col-span-2\">\n                    <div className=\"mb-4\">\n                      <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-3\">Core Principles</p>\n                      <ul className=\"grid sm:grid-cols-2 gap-2\">\n                        {method.principles.map((principle, index) => (\n                          <li key={index} className=\"flex items-start gap-2 text-sm\">\n                            <CheckCircle className=\"w-4 h-4 text-accent mt-0.5 flex-shrink-0\" />\n                            <span className=\"text-foreground/80\">{principle}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                    \n                    <div className=\"pt-4 border-t border-accent/20\">\n                      <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-2\">Impact</p>\n                      <p className=\"text-sm text-foreground/80\">{method.impact}</p>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Industry Impact Stats */}\n        <div className=\"grid md:grid-cols-4 gap-6 mb-20\">\n          <Card className=\"p-6 bg-gradient-to-br from-accent/20 to-accent/10 border-accent/30\">\n            <Brain className=\"w-6 h-6 text-accent mb-3\" />\n            <h4 className=\"text-3xl font-bold text-accent mb-1\">12</h4>\n            <p className=\"text-sm font-medium\">Psychology PhDs</p>\n            <p className=\"text-xs text-foreground/70\">in first Apple UX team</p>\n          </Card>\n          \n          <Card className=\"p-6 bg-gradient-to-br from-blue-500/20 to-blue-500/10 border-blue-500/30\">\n            <Award className=\"w-6 h-6 text-blue-400 mb-3\" />\n            <h4 className=\"text-3xl font-bold text-blue-400 mb-1\">$1B+</h4>\n            <p className=\"text-sm font-medium\">Saved annually</p>\n            <p className=\"text-xs text-foreground/70\">through usability fixes</p>\n          </Card>\n          \n          <Card className=\"p-6 bg-gradient-to-br from-green-500/20 to-green-500/10 border-green-500/30\">\n            <Lightbulb className=\"w-6 h-6 text-green-400 mb-3\" />\n            <h4 className=\"text-3xl font-bold text-green-400 mb-1\">3,000</h4>\n            <p className=\"text-sm font-medium\">UX Patents filed</p>\n            <p className=\"text-xs text-foreground/70\">1993-2000</p>\n          </Card>\n          \n          <Card className=\"p-6 bg-gradient-to-br from-purple-500/20 to-purple-500/10 border-purple-500/30\">\n            <Users className=\"w-6 h-6 text-purple-400 mb-3\" />\n            <h4 className=\"text-3xl font-bold text-purple-400 mb-1\">92%</h4>\n            <p className=\"text-sm font-medium\">Success rate</p>\n            <p className=\"text-xs text-foreground/70\">for tested products</p>\n          </Card>\n        </div>\n\n        {/* Closing Narrative */}\n        <div className=\"max-w-4xl mx-auto\">\n          <Separator className=\"mb-12 bg-accent/20\" />\n          \n          <h3 className=\"font-display text-3xl font-semibold mb-8\">The Profession Takes Shape</h3>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90\">\n            <p>\n              By the turn of the millennium, user experience had evolved from a radical idea at Apple to an essential business function across the technology industry. The pioneers of the 1990s didn't just create job titles and methodologies — they fundamentally changed how products were conceived, designed, and evaluated.\n            </p>\n            \n            <p>\n              The formalization of UX brought scientific rigor to what had been an intuitive practice. Designers could now point to research, cite principles, and demonstrate ROI. Companies that invested in UX saw their products succeed at rates that made the business case undeniable. A $1 investment in UX returned $100 in value — a ratio that turned skeptics into believers.\n            </p>\n            \n            <p>\n              Perhaps most importantly, this period established the user as the ultimate arbiter of design success. No longer could products be judged solely on technical specifications or aesthetic appeal. The question became: does it work for the people who use it? This simple but profound shift would reshape not just the technology industry, but eventually every industry that touches human lives.\n            </p>\n            \n            <p className=\"font-medium text-accent\">\n              The pioneers of the 1990s didn't know they were creating a profession that would employ millions and shape billions of daily interactions. They simply believed that technology should serve humanity, not the other way around. That belief, formalized into methods and practices during these crucial years, became the foundation of modern product design.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":31759},"client/src/components/section-divider.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface SectionDividerProps {\n  number: string;\n  label: string;\n  className?: string;\n}\n\nexport default function SectionDivider({ number, label, className }: SectionDividerProps) {\n  const dividerRef = useRef<HTMLDivElement>(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const [hasAnimated, setHasAnimated] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        // Only animate once when first entering viewport\n        if (entry.isIntersecting && !hasAnimated) {\n          setIsVisible(true);\n          setHasAnimated(true);\n        }\n      },\n      {\n        threshold: 0.2, // Trigger when 20% visible\n        rootMargin: \"0px 0px -50px 0px\", // Slightly before element is fully in view\n      }\n    );\n\n    if (dividerRef.current) {\n      observer.observe(dividerRef.current);\n    }\n\n    return () => {\n      if (dividerRef.current) {\n        observer.unobserve(dividerRef.current);\n      }\n    };\n  }, [hasAnimated]);\n\n  return (\n    <div\n      ref={dividerRef}\n      className={cn(\n        \"relative w-full overflow-hidden py-16 md:py-20\",\n        className\n      )}\n      data-testid={`section-divider-${number}`}\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"relative flex items-center\">\n          {/* Large watermark number - positioned to the left */}\n          <div\n            className={cn(\n              \"absolute -left-4 md:-left-8 lg:-left-12\",\n              \"transition-all duration-1000 ease-out\",\n              isVisible ? \"opacity-100 translate-x-0\" : \"opacity-0 -translate-x-10\"\n            )}\n            style={{\n              transitionDelay: \"100ms\",\n            }}\n          >\n            <span\n              className={cn(\n                \"font-display font-bold\",\n                \"text-[80px] sm:text-[100px] md:text-[120px] lg:text-[140px]\",\n                \"leading-none select-none\",\n                \"text-[#8AA97A]\",\n                \"opacity-[0.12]\"\n              )}\n              aria-hidden=\"true\"\n            >\n              {number}\n            </span>\n          </div>\n\n          {/* Section content container */}\n          <div className=\"relative z-10 flex-1 pl-20 sm:pl-32 md:pl-40 lg:pl-48\">\n            <div className=\"flex items-center gap-6\">\n              {/* Decorative line */}\n              <div\n                className={cn(\n                  \"h-[2px] bg-gradient-to-r from-[#8AA97A]/60 to-transparent\",\n                  \"transition-all duration-1000 ease-out\",\n                  isVisible ? \"opacity-100 w-24 sm:w-32 md:w-40\" : \"opacity-0 w-0\"\n                )}\n                style={{\n                  transitionDelay: \"300ms\",\n                }}\n              />\n\n              {/* Section label */}\n              <h2\n                className={cn(\n                  \"font-display text-2xl sm:text-3xl md:text-4xl font-semibold\",\n                  \"text-foreground tracking-tight\",\n                  \"transition-all duration-1000 ease-out\",\n                  isVisible ? \"opacity-100 translate-x-0\" : \"opacity-0 translate-x-10\"\n                )}\n                style={{\n                  transitionDelay: \"400ms\",\n                }}\n              >\n                {label}\n              </h2>\n\n              {/* Additional decorative element - geometric shape */}\n              <div\n                className={cn(\n                  \"hidden md:block\",\n                  \"transition-all duration-1000 ease-out\",\n                  isVisible ? \"opacity-100 rotate-0 scale-100\" : \"opacity-0 rotate-45 scale-0\"\n                )}\n                style={{\n                  transitionDelay: \"500ms\",\n                }}\n              >\n                <svg\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  className=\"text-[#8AA97A]/40\"\n                >\n                  <rect\n                    x=\"3\"\n                    y=\"3\"\n                    width=\"18\"\n                    height=\"18\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    transform=\"rotate(45 12 12)\"\n                    style={{\n                      transformOrigin: \"center\",\n                      transform: \"rotate(45deg)\",\n                    }}\n                  />\n                </svg>\n              </div>\n            </div>\n\n            {/* Subtle underline */}\n            <div\n              className={cn(\n                \"mt-4 h-[1px] bg-gradient-to-r from-[#8AA97A]/30 via-[#8AA97A]/10 to-transparent\",\n                \"transition-all duration-1200 ease-out\",\n                isVisible ? \"opacity-100 w-full\" : \"opacity-0 w-0\"\n              )}\n              style={{\n                transitionDelay: \"600ms\",\n              }}\n            />\n          </div>\n\n          {/* Right decorative dots pattern */}\n          <div\n            className={cn(\n              \"absolute right-4 md:right-8 lg:right-12 top-1/2 -translate-y-1/2\",\n              \"grid grid-cols-3 gap-1.5\",\n              \"transition-all duration-1000 ease-out\",\n              isVisible ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"\n            )}\n            style={{\n              transitionDelay: \"700ms\",\n            }}\n            aria-hidden=\"true\"\n          >\n            {[...Array(9)].map((_, i) => (\n              <div\n                key={i}\n                className={cn(\n                  \"w-1.5 h-1.5 rounded-full bg-[#8AA97A]/20\",\n                  \"transition-all duration-300\",\n                  i === 4 && \"bg-[#8AA97A]/40\" // Center dot slightly brighter\n                )}\n                style={{\n                  transitionDelay: `${700 + i * 50}ms`,\n                  opacity: isVisible ? 1 : 0,\n                  transform: isVisible ? \"scale(1)\" : \"scale(0)\",\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":6063},"client/src/components/interactive-timeline.tsx":{"content":"import { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\nimport { ChevronRight, DollarSign } from \"lucide-react\";\n\ninterface TimelineEvent {\n  year: string;\n  company: string;\n  product: string;\n  price: string;\n  adjustedPrice: string;\n  description: string;\n  impact: string;\n  milestone: string;\n}\n\ninterface InteractiveTimelineProps {\n  events: TimelineEvent[];\n  title: string;\n}\n\nexport default function InteractiveTimeline({ events, title }: InteractiveTimelineProps) {\n  const [selectedEvent, setSelectedEvent] = useState<string | null>(null);\n  const [hoveredEvent, setHoveredEvent] = useState<string | null>(null);\n\n  return (\n    <div className=\"space-y-8\">\n      <h3 className=\"font-display text-3xl font-semibold\">{title}</h3>\n      \n      {/* Desktop: Horizontal Timeline */}\n      <div className=\"hidden lg:block\">\n        <div className=\"relative pb-12\">\n          {/* Timeline Line */}\n          <div className=\"absolute top-12 left-0 right-0 h-0.5 bg-accent/30\" />\n          \n          {/* Timeline Points */}\n          <div className=\"relative flex justify-between items-start\">\n            {events.map((event, index) => {\n              const isSelected = selectedEvent === event.year;\n              const isHovered = hoveredEvent === event.year;\n              const isActive = isSelected || isHovered;\n              \n              return (\n                <div key={event.year} className=\"flex flex-col items-center flex-1\">\n                  {/* Point */}\n                  <motion.div\n                    className={`cursor-pointer w-6 h-6 rounded-full relative z-10 flex items-center justify-center transition-all ${\n                      isActive \n                        ? 'bg-accent scale-125 shadow-lg shadow-accent/50' \n                        : event.company === 'Apple' \n                          ? 'bg-accent/50' \n                          : 'bg-blue-500/50'\n                    }`}\n                    onHoverStart={() => setHoveredEvent(event.year)}\n                    onHoverEnd={() => setHoveredEvent(null)}\n                    onClick={() => setSelectedEvent(isSelected ? null : event.year)}\n                    whileHover={{ scale: 1.2 }}\n                    whileTap={{ scale: 0.9 }}\n                  >\n                    <div className=\"w-2 h-2 bg-background rounded-full\" />\n                  </motion.div>\n                  \n                  {/* Year Label */}\n                  <div className=\"mt-4 text-center\">\n                    <p className={`font-mono font-bold text-sm transition-colors ${\n                      isActive ? 'text-accent' : 'text-muted-foreground'\n                    }`}>\n                      {event.year}\n                    </p>\n                    <p className=\"text-xs text-muted-foreground mt-1\">{event.product}</p>\n                  </div>\n                  \n                  {/* Company Badge */}\n                  <div className={`mt-2 px-2 py-0.5 rounded-full text-xs font-semibold ${\n                    event.company === 'Apple' \n                      ? 'bg-accent/20 text-accent' \n                      : 'bg-blue-500/20 text-blue-400'\n                  }`}>\n                    {event.company}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Expanded Details */}\n        <AnimatePresence mode=\"wait\">\n          {selectedEvent && (\n            <motion.div\n              key={selectedEvent}\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: \"auto\" }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              {events.map((event) => {\n                if (event.year !== selectedEvent) return null;\n                \n                return (\n                  <Card \n                    key={event.year}\n                    className={`p-6 glass-card ${\n                      event.company === 'Apple' \n                        ? 'border-accent/30' \n                        : 'border-blue-500/30'\n                    }`}\n                  >\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <div>\n                        <h4 className=\"text-2xl font-bold mb-2\">{event.product}</h4>\n                        <div className=\"flex items-center gap-2 text-sm mb-4\">\n                          <DollarSign className=\"w-4 h-4\" />\n                          <span className=\"font-mono\">{event.price}</span>\n                          <span className=\"text-muted-foreground\">({event.adjustedPrice})</span>\n                        </div>\n                        <p className=\"text-foreground/80\">{event.description}</p>\n                      </div>\n                      <div className=\"space-y-4\">\n                        <div>\n                          <p className=\"text-xs text-accent font-semibold mb-1\">Market Impact</p>\n                          <p className=\"text-sm\">{event.impact}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-xs text-accent font-semibold mb-1\">Historical Significance</p>\n                          <p className=\"text-sm\">{event.milestone}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </Card>\n                );\n              })}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n\n      {/* Mobile/Tablet: Vertical Timeline */}\n      <div className=\"lg:hidden space-y-6\">\n        <div className=\"relative\">\n          <div className=\"absolute left-4 top-0 bottom-0 w-0.5 bg-accent/30\" />\n          \n          {events.map((event) => (\n            <motion.div\n              key={event.year}\n              className=\"relative pl-12 pb-8\"\n              initial={{ opacity: 0, x: -20 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.5 }}\n            >\n              {/* Point */}\n              <div className={`absolute left-0 top-0 w-8 h-8 rounded-full flex items-center justify-center ${\n                event.company === 'Apple' \n                  ? 'bg-accent/50 border-2 border-accent' \n                  : 'bg-blue-500/50 border-2 border-blue-500'\n              }`}>\n                <span className=\"text-xs font-bold\">{event.year.slice(-2)}</span>\n              </div>\n              \n              {/* Content */}\n              <Card className={`p-4 glass-card ${\n                event.company === 'Apple' \n                  ? 'border-accent/30' \n                  : 'border-blue-500/30'\n              }`}>\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <div className={`px-2 py-1 rounded-full text-xs font-semibold ${\n                    event.company === 'Apple' \n                      ? 'bg-accent/20 text-accent' \n                      : 'bg-blue-500/20 text-blue-400'\n                  }`}>\n                    {event.company}\n                  </div>\n                  <h4 className=\"font-bold text-lg\">{event.product}</h4>\n                </div>\n                \n                <div className=\"flex items-center gap-2 text-sm mb-2\">\n                  <DollarSign className=\"w-3 h-3\" />\n                  <span className=\"font-mono\">{event.price}</span>\n                </div>\n                \n                <p className=\"text-sm text-foreground/80 mb-3\">{event.description}</p>\n                \n                <div className=\"text-xs space-y-1\">\n                  <p><span className=\"text-accent font-semibold\">Impact:</span> {event.impact}</p>\n                </div>\n              </Card>\n            </motion.div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7854},"attached_assets/chart_script_2_1759698157802.py":{"content":"import pandas as pd\nimport plotly.graph_objects as go\n\n# Load the data\ndf = pd.read_csv(\"ux_ui_tools_evolution.csv\")\n\n# Create figure with secondary y-axis\nfig = go.Figure()\n\n# Add bar chart for UX professionals using each tool\nfig.add_trace(\n    go.Bar(\n        x=df['period'],\n        y=df['ux_professionals_using'],\n        name='Users',\n        marker_color='#1FB8CD',\n        yaxis='y',\n        hovertemplate='<b>%{x}</b><br>Users: %{y:,.0f}<extra></extra>'\n    )\n)\n\n# Add line chart for collaboration capability\nfig.add_trace(\n    go.Scatter(\n        x=df['period'],\n        y=df['collaboration_capability'],\n        mode='lines+markers',\n        name='Collab %',\n        line=dict(color='#DB4545', width=3),\n        marker=dict(size=8, color='#DB4545'),\n        yaxis='y2',\n        hovertemplate='<b>%{x}</b><br>Collaboration: %{y}%<extra></extra>'\n    )\n)\n\n# Update layout with dual y-axes\nfig.update_layout(\n    title='UX Tool Evolution & User Growth',\n    xaxis_title='Era',\n    yaxis=dict(\n        title='Users',\n        side='left',\n        tickformat='.0s'  # This will show 600k instead of 600000\n    ),\n    yaxis2=dict(\n        title='Collab %',\n        side='right',\n        overlaying='y',\n        ticksuffix='%'\n    ),\n    legend=dict(\n        orientation='h',\n        yanchor='bottom',\n        y=1.05,\n        xanchor='center',\n        x=0.5\n    )\n)\n\n# Update traces for better visual appeal\nfig.update_traces(cliponaxis=False)\n\n# Save the chart as both PNG and SVG\nfig.write_image(\"chart.png\")\nfig.write_image(\"chart.svg\", format=\"svg\")\n\nprint(\"Chart saved successfully as chart.png and chart.svg\")","size_bytes":1618},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/stacked-area-chart.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from \"recharts\";\nimport { Card } from \"@/components/ui/card\";\n\ninterface DataPoint {\n  year: string;\n  [key: string]: string | number;\n}\n\ninterface AreaConfig {\n  dataKey: string;\n  name: string;\n  color: string;\n}\n\ninterface StackedAreaChartProps {\n  data: DataPoint[];\n  areas: AreaConfig[];\n  title: string;\n  description?: string;\n  yAxisLabel?: string;\n}\n\nexport default function StackedAreaChart({\n  data,\n  areas,\n  title,\n  description,\n  yAxisLabel = \"Value\"\n}: StackedAreaChartProps) {\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-card dark:bg-card border border-primary/40 p-4 rounded-lg shadow-xl\" data-testid=\"chart-tooltip\">\n          <p className=\"font-mono text-foreground font-bold mb-2\" data-testid=\"tooltip-label\">{label}</p>\n          {payload.map((entry: any, index: number) => (\n            <div key={index} className=\"flex items-center gap-2 text-sm\" data-testid={`tooltip-entry-${index}`}>\n              <div\n                className=\"w-3 h-3 rounded-full\"\n                style={{ backgroundColor: entry.color }}\n              />\n              <span className=\"text-foreground/80\">{entry.name}:</span>\n              <span className=\"font-semibold text-foreground\" data-testid={`tooltip-value-${index}`}>\n                {typeof entry.value === 'number' ? entry.value.toFixed(1) : entry.value}M\n              </span>\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 30 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true }}\n      transition={{\n        type: \"spring\",\n        stiffness: 100,\n        damping: 20,\n      }}\n      data-testid=\"stacked-area-chart\"\n    >\n      <Card className=\"chart-dark-container\">\n        <div className=\"mb-6\">\n          <h4 className=\"font-display text-xl sm:text-2xl md:text-3xl font-bold text-foreground mb-2\">\n            {title}\n          </h4>\n          {description && (\n            <p className=\"text-xs sm:text-sm md:text-base text-muted-foreground\">\n              {description}\n            </p>\n          )}\n        </div>\n\n        <div className=\"w-full h-64 sm:h-80 md:h-96\" data-testid=\"chart-container\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart\n              data={data}\n              margin={{ top: 10, right: 10, left: 0, bottom: 0 }}\n            >\n              <defs>\n                {areas.map((area, index) => (\n                  <linearGradient\n                    key={area.dataKey}\n                    id={`gradient-${area.dataKey}`}\n                    x1=\"0\"\n                    y1=\"0\"\n                    x2=\"0\"\n                    y2=\"1\"\n                  >\n                    <stop\n                      offset=\"5%\"\n                      stopColor={area.color}\n                      stopOpacity={0.8}\n                    />\n                    <stop\n                      offset=\"95%\"\n                      stopColor={area.color}\n                      stopOpacity={0.1}\n                    />\n                  </linearGradient>\n                ))}\n              </defs>\n\n              <CartesianGrid\n                strokeDasharray=\"3 3\"\n                stroke=\"hsl(217, 100%, 53%)\"\n                opacity={0.05}\n                vertical={false}\n              />\n\n              <XAxis\n                dataKey=\"year\"\n                stroke=\"transparent\"\n                tick={{ fill: \"hsl(0, 0%, 55%)\", fontSize: 10 }}\n                className=\"text-xs sm:text-sm\"\n                axisLine={{ stroke: \"hsl(0, 0%, 88%)\", opacity: 0.1 }}\n                tickLine={false}\n              />\n\n              <YAxis\n                stroke=\"transparent\"\n                tick={{ fill: \"hsl(0, 0%, 55%)\", fontSize: 10 }}\n                className=\"text-xs sm:text-sm\"\n                axisLine={{ stroke: \"hsl(0, 0%, 88%)\", opacity: 0.1 }}\n                tickLine={false}\n                label={{\n                  value: yAxisLabel,\n                  angle: -90,\n                  position: \"insideLeft\",\n                  fill: \"hsl(0, 0%, 55%)\",\n                  fontSize: 11,\n                }}\n              />\n\n              <Tooltip content={<CustomTooltip />} />\n\n              <Legend\n                wrapperStyle={{\n                  paddingTop: \"20px\",\n                }}\n                iconType=\"circle\"\n                formatter={(value) => (\n                  <span className=\"text-xs sm:text-sm text-foreground/80\">{value}</span>\n                )}\n              />\n\n              {areas.map((area) => (\n                <Area\n                  key={area.dataKey}\n                  type=\"monotone\"\n                  dataKey={area.dataKey}\n                  stackId=\"1\"\n                  stroke={area.color}\n                  strokeWidth={2}\n                  fill={`url(#gradient-${area.dataKey})`}\n                  animationDuration={1500}\n                  animationBegin={0}\n                />\n              ))}\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Legend Labels Below Chart */}\n        <div className=\"mt-6 pt-6 border-t border-primary/20\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-3 md:gap-4\">\n            {areas.map((area, index) => (\n              <div key={area.dataKey} className=\"flex items-center gap-3\" data-testid={`legend-item-${index}`}>\n                <div\n                  className=\"w-4 h-4 rounded-full\"\n                  style={{ backgroundColor: area.color }}\n                />\n                <span className=\"text-xs sm:text-sm text-foreground/70\" data-testid={`legend-label-${index}`}>{area.name}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Card>\n    </motion.div>\n  );\n}\n","size_bytes":6012},"attached_assets/content-1759693755476.md":{"content":"The Defense Reformation - YouTube\n\n[Photo image of Palantir](https://www.youtube.com/channel/UCwed6_f0WcDIioXvMQfcP2Q?embeds_referring_euri=https%3A%2F%2F18theses.com%2F&embeds_referring_origin=https%3A%2F%2F18theses.com)\n\nPalantir\n\n128K subscribers\n\n[The Defense Reformation](https://www.youtube.com/watch?v=UVLDANg9oLw)\n\nPalantir\n\nSearch\n\nWatch later\n\nShare\n\nCopy link\n\nInfo\n\nShopping\n\nTap to unmute\n\nIf playback doesn't begin shortly, try restarting your device.\n\nMore videos\n\n## More videos\n\nYou're signed out\n\nVideos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.\n\nCancelConfirm\n\nShare\n\nInclude playlist\n\nAn error occurred while retrieving sharing information. Please try again later.\n\n[Watch on](https://www.youtube.com/watch?v=UVLDANg9oLw&embeds_referring_euri=https%3A%2F%2F18theses.com%2F&embeds_referring_origin=https%3A%2F%2F18theses.com)\n\n0:00\n\n0:00 / 59:01\n•Live\n\n•\n\n* * *\n\nIntroduction\n\n## As a nation, we are in an undeclared state of emergency.\n\n* * *\n\nAround 2014, Russia annexed Crimea, China militarized the Spratly Islands in the South China Sea, and Iran was allowed to pursue the bomb. A decade later, we have had more than 300 attacks on U.S. bases by Iran, 1,200 people slaughtered in a pogrom in Israel, an estimated 1 million casualties in brutal combat in Ukraine, and an unprecedented tempo of CCP phase zero operations in the Taiwan Straits.\n\nThis is a hot Cold War II. The West has empirically lost deterrence. We must respond to this emergency to regain it.\n\nWe have a peer adversary: China. “Near-Peer” is a shibboleth, a euphemism to avoid the embarrassment of acknowledging we have peers when we were once peerless. In World War II, America was the best at mass production. Today that distinction belongs to our adversary. America’s national security requires a robust industrial base, or it will lose the next war and plunge the world into darkness under authoritarian regimes. In the current environment, American industries can’t produce a minimum line of ships, subs, munitions, aircraft, and more. It takes a decade or two to deliver new major weapon systems at scale. If we’re in a hot war, we would only have days worth of ammunition and weapons on hand. Even more alarming is our lack of capacity and capability to rapidly repair and regenerate our weapon systems.\n\nGiven the vast sums we have spent on defense in these decades of Pax Americana, it would be reasonable to wonder: what went wrong?\n\n![](https://18theses.com/assets/poster-large-BI_TEpf7.jpg)\n\n* * *\n\nVideo\n\nDefense forum\n\nand discussion\n\n* * *\n\nSection 1\n\n## The Last Supper and Great Schism\n\n* * *\n\nIn 1993, after the end of the Cold War, America wanted a Peace Dividend and defense spending was slashed by 67%. The Secretary of Defense held a dinner at the Pentagon — the so-called “Last Supper” — to tell the 51 primes they would not all survive. Today, there are 5.\n\n* * *\n\nFig 01\n\n### Corporate consolidation in the defense sector\n\nThe most important consequence of the Last Supper wasn’t a reduction in competition in the Defense Industrial Base, but the decoupling of commercial innovation from defense and the rise of the government [Monopsony](https://www.firstbreakfast.com/p/break-the-department-of-defenses). Consolidation bred conformity and pushed out the crazy Founders and innovative engineers. This was the Great Schism of the American Industrial Base.\n\nBefore the fall of the Berlin Wall, only 6% of defense spending went to defense specialists — so called traditionals. The vast majority of the spend went to companies that had both defense and commercial businesses. Chrysler made cars and missiles. Ford made satellites until 1990. General Mills — the cereal company — made artillery and inertial guidance systems.\n\n* * *\n\nFig 02\n\n### Major weapon systems acquisition budget: share by industrial base category\n\n* * *\n\nDefense Specialists\n\n* * *\n\nAerospace & Defense Companies\n\n* * *\n\nCommercial Companies\n\nServing defense and\n\nmany other markets\n\n1977\n\n1989\n\n* * *\n\nFall of the Berlin Wall, Collapse of the USSR\n\n2001\n\n2013\n\n2025\n\nSource: Gregory C. Allen and Doug Berenson, Why is the U.S. Defense Industrial Base So Isolated from the U.S. Economy? (2024), and Martin Bollinger, based on the DOD’s Annual Report to the Congress and Program Acquisition Cost by Weapon System, fiscal years 1977 through 2025\n\nSource: Department of Defense Report on the State of Competition within the Defense Industrial Base, February 2022\n\nNote: “Major weapon systems” includes MDAPs and some additional spending, not the entire procurement and research, development, test, and evaluation budget\n\nBut today that 6% has ballooned to 86%. The Monopsony’s fixation on cost-plus contracting, control, and tedious regulation has made working in the national interest bad business, suitable only to risk-averse investors who are addicted to dividends and buybacks — a luxury only affordable at the end of history. That is not what the most dynamic parts of the American economy do — only the dying parts.\n\nWorking with the Monopsony as a defense contractor is so unappealing that Ball would rather [make beer cans than satellite buses](https://www.ball.com/newswire/article/124211/ball-completes-sale-of-aerospace-business). That is depressing.\n\nThe S&P 500 last added a defense company 46 years ago — until Palantir’s addition in September 2024. That resembles Europe’s sclerotic capital markets, not America’s.\n\n* * *\n\nFig 03\n\n### Defense companies by market cap\n\nCompany\n\nMarket Cap\n\nEmployees\n\nFounded\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='113'%20height='27'%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M27.82%202.86h6.97c2.54%200%204.27.14%205.68%201.67C41.51%205.6%2042%207.01%2042%208.57s-.52%202.94-1.64%204.07c-1.1%201.09-2.54%201.79-6.29%201.79H30.7v9.25h-2.88zM30.7%2012h3.43c1.91%200%204.82-.14%204.82-3.54S36.24%205.2%2034.74%205.2h-4.03V12ZM51.35%2023.68c-.2-.72-.26-1.41-.26-2.16-1.29%202.4-3.26%202.63-4.47%202.63-3.32%200-5.1-1.87-5.1-4.27%200-1.15.4-3%202.54-4.24%201.56-.86%203.86-.95%205.02-.95.69%200%201.13.03%201.96.09%200-1.79%200-2.57-.52-3.2-.55-.72-1.73-.95-2.51-.95-2.74%200-2.88%201.87-2.91%202.45h-2.71c.08-.75.17-1.76%201.01-2.74%201.1-1.21%203.14-1.56%204.67-1.56%202.11%200%204.35.66%205.13%202.13.46.87.49%201.56.49%202.22l-.12%206.92c0%20.23.03%202.16.23%203.63zm-1.87-7.13c-1.1%200-5.22%200-5.22%202.94%200%20.92.57%202.51%203%202.51%201.38%200%202.42-.55%203.09-1.56.61-.98.63-1.79.69-3.81-.49-.06-.89-.09-1.56-.09ZM56.08%202.86h2.71v20.82h-2.71zM70.44%2023.68c-.2-.72-.26-1.41-.26-2.16-1.3%202.4-3.26%202.63-4.47%202.63-3.32%200-5.11-1.87-5.11-4.27%200-1.15.41-3%202.54-4.24%201.56-.86%203.86-.95%205.02-.95.69%200%201.12.03%201.96.09%200-1.79%200-2.57-.52-3.2-.55-.72-1.73-.95-2.51-.95-2.74%200-2.88%201.87-2.91%202.45h-2.71c.09-.75.17-1.76%201.01-2.74%201.09-1.21%203.14-1.56%204.67-1.56%202.11%200%204.35.66%205.13%202.13.46.87.49%201.56.49%202.22l-.11%206.92c0%20.23.03%202.16.23%203.63zm-1.87-7.13c-1.1%200-5.22%200-5.22%202.94%200%20.92.58%202.51%203%202.51%201.38%200%202.42-.55%203.09-1.56.6-.98.63-1.79.69-3.81-.49-.06-.89-.09-1.56-.09ZM75.21%2010.88l-.03-1.67h2.71l.03%202.34c.32-.61%201.35-2.63%204.64-2.63%201.29%200%205.25.49%205.25%204.93v9.83h-2.77v-9.2c0-.95-.12-1.82-.78-2.48-.69-.66-1.64-.98-2.56-.98-1.96%200-3.78%201.41-3.78%204.32v8.33h-2.71v-12.8ZM88.65%209.2h2.57V6.12l2.68-.86v3.95h3.23v1.99H93.9v8.62c0%20.72%200%201.93%201.93%201.93.55%200%201.06-.09%201.3-.15v2.11c-.49.09-1.27.17-2.25.17-2.48%200-3.66-.72-3.66-3.08v-9.6h-2.57V9.21ZM99.03%202.86h3.26v3.03h-3.26zm.29%206.34h2.71v14.47h-2.71zM104.53%2012.14c0-.98-.06-1.99-.15-2.94h2.74l.06%202.8c.52-2.02%202.25-2.68%203.46-2.85a8.3%208.3%200%200%201%201.87-.06v2.65c-.14-.06-.32-.09-.52-.11-.2-.03-.46-.03-.78-.03-3.2%200-3.95%201.9-3.95%204.38v7.7h-2.74V12.15Z'/%3e%3c/g%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M11.07.08C5.46.08.91%204.63.91%2010.24S5.46%2020.4%2011.07%2020.4s10.16-4.55%2010.16-10.16S16.68.08%2011.07.08m0%2017.2c-3.88%200-7.02-3.15-7.02-7.02s3.14-7.02%207.02-7.02%207.02%203.14%207.02%207.02-3.14%207.02-7.02%207.02'/%3e%3cpath%20d='m20.15%2019.51-9.08%203.92-9.08-3.92L.48%2022.4l10.59%204.52%2010.59-4.52z'/%3e%3c/g%3e%3c/svg%3e)\n\n$381,639,000,000\n\n4,164\n\n2003\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2088%2034'%3e%3cpath%20fill='%23f4f4e4'%20d='M13.497.49c.376-.094.753-.141%201.129-.188l1.74%209.972c-.376.047-.753.094-1.129.188zm-.423%2011.007c.376-.282.753-.47%201.176-.659L9.217%202.043c-.376.235-.8.423-1.176.659l5.033%208.796ZM10.205%2017c0-.376.047-.753.094-1.082H.327c-.047.329-.047.659-.047%201.035%200%20.329%200%20.659.047.988h9.972c-.047-.329-.094-.611-.094-.941m13.546%200a6.745%206.745%200%200%201-6.773%206.773c-3.34%200-6.115-2.446-6.679-5.644L.892%2021.562c.188.753.47%201.458.753%202.117l9.313-3.434-7.573%206.491c.47.659%201.035%201.317%201.599%201.928l7.102-6.021-4.657%208.137c.753.517%201.505.988%202.352%201.364l4.374-7.667-1.505%208.702c.941.235%201.881.423%202.869.517l1.411-8.137%201.411%208.137a21%2021%200%200%200%203.01-.517l-1.317-7.526%203.81%206.632a15.7%2015.7%200%200%200%202.963-1.74l-3.481-6.115%205.362%204.515a18.2%2018.2%200%200%200%202.258-2.775l-4.798-4.045%205.832%202.164c.564-1.129.941-2.305%201.223-3.575l-5.127-1.881h5.456c.047-.611.094-1.27.094-1.928%200-.753-.047-1.505-.141-2.211H23.372c.235.753.376%201.505.376%202.305m-13.355-1.551a6.6%206.6%200%200%201%20.659-1.693l-9.408-3.434c-.235.564-.423%201.129-.611%201.693zM29.584%205.9l-7.667%206.444c.188.188.376.423.517.611l7.667-6.444a6%206%200%200%200-.517-.611m-3.81-3.246c-.282-.188-.564-.329-.8-.47l-5.033%208.702c.282.141.564.282.847.47zm-13.359%209.36L4.701%205.523c-.376.376-.706.8-1.035%201.223l7.667%206.491c.329-.47.659-.847%201.082-1.223m5.268-1.74c.329.047.659.094.988.188L20.412.49c-.329-.047-.659-.141-.988-.188l-1.74%209.972Z'/%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M41.484%2025.655V8.345h6.303c2.117%200%203.763.517%204.986%201.552%201.176%201.035%201.787%202.493%201.787%204.327q0%201.481-.706%202.681c-.706%201.2-1.082%201.458-1.834%201.976l4.233%206.773H51.22l-3.01-5.55h-2.305v5.55h-4.421Zm5.644-13.97h-1.317v5.033h1.27q2.963%200%202.963-2.54c.047-1.646-.941-2.493-2.916-2.493M60.251%2025.655V12.062h-5.315V8.346h15.24v3.716h-5.315v13.593zM70.27%2025.655l6.021-8.984-5.597-8.278h5.409l3.057%205.315%203.01-5.315h5.221l-5.644%208.466%205.974%208.796h-5.409l-3.481-5.879-3.293%205.879z'/%3e%3c/g%3e%3c/svg%3e)\n\n$213,591,000,000\n\n185,000\n\n1934\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='168'%20height='39'%3e%3cpath%20fill='%23f4f4e4'%20d='M25.6%2023.63c2.8-6.01.78-13.17-4.74-16.83%202.15-2.21%204.48-4.4%206.93-6.49-2.87%201.7-5.58%203.64-8.13%205.79C13.09%202.68%205%205.22%201.57%2011.79a13.41%2013.41%200%200%200%201.72%2014.94C.73%2032.29.32%2036.74%202.54%2038.25c2.43%201.61%207.69-1.32%2010.89-6.08%200%200-4.89%204.41-7.58%203.4-1.65-.62-1.65-3.16-.3-6.78%205.31%203.9%2012.66%203.36%2017.35-1.27l.48.89c5.84-.48%2023.28-.94%2023.28-.94-.04-.82-11.59-.03-21.06-3.83ZM1.66%2017.97c0-6.52%205.3-11.8%2011.82-11.79%201.68%200%203.34.36%204.87%201.06A64.2%2064.2%200%200%200%204.08%2025.13a11.8%2011.8%200%200%201-2.42-7.16m11.79%2011.8c-2.65%200-5.22-.88-7.3-2.53%202.34-5.27%207.09-12.34%2013.58-19.25%205.04%203.17%206.92%209.61%204.39%2015-2.05-.92-3.94-2.15-5.6-3.65l3.56%206.67a11.8%2011.8%200%200%201-8.62%203.75ZM105.58%2016.75l2.18-2.9h-7.61l1.87-2.49h7.62l2.19-2.9H96.64L86.19%2022.32h15.19l2.18-2.9h-7.61l2.01-2.67zM116.12%208.46l-10.44%2013.86h7.58L123.7%208.46zM141.38%208.46l-5.3%207.03-1.63-7.03h-5.92l-10.44%2013.86h5.01l5.24-6.96%201.62%206.96h5.98l10.45-13.86zM166.15%208.46h-12.18c-2.01%200-3.9.94-5.1%202.54l-6.29%208.35c-.25.32-.38.71-.38%201.12%200%201.02.83%201.86%201.85%201.86h12.18c2.01%200%203.9-.94%205.11-2.54l1.52-1.98h1.76l2.2-2.97h-9.33l-2.97%203.91c-.31.42-.8.66-1.33.66h-2.15a.49.49%200%200%201-.49-.49c0-.1.03-.21.1-.29L155.6%2012c.31-.42.8-.67%201.33-.66h2.15c.27%200%20.49.22.49.49%200%20.1-.04.2-.1.29l-.81%201.08h7.57l1.34-1.78c.62-.81.46-1.98-.36-2.59-.32-.25-.72-.38-1.13-.38l.07.02ZM90.42%2010.32c0-1.02-.83-1.85-1.85-1.85H76.39c-2.01%200-3.9.94-5.11%202.54l-6.29%208.35c-.61.83-.44%201.99.39%202.6.32.24.7.36%201.1.37h12.18c2.01%200%203.9-.94%205.11-2.54l6.29-8.35c.24-.32.37-.72.37-1.12Zm-8.47%201.81L77%2018.75c-.31.42-.8.67-1.33.66h-2.19c-.27%200-.48-.22-.48-.49%200-.1.03-.2.09-.28l4.95-6.63c.31-.42.81-.66%201.33-.66h2.15c.27%200%20.49.22.49.49%200%20.1-.04.2-.1.29z'/%3e%3cpath%20fill='%23f4f4e4'%20d='M61.77%2015.73a6.32%206.32%200%200%200%203.68-2.39l1.45-1.91c.62-.81.46-1.98-.36-2.59-.32-.25-.72-.38-1.13-.38H50.04L39.59%2022.32h15.9c2.01%200%203.9-.94%205.11-2.54l1.48-1.98c.19-.26.3-.57.3-.89%200-.47-.22-.92-.6-1.2v.02Zm-7.03%201.8-.94%201.25c-.31.42-.8.66-1.33.66h-3.1l1.98-2.67h2.97c.27%200%20.49.22.49.49%200%20.1-.03.21-.1.29h.03Zm4.06-5.39L58%2013.2c-.32.41-.81.66-1.33.65h-3.1l1.87-2.49h2.97c.27%200%20.49.22.49.49%200%20.1-.04.2-.1.29'/%3e%3c/svg%3e)\n\n$177,569,000,000\n\n170,000\n\n1934\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='252'%20height='39'%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M3.17%2019.25h4.06L4.77%2030.86h6.49l-.6%202.84H.1l3.06-14.46ZM16%2020.85c2.22-1.84%205.03-2%206.09-2%205.77%200%206.45%204.14%205.69%207.67-1.22%205.77-5.69%207.53-9.13%207.53-3.84%200-6.97-2.12-5.83-7.51.2-.96.98-3.84%203.18-5.69m3.32%2010.25c2.86%200%203.9-2.64%204.32-4.65.42-2.02.16-3.02-.14-3.66-.42-.8-1.3-1.04-2.18-1.04-2.64%200-3.84%202.28-4.39%204.76-.48%202.3-.28%204.59%202.38%204.59ZM39.81%2023.8c.14-1.46-.78-2-1.92-2-2.42%200-3.62%202.22-4.19%204.87-.2.88-.94%204.52%202.16%204.52%202.12%200%202.66-1.54%202.86-2.1h4.16C41.9%2033.62%2037.21%2034%2035.33%2034c-1.4%200-3.82-.24-5.09-1.92-1.22-1.68-1-3.98-.68-5.49.42-1.98%201.3-3.96%202.98-5.51%201.84-1.68%203.84-2.12%205.95-2.12%202.34%200%204%20.56%204.89%201.76.9%201.24.64%202.54.54%203.08H39.8ZM47.33%2019.25h4.06l-1.34%206.35%205.97-6.35h4.75l-6.33%206.37%203.66%208.09h-4.97l-3.16-7.69-1.64%207.69h-4.07l3.06-14.46ZM62.69%2019.25h4.05l-1.18%205.65h4.82l1.18-5.65h4.06l-3.06%2014.46h-4.07l1.24-5.85h-4.85l-1.24%205.85h-4.02l3.06-14.46ZM78.34%2019.29h10.85l-.58%202.76h-6.89l-.64%203h6.49l-.6%202.76h-6.49l-.64%203.08h7.05l-.6%202.8H75.28l3.06-14.42ZM91.7%2019.29h10.85l-.58%202.76h-6.89l-.64%203h6.49l-.6%202.76h-6.49l-.64%203.08h7.05l-.6%202.8H88.64l3.06-14.42ZM105.13%2019.25h6.11c1.72%200%203.98.18%205.27%201.2%201.82%201.46%201.9%203.84%201.44%205.99-.68%203.2-2.2%205.57-5.37%206.71-1.6.56-3.36.56-4.37.56h-6.15l3.06-14.46Zm1.64%2011.67h1.72c2.66-.02%204.6-1.16%205.33-4.52.92-4.39-2.36-4.39-3.58-4.39l-1.58-.02-1.88%208.93ZM128.27%2019.25h6.31l.34%209.79%204.35-9.79%206.31-.02-3.06%2014.48h-3.78l2.76-12.13-6.01%2012.13h-3.6l-.7-12.23-2.5%2012.23h-3.46l3.06-14.46ZM152.9%2019.25h4.89l2.64%2014.46h-4.52l-.38-2.9h-5.79l-1.6%202.9h-4l8.77-14.46Zm2.26%208.89-.58-6.07h-.06l-3.28%206.07zM165.01%2019.25h6.69c2.6%200%203.56.16%204.22%201.04.36.44.74%201.24.42%202.8-.34%201.58-1.12%202.26-1.9%202.68-1.04.58-1.94.68-2.36.74l-.02.08c2.8.08%202.68%201.32%202.54%203.54-.08.98-.2%202.54-.08%203.56h-4.35c-.06-.88.08-1.98.22-3.26.18-1.74.26-2.38-1.54-2.38h-1.68l-1.2%205.65h-4.02l3.06-14.46Zm2.72%206.21h1.5c.88%200%201.32%200%201.68-.12.94-.28%201.3-1.18%201.4-1.64.38-1.78-1.18-1.78-2.34-1.78h-1.5zM182.16%2022.11h-4.41l.6-2.86h12.95l-.6%202.86h-4.5l-2.46%2011.59h-4.05l2.46-11.59ZM192.71%2019.25h4.12l-3.06%2014.46h-4.12zM199.52%2019.25h5.53l2.6%2010.77%202.24-10.77h3.5l-3.06%2014.46h-5.41l-2.6-11.23-2.34%2011.23h-3.52z'/%3e%3c/g%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M235.58%2015.36%20239.91.72c.05-.19-.18-.32-.32-.18l-13.75%2014.82h-60.08c-.24%200-.25.37-.01.37l58.74%201.29%203.7.08%203.55.08.22-1.82h-4.41l7.42-6.76-1.29%206.76-1.89%209.89-2.49%2013.04c-.04.23.3.31.36.08l3.38-13.75%2018.74-8.92c.18-.09.12-.35-.08-.35h-16.13Zm-.51%201.89%206.97.15-8.38%204.97%201.4-5.13Z'/%3e%3cpath%20d='m224.92%2017.94-1.18-.04-6.92%207.07c-.16.17.08.43.26.27l7.85-7.3ZM230.74%2025.73l.21-1.85-16.16%209.48c-.2.12-.04.43.18.33l15.77-7.95Z'/%3e%3c/g%3e%3c/svg%3e)\n\n$106,334,000,000\n\n121,000\n\n1912\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='291'%20height='14'%3e%3cpath%20fill='%23f4f4e4'%20fill-rule='evenodd'%20d='M.22%206.87c0%203.21.65%207.04%205.6%207.04h12.11V5.32H8.45v3.55h5.82v1.66H6.62c-2.87%200-2.45-2.79-2.45-3.61%200-2.04.38-3.15%202.28-3.15h11.48V.08H6.5C1.99.08.22%202.75.22%206.87M21.36%2013.92h15.42v-3.38H25.22V8.88h11.56V5.53H25.22V4.06h11.56V.08H21.36zM53.23%2010.28%2045.47.08h-5.25v13.84h3.59V3.72l7.77%2010.2h5.25V.08h-3.6zM60.73%2013.92h15.41v-3.38H64.58V8.88h11.56V5.53H64.58V4.06h11.56V.08H60.73zM96.83%205.01c0-1.92-.04-4.93-4.62-4.93H79.59v13.83h3.71V9.87h5.77l3.23%204.04h4.8l-3.45-4.44c2.53-.38%203.2-2.17%203.2-4.47Zm-5.68%201.48H83.3V3.88h7.91c1.06%200%201.8.31%201.8%201.17s-.17%201.43-1.86%201.43ZM123.31.08h-3.85v13.84h13.87v-3.38h-10.02zM105.23.08l-7.77%2013.83h4.23l1.52-2.72h9.04l1.51%202.72h4.23L110.23.08zm-.11%207.7%202.61-4.65%202.61%204.65zM156.4.08h-11.42v13.83h12.11c4.64%200%205.59-2.92%205.59-7.04S160.91.08%20156.4.08m-.11%2010.46h-7.65V3.78h7.82c2.13%200%202.28%201.34%202.28%203.15%200%201.66.04%203.61-2.45%203.61M195.93%2010.28%20188.16.08h-5.25v13.84h3.6V3.72l7.76%2010.2h5.25V.08h-3.59zM208.96.08l-7.77%2013.83h4.23l1.52-2.72h9.04l1.51%202.72h4.23L213.96.08h-4.99Zm-.11%207.7%202.61-4.65%202.61%204.65zM172.07%206.04%20167.14.08h-5.03l7.94%209.05v4.79h3.94V9.13l7.94-9.05h-5.03zM233.65%209.72%20229.09.08h-5.94v13.84h3.6V3.36L232%2013.92h3.31l5.26-10.56v10.56h3.59V.08h-5.94zM248.32.08v13.84h3.89L252.18.08zM254.91%206.87c0%204.12.95%207.04%205.6%207.04h10.9v-3.36s-8.45-.02-10.11-.02c-2.49%200-2.45-1.95-2.45-3.61%200-1.81.15-3.15%202.28-3.15h10.28V.08h-10.22c-4.51%200-6.28%202.66-6.28%206.79M286.7%205.5h-8.34c-.6%200-1.27-.17-1.27-.83s.67-.83%201.27-.83c1.66%200%2011.96-.01%2011.96-.01V.46h-12.88c-3.28%200-4.08%201.69-4.08%204.21s.8%204.21%204.08%204.21h8.34c.6%200%201.27.17%201.27.83s-.67.83-1.27.83c-1.65%200-11.96.02-11.96.02v3.36h12.88c3.28%200%204.08-1.69%204.08-4.21s-.8-4.21-4.08-4.21'/%3e%3c/svg%3e)\n\n$86,534,000,000\n\n117,000\n\n1952\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='123'%20height='28'%3e%3cpath%20fill='%23f4f4e4'%20d='M.04.82h3.04l5.45%206.91V.82h3.04v11.66H8.44L3.08%205.52v6.96H.04zM21.85%209.08c.62-.64.94-1.48.94-2.5q0-1.41-.96-2.37c-.64-.64-1.45-.96-2.41-.96s-1.77.33-2.41.97c-.62.64-.94%201.46-.94%202.45s.31%201.8.93%202.44c.61.62%201.41.94%202.4.94s1.8-.32%202.44-.97m-7.02%202.04c-1.22-1.19-1.81-2.68-1.81-4.49s.63-3.33%201.89-4.52C16.13.97%2017.64.39%2019.45.39s3.35.59%204.58%201.78c1.23%201.17%201.84%202.63%201.84%204.35%200%201.86-.62%203.39-1.87%204.61-1.23%201.17-2.76%201.77-4.57%201.77s-3.41-.59-4.61-1.78M31.48%206.07c1.05%200%201.57-.49%201.57-1.46s-.5-1.46-1.54-1.46h-.95v2.92zM27.52.82h4.64c1.16%200%202.09.32%202.83.94.76.67%201.16%201.57%201.16%202.71%200%201.61-.67%202.68-2.01%203.18l3.12%204.82h-3.64l-2.45-4.11h-.61v4.11h-3.04zM40.12%203.86h-2.47V.82h7.98v3.04h-2.47v8.62h-3.04zM47.54.82h3.04v4.12h4.27V.82h3.04v11.66h-3.04v-4.5h-4.27v4.5h-3.04zM64.12%206.07c1.05%200%201.57-.49%201.57-1.46s-.5-1.46-1.54-1.46h-.95v2.92zM60.16.82h4.64c1.16%200%202.09.32%202.83.94.76.67%201.16%201.57%201.16%202.71%200%201.61-.67%202.68-2.01%203.18l3.12%204.82h-3.64l-2.45-4.11h-.61v4.11h-3.04zM79.19%209.08c.62-.64.94-1.48.94-2.5q0-1.41-.96-2.37c-.64-.64-1.45-.96-2.41-.96s-1.77.33-2.41.97c-.62.64-.94%201.46-.94%202.45s.3%201.8.93%202.44c.61.62%201.42.94%202.41.94s1.8-.32%202.44-.97m-7.03%202.04c-1.22-1.19-1.81-2.68-1.81-4.49s.63-3.33%201.89-4.52C73.47.97%2074.98.39%2076.79.39s3.35.59%204.58%201.78c1.23%201.17%201.84%202.63%201.84%204.35%200%201.86-.62%203.39-1.87%204.61-1.23%201.17-2.76%201.77-4.57%201.77s-3.41-.59-4.61-1.78M89.16%206.18c1.2%200%201.8-.52%201.8-1.57s-.58-1.49-1.77-1.49h-1.04v3.06zM85.11.82h5.21c1.13%200%202.04.36%202.69%201.13.66.7.97%201.64.97%202.79s-.32%201.98-.97%202.65c-.64.68-1.52%201.04-2.6%201.04h-2.26v4.06h-3.04zM14.71%2025.83c-1.13-1.19-1.7-2.68-1.7-4.46s.58-3.23%201.7-4.43c1.17-1.23%202.62-1.84%204.35-1.84%202.34%200%204.09.97%205.27%202.92l-2.43%201.34c-.06-.15-.18-.32-.37-.52-.65-.73-1.49-1.1-2.5-1.1s-1.75.4-2.25%201.17c-.43.65-.64%201.51-.64%202.57s.26%201.92.76%202.54c.55.68%201.36%201.02%202.41%201.02.61%200%201.17-.2%201.68-.58.55-.41.85-.9.91-1.49h-2.68v-2.44h5.84v.64c0%201.98-.49%203.53-1.48%204.66-1.04%201.17-2.53%201.77-4.49%201.77-1.78%200-3.24-.59-4.38-1.78M30.83%2020.77c1.05%200%201.57-.49%201.57-1.46s-.5-1.46-1.54-1.46h-.95v2.92zm-3.96-5.25h4.64c1.16%200%202.09.32%202.83.94.76.67%201.16%201.57%201.16%202.71%200%201.61-.67%202.68-2.01%203.18l3.12%204.82h-3.64l-2.45-4.11h-.61v4.11h-3.04V15.51ZM39.2%2026.59c-1.04-.78-1.57-1.84-1.57-3.18v-7.89h3.04v7.25q0%202.1%202.1%202.1c.62%200%201.16-.17%201.53-.5.38-.35.58-.84.58-1.45v-7.4h3.04v7.55c0%201.48-.5%202.62-1.52%203.44-.93.73-2.16%201.1-3.68%201.1-1.4%200-2.57-.33-3.51-1.02M56.97%2021.55l3.85-6.03h3.04v11.66h-3.04v-6.84l-3.03%204.76h-1.61l-3.05-4.76v6.84h-3.05V15.52h3.05zM73.26%2021.55l3.85-6.03h3.04v11.66h-3.04v-6.84l-3.03%204.76h-1.61l-3.05-4.76h-.01v6.84h-3.04V15.52h3.05l3.85%206.03ZM88.96%2022.68l-1.23-3.56-1.25%203.56zm-2.94-7.16h3.48l4.32%2011.66h-3.29l-.79-2.16h-4.03l-.78%202.16h-3.24zM95.5%2015.52h3.05l5.36%206.91v-6.91h3.04v11.66h-3.05l-5.36-6.96v6.96H95.5zM95.5.82v3.04h24.42v23.32h3.04V.82z'/%3e%3c/svg%3e)\n\n$84,910,000,000\n\n100,000\n\n1939\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20142%2033'%3e%3cpath%20fill='%23f4f4e4'%20d='M21.021%2032.622h-9.673c-.09%200-.179%200-.269-.09L3.287%2026.71c-.09-.09-.179-.179-.179-.269L.062%2017.037v-.269l3.045-10.21c0-.09.09-.179.179-.269L11.258.467c.09-.09.179-.09.269-.09h9.315c.09%200%20.179%200%20.269.09l7.972%205.822c.09.09.179.179.179.269l3.045%2010.121v.269l-2.956%209.494c0%20.09-.09.179-.179.269l-7.792%205.822c-.179.09-.269.09-.358.09m-9.227-.986h7.972c-3.135-3.045-6.27-5.732-9.494-8.151.269%202.597.806%205.374%201.523%208.151m-1.165-9.136c3.493%202.508%206.718%205.374%2010.121%208.599a89%2089%200%200%200%201.433-12.36c-4.299.896-8.33%202.239-11.554%203.762m12.45-3.315c-.179%203.762-.627%207.703-1.344%2011.733l6.449-4.747q-2.15-4.3-5.105-6.986m-18.72%207.076%206.18%204.568a60.5%2060.5%200%200%201-1.344-7.703%2030%2030%200%200%200-4.837%203.135m-2.955-8.33%202.418%207.524a30%2030%200%200%201%204.837-3.135c-2.418-1.612-4.747-3.135-7.255-4.389m22.303.448c1.881%201.791%203.583%203.941%204.926%206.628l2.418-7.524c-2.329.09-4.837.448-7.345.896M9.914%2011.842a51%2051%200%200%200%20.09%209.763c3.314-1.523%207.255-2.866%2011.465-3.762-2.508-1.881-5.105-3.045-7.792-4.299-1.254-.537-2.508-1.075-3.762-1.702m-8.51%204.927a65%2065%200%200%201%207.524%204.568c-.269-3.224-.269-6.449-.09-9.494-2.866%201.344-5.374%203.045-7.434%204.926m21.318-8.241c.358%202.866.448%205.912.448%208.867a60%2060%200%200%201%207.613-1.075c-2.418-2.866-5.016-5.374-8.061-7.792M10.72%2011.036c1.075.537%202.15.985%203.404%201.523%202.687%201.164%205.374%202.418%208.061%204.389%200-3.045-.09-6.091-.537-9.046-4.031.806-7.703%201.791-10.927%203.135M3.824%207.633l-2.239%207.613c1.881-1.612%204.21-3.045%206.807-4.299a22.2%2022.2%200%200%201-4.568-3.314m19.525.089a48.2%2048.2%200%200%201%207.255%206.897l-2.15-7.434zm-11.554-6.09c-.806%202.777-1.433%205.643-1.791%208.599a47%2047%200%200%201%2010.748-3.045c-2.418-1.881-5.285-3.583-8.957-5.553M4.361%206.737c1.344%201.344%202.866%202.418%204.658%203.493.269-2.687.806-5.374%201.523-7.972l-6.18%204.478Zm17.287-4.658c.358%201.523.627%203.135.896%204.747a44%2044%200%200%201%204.837-.537l-5.732-4.21Zm-8.151-.716c3.045%201.702%205.643%203.314%207.882%204.926-.269-1.612-.537-3.314-.985-4.926zM83.719%208.528l-5.732%2015.854h3.224l.985-2.777h5.643l.896%202.777h3.224L86.137%208.528zm-.717%2010.48%201.971-5.732%201.971%205.732h-3.941Zm22.93-5.553c0-2.687-1.881-4.837-5.105-4.837h-6.18v15.854h3.135v-6.359h2.239l3.135%206.359h3.583l-3.583-6.807c1.433-.627%202.777-1.971%202.777-4.21Zm-5.374%202.06h-2.956v-4.21h2.956c1.344%200%202.239.896%202.239%202.06%200%201.254-.896%202.15-2.239%202.15m20.242-2.06c0-2.687-1.881-4.837-5.105-4.837h-6.18v15.854h3.135v-6.359h2.239l3.135%206.359h3.583l-3.583-6.807c1.433-.627%202.777-1.971%202.777-4.21Zm-5.284%202.06h-2.956v-4.21h2.956c1.344%200%202.239.896%202.239%202.06%200%201.254-.896%202.15-2.239%202.15m8.867-6.987h3.135v15.854h-3.135zm16.301%207.882c.806.806%201.254%201.971%201.254%203.404%200%203.045-2.597%204.837-5.912%204.837-2.418%200-4.21-.537-5.822-2.06l1.971-1.971c.985.985%202.329%201.344%203.851%201.344%201.791%200%202.777-.717%202.777-1.971%200-.537-.179-.985-.448-1.344-.269-.269-.627-.448-1.433-.537l-1.881-.269c-1.344-.179-2.329-.627-3.045-1.344-.717-.717-1.164-1.791-1.164-3.135%200-2.866%202.06-4.837%205.553-4.837%202.15%200%203.762.537%205.105%201.881l-1.971%201.971c-.985-.985-2.239-1.075-3.224-1.075-1.612%200-2.418.896-2.418%201.971%200%20.358.09.806.448%201.164.269.269.806.537%201.433.627l1.881.269c1.433%200%202.418.448%203.045%201.075m-80.253%203.404c0%203.135-2.329%204.747-5.016%204.747-2.239%200-4.389-1.075-4.926-3.493l2.777-1.164c0%201.433.985%202.06%202.15%202.06%201.254%200%202.15-.806%202.15-2.239%200-1.344-.806-2.15-2.239-2.15h-.09v-2.508h.09c1.433%200%201.971-.896%201.971-1.971%200-1.344-.896-2.06-1.971-2.06s-1.881.717-1.971%201.881l-2.777-1.164c.537-2.15%202.418-3.404%204.658-3.404%202.777%200%204.837%201.881%204.837%204.568%200%201.702-.806%202.687-1.791%203.224%201.254.717%202.15%201.791%202.15%203.672ZM72.164%208.528h3.135v15.854h-3.135v-6.628H66.79v6.628h-3.135V8.528h3.135v6.449h5.374zM43.502%2021.695h5.016v2.777h-8.061V8.529h3.135c-.09%200-.09%2013.167-.09%2013.167Z'/%3e%3c/svg%3e)\n\n$51,949,000,000\n\n50,000\n\n1926\n\n* * *\n\n![](https://18theses.com/assets/logo-8-DIc9zQH5.svg)\n\n$10,663,000,000\n\n44,000\n\n1886\n\nNote: Data as of August 2025 from public sources\n\nBut Palantir’s addition will not be the last. Because today the Founders are back — in the hundreds — and they are backed by hundreds of billions of dollars of private capital to build in the national interest. However, their effort and capital alone is not enough to resurrect the American Industrial Base. We need a defense Reformation to upend the Monopsony and transform the way the government does business. Here is my treatise on how to get that done.\n\n* * *\n\nSection 2\n\n## The Department’s Heresy\n\n* * *\n\nEveryone, including the Russians and the Chinese, have given up on communism except for Cuba and the DOD. The only problem is that we are bad commies.\n\nWe run a centrally unplanned process that neither has the supposed advantages of a planned economy nor the (far superior) advantages of a free market. Bill Greenwalt [explains](https://breakingdefense.com/2021/03/competing-in-time-how-dod-is-losing-the-innovation-race-to-china/) the sins of our poor attempts at copying the Communists:\n\n* * *\n\n### This \\[ideology and management\\] approach, now deeply engrained in defense management culture, process, law, and regulation, is based on the concepts of scientific management that were once fashionable in the Soviet Union and at the vanguard of the 1950s U.S. auto industry before it was outcompeted by Japan in the 1970s. Centralized, predictive program budgeting, management, and oversight were then thought to be superior to the trial and error and messiness of time-constrained, decentralized experimentation and the seemingly wastefulness of having multiple sources rapidly prototyping potential solutions.\n\nBill Greenwalt\n\n* * *\n\nThere is no process that can save us. Reform will be painful. We must be very careful not to conflate pain with error. As world champion cyclist Greg LeMond said, “It doesn’t get easier, you just go faster.” Just as there is no pain-free world class cycling performance, innovation will always be painful, messy, and subject to retrospective bureaucratic critiques from those not in the arena.\n\nOur centralized, predictive program budgeting, management, and oversight process values time spent, not time saved. It values costs and effort, not value and outcomes.\n\nThe Great Schism has created a religion in government that is unaware or dismissive of power-law outcomes from power-law talent. In Silicon Valley we call them 10x or 100x engineers, meaning they are 10x to 100x as valuable and productive as normal engineers. We once understood this in defense, too: Rickover, Kelly Johnson, Ed Hall and [countless legendary talents fought the bureaucracy](https://www.firstbreakfast.com/s/heretics-and-heros) and got stuff done. We seem to generally appreciate that Usain Bolt is more than a generational talent — even the gold medalist at Paris 2024 was not faster than him. But this is also true for Tom Mueller, Elon Musk, Palmer Luckey, Brian Schimpf, Ryan Tseng, and the Founders at the First Breakfast. Reforming the system means renouncing the communist conformity that’s slowing us down and unleashing the charismatic leaders who can drive outcomes — in the boardroom and on the battlefield.\n\n* * *\n\nSection 3\n\n## The Theses of the Defense Reformation\n\n* * *\n\n* * *\n\n1\n\n### Monopsony is the root of what ails us.\n\nThe root of our pathology is a lack of competition inside of Defense. Avoid a monopsonistic buyer at all costs by approximating market mechanisms and dynamics as a key principle of the design of the DOD (e.g., the newly created Space Force is a worthy competimate to the NRO). What looks like duplication is insurance against complacency and unpredictability — there is nothing more costly than losing. When only Monopsony persists, things will not work, they will be expensive, and they will make us weaker. The last great Monopsony was Walmart. In the 90s their TV advertisements promoted everyday, low prices. The strategy was to squeeze suppliers on prices rather than encourage innovation. They never saw Amazon coming, and are now ⅓ of the size. Will we let that happen to America?\n\n* * *\n\n2\n\n### Cost-plus contracting makes the nation dumber, slower, and poorer.\n\nMaybe it is the right way to buy an aircraft carrier, but it is the wrong way for 95% of things. It robs any reward for going faster or developing innovative approaches, institutionalizing a lack of incentive to compete on price by valuing time spent over time saved. SpaceX reduced launch costs by 85% — that simply isn’t possible in a cost-type domain. In fact, NASA estimated the cost of developing the SpaceX rocket at $4 billion when SpaceX did it for $400 million. Cost-plus is the reason that defense costs grow faster than inflation and don’t result in compounding price performance decreases. In the commercial world, people are viewed as expensive, and technology is considered cheap. In government, there is a perversion where people are viewed as abundant, and technology is viewed as unaffordable. Meanwhile, Starship will reduce launch costs 100x over Falcon 9 and 1,000x over the progeny of cost-plus approaches in a timeline that is well inside the development loop of the $2 trillion, 30% available F-35.\n\n* * *\n\n### Cost-plus launch kept costs in the stratosphere. Commercial drove costs into the ground.\n\n* * *\n\nFalcon 9 was 10% of the cost of legacy\n\nStarship Heavy will be 1% of the cost of Falcon 9 at $10-20 per kg (no, that’s not missing any zeros)\n\nIn short, commercial innovation made launch costs 1,000x cheaper\n\n* * *\n\nFig 04\n\n### Launch cost per kilogram\n\nSource: CSIS Aerospace Security Project, PayloadResearch estimates (2024)\n\n* * *\n\n3\n\n### A budget is a plan, and no plan survives first contact.\n\nMilitary doctrine states plans are useless, even if planning is invaluable. “I support the President’s budget” is an evasion. No company could survive if it took two years to POM budget for projects internally (DOD's Program Objective Memorandum, or POM, process). They would be outcompeted. And that is what our adversaries are doing to us now. We must invest in closing the Cash Chain to close the Kill Chain. The fiscal OODA loop to move money around is not survivable. We must be able to reprogram money inside of 2 months, not 2 years. Messy and imperfect discretion is required. We require DevSecOps for budgets.\n\n* * *\n\n4\n\n### The person is the program: the primacy of people.\n\nThe Defense Officer Personnel Management Act (the rules that apply to how military officer careers and promotions are governed) must be reformed. There is a reason that Rickover was the Director of Naval Reactors for over thirty years and that all great programs had a leader who saw them to completion (Schriever and Intercontinental Ballistic Missiles, Groves and the atomic bomb, Boyd and and the F-16, Bierbauer and the Predator). Talent is not fungible. Talent-Problem fit is rare and hard and determinative. Rotations for officers every 2-3 years only ensures they haven’t had enough time to learn anything beyond surface-level platitudes. Knowledge and know-how compound. We need to care more about winning than about providing experiences to fill out a bingo card. Additionally, Congressional oversight can’t end with Program Element numbers. Which heretical individuals are Congress protecting and holding in place against the will of their service?\n\n* * *\n\n5\n\n### The only requirement is winning.\n\nThe most important projects don’t come from requirements. America’s cultural strengths are fundamentally creative and improvisational. The requirements process ensures we play to our weaknesses. In a fight, no one cares about the requirements document. The only requirement is winning. And winning requires engaging in the messy, overlapping, seemingly wasteful but actually efficient process of being better. Validating requirements leads to solving yesterday’s problem without today’s context. We have countless validated problems.\n\n* * *\n\n6\n\n### Put the pebble in the right shoe.\n\nYou can’t separate the roles of creating requirements and delivering capabilities. All value accretes in the seams between teams — this is an unnecessary seam between requirement and solution. No company could compete commercially today under such a structure. Instead we need more competition inside of government across programs with overlapping mandates. Rickover built and operated the subs. He constructed many of the safety standards he would then enforce, and he was “often forced to send letters to himself to [request](https://ahf.nuclearmuseum.org/ahf/profile/hyman-g-rickover/#:~:text=In%201949%2C,request%20certain%20things) things.” Innovation is a consequence of productivity. If you don’t produce, you can’t innovate. The LLM revolution was inspired by Google’s attempt to improve Google Translate 3% — not by blue sky thinking disconnected from reality.\n\n* * *\n\n7\n\n### Conway’s Law: you ship your org chart.\n\nConway’s Law reveals the connection between an organization’s internal structure and the results it delivers to end users. The core idea is that the way members of an organization communicate and collaborate will shape the design and character of the systems and projects it produces. The problem with Goldwater Nichols is that it didn’t go far enough. You can’t have a joint Department if Services have monopolies on their Title 10 equipping responsibilities. We need more competition amongst the services or you can say “joint” until you are purple in the face — it won’t make you joint. Conway’s Law leads to the profane conclusion that CJADC2 (Combined Joint All Domain Command and Control, the Department’s vision for machine-to-machine connection across services and allies to close kill chains) isn’t possible inside the Military Departments as currently conceived, with each developing its own set of capabilities for its service, and must be delivered either by the Office of the Secretary of Defense (OSD), the combatant commands (CCMDs), or by all the services competing for COCOM and component adoption of their solution (approximating a market mechanism). This is how we built ICBMs — with Army, Air Force, and Navy all competing. No Joint Program Offices. No Monopoly. Creative, fast, and ultimately cheaper results.\n\n* * *\n\n8\n\n### CCMDs need budget to introduce strategic competition.\n\nEnabling CCMDs as the buyers approximates market forces. Programs will have to respond to the needs and feedback not of a captive service alone but also the folks that must employ these capabilities in anger. Even a budgetary reallocation of 5% would enable this market mechanism. With a modicum of economic power, CCMDs can harness the defiant and creative American spirit by creating situations for Service PEOs to respond to. This is how free markets work.\n\n* * *\n\n9\n\n### National security is economic prosperity.\n\nDJI should not exist. The drone was an American birthright. But bad policy from the FAA, which prohibited beyond line of sight operations, and DOD’s rigid ITAR restrictions deprived America of untold economic prosperity. We got it right with the Jeep, GPS, and semiconductors — technologies where the government was the initial customer but not the most important in the final calculus. We must counter the Monopsonist’s desire for control. RAND thought Lockheed would dominate integrated circuits because it had fifty PhDs and Intel only had two. But Bob Noyce understood that military and intelligence customers were just a pit stop on the way to Moore’s Law. For another example, there has never been a dominant naval power that was not also a dominant commercial shipping power. China understands this. Do we?\n\n* * *\n\n10\n\n### Make the primes business-worthy.\n\nAmerica should demand that its primes have commercial businesses to subsidize taxpayer R&D and to prove they are competitive. Most of the primes today do not have commercial businesses. When they do, we are reminded that they are not competitive (see: Boeing and Starliner). In the 1980s, Raytheon tried to diversify by entering the commercial construction industry. Harvey Sapolsky notes, “this proved to be an expensive mistake because defense is like no other business in its forgiveness of cost overruns and time slippages: Raytheon could not manage construction and environmental cleanup projects, even for government customers, the way it was used to managing defense projects.” If GDIT is so good, why don’t they serve the commercial IT market? Because they can’t compete, having developed a business as far from the commercial market as the Galapagos Islands are from the mainland. Chinese primes only earn 30-40% of their revenue from the PLA; the remainder is commercial. Those cheap products your neighbor is buying on Amazon are subsidizing lethality which could be used against our men and women in uniform, much the same way that during the Cold War your purchase of an American car, camera, and cereal subsidized America’s lethality against her enemies.\n\n* * *\n\nFig 05\n\n### Defense revenue as a percentage of total revenue for 2023\n\n* * *\n\nUS\n\nDefense Revenue\n\nTotal Revenue\n\n73.4% Average\n\n* * *\n\nChina\n\nDefense Revenue\n\nTotal Revenue\n\n27.2% Average\n\nSource: DefenseNews Top 100 Defense Companies (2024)\n\n* * *\n\n11\n\n### Risk capital, not taxpayer capital.\n\nCost-reimbursed independent research and development (IRAD) is an indulgence. It isn’t real R&D. Cost-type contracting enables contractors to play with house money (reimbursed by taxpayers). Private R&D in the commercial world far outstrips government R&D. The 1960s are gone. Companies must invest their own capital — their asses must be in the hot seat if we want innovation. Apple didn’t charge you for their failed self-driving car in your last iPhone purchase. Contractors shouldn’t be able to charge you when their lab experiments run amok, either.\n\n* * *\n\n12\n\n### Small business programs should not be welfare.\n\nThe goal of our founder-driven, creatively destructive market system is for small business to get big, not to remain indentured servants. The Department should judge its small business efforts through the lens of market cap creation: wealth for Americans. The point of national security is to underwrite freedom and economic prosperity. Small Business Innovation Research (SBIR) programs should measure how many of their small business got big, not how many programs received follow-on funding. We want to have a vibrant, dynamic group of companies with many new entrants. In the last 50 years, Europe has created zero companies worth more than $100 billion. America created all of her $1 trillion companies in that time period. Our Defense Industrial Base and the bureaucracy that demanded it is European.\n\n* * *\n\n13\n\n### DOD and its proxy forces must stop competing with industry.\n\nFederally funded research and development centers (FFRDCs) have the false moral certitude of being “non-profits,” which is about as believable as America’s hospitals being non-profits. FASA’s Commercial Item Preference is the most violated law in the land. Government often seeks to recreate products industry has already developed. This is not a pathology unique to government — it’s in the commercial world, too. But in the commercial world the market is a harsh and quick judge of custom development. No such feedback mechanism exists in government (yet another strong argument for increasing competition inside of government). No Program Manager will recreate the wheel if a competing Program Manager is going to move faster than them by adopting something that works today. Also, it’s the law.\n\n* * *\n\n14\n\n### Productivity is more lethal than weapon stockpiles.\n\nWe obsess about stockpiles, but stockpiles are irrelevant. Our munition deliveries to Ukraine were Cold War-era kit sitting on shelves collecting dust while decades of innovation occurred. The consumption of 10 years of production in 10 weeks of fighting in Ukraine demonstrated that the rate of production was the actual weapon all along. We must be able to produce everything at speed and scale, we must design requirements and incentives for manufacturability, and we must never stop producing. No more participation trophies for having a weapon sitting on a shelf — it only counts if you can make it. Pontiac didn’t have a stockpile of antiaircraft guns they sold to the government during World War II, but they became the leading manufacturer of the 20mm Oerlikon and dramatically decreased production time per gun.\n\n* * *\n\n15\n\n### Reference architectures can’t be created, they emerge.\n\nGovernment attempts to avoid pain and vendor lock-in upfront will fail in the most drawn-out ways possible. For any interesting class of problem (i.e. non-trivial innovation) it isn’t possible to deductively design a reference architecture. Instead you must build and let the architecture emerge. You maximize the chance of getting it right by having multiple competing companies and programs with interoperability requirements at inception. Government Reference Architectures are the 21st century equivalent of Robert McNamara’s notorious Total Package Procurement (TPP), which produced failures like the F-111 and C-5A. TPP fell into the trap of trying to eliminate uncertainty and predict the chaos of the universe by inflexibly defining every program requirement and dollar spent, from R&D through production, before any work had actually been done. Chaos won.\n\n* * *\n\n16\n\n### Rule of law works.\n\nContractual agreements enable the government to get the protections it wants. Fearmongering that companies will turn off their capabilities when war starts is a tired excuse to exclude commercial companies, protect the legacy Defense Industrial Base, and justify violating FASA. The only companies that have ever tried to own the government’s data are in fact the legacy platform providers whose R&D was financed by the government in the first place. Why does this concern not exist in the commercial market but does in government? Because it isn’t real — there are simple contractual mechanisms to ensure the government has continuity of operations and desired flexibility. Let’s remove the excuse for why Mass must be in Latin with only the Monopsony’s priests delivering the sermon.\n\n* * *\n\n17\n\n### Let the people speak to the mission.\n\nMartin Luther taught that the people could ascertain God’s truth directly from the Bible — they didn’t need priests to interpret His meaning. Today, we are told companies building for Defense cannot possibly understand the warfighter and that even the warfighter can’t understand what he really needs, that his needs must be intermediated through the Acquisition’s priestly class. The result is countless Kafkaesque causality dilemmas. You can’t get clearances unless you have a classified contract, but you can’t get clearance unless you are part of the existing class of cleared people. The same is true for SCIF sponsorship and access to classified networks. The priestly class alone decides the timeline and schedule to let a company access the top secret network from its offices (Palantir has been waiting twenty years). There are too many monopolies, and we have long since passed the point where they resembled legitimate security concerns. It is time the church holds itself to SLAs and creates a transparent process to enable the industrial base. The Cardinals from the legacy primes have enriched themselves because they are the only ones with access behind the SAP door. Private industry will pay its own way here for this enabler. It does not require the government to front these funds. Enable American capital to show up and purchase network, SCIF, classified cloud compute, and clearances — all governed by investor confidence that the company and team can credibly turn that investment into value.\n\n* * *\n\n18\n\n### Warriors fight with guns and git.\n\nWarfighters need to know how to code, not because they will build industrial strength platforms that industry is delivering (they won’t, not without $10 billion and the nation’s top computer scientists), but because software is the most important and malleable weapon system. Software is a unique American strength and our warriors must develop fluency to understand how to wield the software industrial base to maximize lethality. Knowing if your feature request will take 1 hour, 1 day, 1 week, or 1 year to implement is critical. Knowing how to bend the software to your will is how you bend the enemy to your will. Software and its malleability will define the clock speed of the OODA loop.\n\n* * *\n\nConclusion\n\n## The Resurrection of the American Industrial Base\n\n* * *\n\n* * *\n\n### I hold it that a little rebellion now and then is a good thing, and as necessary in the political world as storms in the physical.\n\nThomas Jeffersonin a letter to James Madison\n\n* * *\n\nI nail these theses to the Pentagon Metro entrance not because I hate the Department and my nation, but because I love them profoundly.\n\nWe are in a state of undeclared emergency. For more than three decades, we’ve accepted a stagnant Defense Industrial Base born from a complacent Monopsony with no great power competition. We have prayed at the altar of process for too long. Change is now possible because we all realize there is something worse than change: irrelevance and obsolescence. We have no time to waste in resurrecting the American Industrial Base we depended on in the depths of the Cold War.\n\nIt was the American Industrial Base that underwrote American victory and Pax Americana. It can once again if we embrace it as our savior.\n\nShyam Sankar / Palantir CTO","size_bytes":47820},"client/src/components/navigation-header.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Download } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport ShareButtons from \"./share-buttons\";\nimport { cn } from \"@/lib/utils\";\nimport logoSvg from \"@assets/UXUI-logo.svg\";\n\nexport default function NavigationHeader() {\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const heroHeight = window.innerHeight;\n      const currentScrollY = window.scrollY;\n      \n      // Hide navigation header when scrolling past hero section\n      setIsVisible(currentScrollY <= heroHeight);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll(); // Initial check\n    \n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const handlePdfDownload = () => {\n    window.print();\n  };\n\n  return (\n    <header \n      className={cn(\n        \"fixed top-0 left-0 right-0 z-50 bg-background/95 backdrop-blur-sm border-b border-accent transition-all duration-300\",\n        isVisible ? \"translate-y-0 opacity-100\" : \"-translate-y-full opacity-0\"\n      )}\n      data-testid=\"navigation-header\"\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center\">\n            <img \n              src={logoSvg} \n              alt=\"UX/UI Timeline\" \n              className=\"h-7 w-auto brightness-0 dark:brightness-0 dark:invert\"\n              data-testid=\"logo-header\"\n            />\n          </div>\n          \n          <div className=\"flex items-center space-x-3\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"hover-lift border-accent hover:bg-accent/50\"\n              onClick={handlePdfDownload}\n              data-testid=\"button-pdf-download\"\n            >\n              <span className=\"flex items-center space-x-2\">\n                <span>PDF</span>\n                <Download className=\"w-4 h-4\" />\n              </span>\n            </Button>\n            <ShareButtons />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":2184},"client/src/components/expandable-pioneer-card.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Card } from \"./ui/card\";\n\ninterface Pioneer {\n  name: string;\n  years: string;\n  title: string;\n  contribution: string;\n  quote: string;\n  legacy: string;\n}\n\ninterface ExpandablePioneerCardProps {\n  pioneer: Pioneer;\n  imageUrl: string;\n  index: number;\n}\n\nexport default function ExpandablePioneerCard({ pioneer, imageUrl, index }: ExpandablePioneerCardProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true }}\n      transition={{ duration: 0.5, delay: index * 0.1 }}\n    >\n      <Card \n        className=\"glass-card overflow-hidden\"\n        data-testid={`pioneer-${pioneer.name.replace(' ', '-').toLowerCase()}`}\n      >\n        <div className=\"p-6 md:p-8\">\n          <div className=\"grid md:grid-cols-4 gap-6\">\n            {/* Left: Image and Basic Info */}\n            <div className=\"md:col-span-1\">\n              <motion.div \n                className=\"aspect-square rounded-lg overflow-hidden mb-4 border border-accent/20\"\n                whileHover={{ scale: 1.05 }}\n                transition={{ duration: 0.3 }}\n              >\n                <img \n                  src={imageUrl} \n                  alt={`${pioneer.name} - ${pioneer.title}`}\n                  className=\"w-full h-full object-cover\"\n                />\n              </motion.div>\n              <h4 className=\"text-xl md:text-2xl font-semibold mb-1\">{pioneer.name}</h4>\n              <p className=\"text-sm text-muted-foreground mb-2\">{pioneer.years}</p>\n              <p className=\"text-accent font-medium text-sm\">{pioneer.title}</p>\n            </div>\n            \n            {/* Right: Content */}\n            <div className=\"md:col-span-3 space-y-4\">\n              <p className=\"text-foreground/80\">{pioneer.contribution}</p>\n              \n              <blockquote className=\"border-l-4 border-accent/50 pl-4 italic text-foreground/70\">\n                \"{pioneer.quote}\"\n              </blockquote>\n              \n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-2 h-2 rounded-full bg-accent/50\" />\n                <p className=\"text-sm font-medium text-accent/80\">{pioneer.legacy}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </motion.div>\n  );\n}\n","size_bytes":2361},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/animated-line-chart.tsx":{"content":"import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Card } from './ui/card';\nimport { motion } from 'framer-motion';\n\ninterface DataPoint {\n  year: string;\n  [key: string]: number | string;\n}\n\ninterface AnimatedLineChartProps {\n  data: DataPoint[];\n  title: string;\n  description?: string;\n  lines: Array<{\n    dataKey: string;\n    name: string;\n    color: string;\n  }>;\n}\n\nexport default function AnimatedLineChart({ data, title, description, lines }: AnimatedLineChartProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true }}\n      transition={{ duration: 0.6 }}\n    >\n      <Card className=\"p-4 sm:p-6 md:p-8 glass-card\">\n        <div className=\"mb-6\">\n          <h4 className=\"text-lg sm:text-xl md:text-2xl font-semibold mb-2\">{title}</h4>\n          {description && (\n            <p className=\"text-xs sm:text-sm md:text-base text-muted-foreground\">{description}</p>\n          )}\n        </div>\n        \n        <div className=\"h-64 sm:h-80 md:h-96 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(217, 100%, 53%)\" opacity={0.05} />\n            <XAxis \n              dataKey=\"year\" \n              stroke=\"transparent\"\n              tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n              className=\"text-xs sm:text-sm\"\n              axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n              tickLine={false}\n            />\n            <YAxis \n              stroke=\"transparent\"\n              tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n              className=\"text-xs sm:text-sm\"\n              axisLine={{ stroke: 'hsl(0, 0%, 88%)', opacity: 0.1 }}\n              tickLine={false}\n            />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'hsl(var(--card))',\n                border: '1px solid hsl(217, 100%, 53%, 0.4)',\n                borderRadius: '8px',\n                color: 'hsl(var(--foreground))'\n              }}\n              labelStyle={{ color: 'hsl(var(--foreground))' }}\n            />\n            <Legend \n              wrapperStyle={{ \n                fontFamily: 'JetBrains Mono',\n                fontSize: '11px'\n              }}\n              className=\"text-xs sm:text-sm\"\n            />\n            {lines.map((line) => (\n              <Line\n                key={line.dataKey}\n                type=\"monotone\"\n                dataKey={line.dataKey}\n                name={line.name}\n                stroke={line.color}\n                strokeWidth={2}\n                dot={{ fill: line.color, r: 4 }}\n                activeDot={{ r: 6 }}\n              />\n            ))}\n          </LineChart>\n        </ResponsiveContainer>\n        </div>\n      </Card>\n    </motion.div>\n  );\n}\n","size_bytes":2990},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    host: \"0.0.0.0\",\n    allowedHosts: [\".replit.dev\"],\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n  preview: {\n    host: \"0.0.0.0\",\n    port: 5000,\n    allowedHosts: [\".replit.dev\"],\n  },\n});\n","size_bytes":1164},"attached_assets/chart_script_1_1759698157802.py":{"content":"import pandas as pd\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# Load the data\ndf = pd.read_csv('ux_ui_experience_calculations.csv')\n\n# Create shortened role type labels for better readability\ndf['short_role'] = df['role_type'].str.replace('Field Creator (Don Norman)', 'Field Creator')\ndf['short_role'] = df['short_role'].str.replace('Professional Practice', 'Prof Practice')\ndf['short_role'] = df['short_role'].str.replace('Industry Standards', 'Industry Std')\ndf['short_role'] = df['short_role'].str.replace('Mainstream Adoption', 'Mainstream')\n\n# Define colors - emphasize first two categories that can legitimately claim 24+ years\ncolors = ['#1FB8CD', '#DB4545', '#2E8B57', '#5D878F', '#D2BA4C', '#B4413C', '#964325']\n\n# Create the bar chart\nfig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df['short_role'],\n    y=df['max_experience_2025'],\n    marker_color=colors[:len(df)],\n    text=df['max_experience_2025'],\n    textposition='outside',\n    name='Max Experience'\n))\n\n# Add horizontal line at 24 years\nfig.add_hline(y=24, line_dash=\"dash\", line_color=\"red\", \n              annotation_text=\"24 years\", annotation_position=\"bottom right\")\n\n# Update layout\nfig.update_layout(\n    title=\"Max UX/UI Experience by Career Start\",\n    xaxis_title=\"Role Type\",\n    yaxis_title=\"Max Exp (Years)\",\n    showlegend=False\n)\n\n# Update traces for better appearance\nfig.update_traces(cliponaxis=False)\n\n# Update y-axis to show proper range\nfig.update_yaxes(range=[0, max(df['max_experience_2025']) + 3])\n\n# Save the chart\nfig.write_image(\"chart.png\")\nfig.write_image(\"chart.svg\", format=\"svg\")\n\nprint(\"Chart created successfully!\")\nprint(\"Data summary:\")\nprint(df[['short_role', 'max_experience_2025']])","size_bytes":1712},"client/src/pages/home.tsx":{"content":"import NavigationHeader from \"@/components/navigation-header\";\nimport HeroSection from \"@/components/hero-section\";\nimport IntroductionSection from \"@/components/introduction-section\";\nimport OriginsSection from \"@/components/origins-section\";\nimport GuiRevolutionSection from \"@/components/gui-revolution-section\";\nimport ToolsMethodologySection from \"@/components/tools-methodology-section\";\nimport ProfessionalFormalizationSection from \"@/components/professional-formalization-section\";\nimport SalaryHeatmap from \"@/components/salary-heatmap\";\nimport JobMarketChart from \"@/components/job-market-chart\";\nimport ThesesSection from \"@/components/theses-section\";\nimport IndustryEconomicsSection from \"@/components/industry-economics-section\";\nimport Footer from \"@/components/footer\";\nimport StickyNavigation from \"@/components/sticky-navigation\";\nimport ScrollProgress from \"@/components/scroll-progress\";\nimport SectionDivider from \"@/components/section-divider\";\n\nexport default function Home() {\n  return (\n    <div className=\"font-sans antialiased\">\n      <ScrollProgress />\n      <NavigationHeader />\n      <HeroSection />\n      <StickyNavigation />\n      \n      {/* Section 01: Origins */}\n      <SectionDivider number=\"01\" label=\"Origins\" />\n      \n      <div id=\"origins\">\n        <IntroductionSection />\n        <OriginsSection />\n      </div>\n      \n      {/* Section 02: Revolution */}\n      <SectionDivider number=\"02\" label=\"Revolution\" />\n      \n      <div id=\"revolution\">\n        <GuiRevolutionSection />\n      </div>\n      \n      {/* Section 03: Formalization */}\n      <SectionDivider number=\"03\" label=\"Formalization\" />\n      \n      <div id=\"formalization\">\n        <ProfessionalFormalizationSection />\n      </div>\n      \n      {/* Section 04: Tools & Methods */}\n      <SectionDivider number=\"04\" label=\"Tools & Methods\" />\n      \n      <div id=\"tools\">\n        <ToolsMethodologySection />\n      </div>\n      \n      {/* Section 05: Industry & Economics */}\n      <SectionDivider number=\"05\" label=\"Industry & Economics\" />\n      \n      <div id=\"economics\">\n        <IndustryEconomicsSection />\n        <SalaryHeatmap />\n        <JobMarketChart />\n      </div>\n      \n      {/* Section 06: Professional Claims */}\n      <SectionDivider number=\"06\" label=\"Professional Claims\" />\n      \n      <div id=\"claims\">\n        <ThesesSection />\n      </div>\n      \n      <Footer />\n    </div>\n  );\n}\n","size_bytes":2414},"client/src/components/pull-quote.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Quote } from \"lucide-react\";\n\ninterface PullQuoteProps {\n  quote: string;\n  attribution?: string;\n  className?: string;\n}\n\nexport default function PullQuote({ quote, attribution, className = \"\" }: PullQuoteProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      viewport={{ once: true, amount: 0.5 }}\n      transition={{ duration: 0.6, ease: \"easeOut\" }}\n      className={`my-12 px-8 py-6 border-l-4 border-accent bg-accent/5 rounded-r-lg ${className}`}\n    >\n      <div className=\"relative\">\n        <Quote className=\"absolute -top-2 -left-4 w-8 h-8 text-accent/30 rotate-180\" />\n        <blockquote className=\"relative\">\n          <p className=\"text-2xl sm:text-3xl lg:text-4xl font-display font-medium text-foreground/90 leading-relaxed italic\">\n            {quote}\n          </p>\n          {attribution && (\n            <footer className=\"mt-4\">\n              <cite className=\"text-lg sm:text-xl text-foreground/70 not-italic font-medium\">\n                — {attribution}\n              </cite>\n            </footer>\n          )}\n        </blockquote>\n        <Quote className=\"absolute -bottom-2 -right-4 w-8 h-8 text-accent/30\" />\n      </div>\n    </motion.div>\n  );\n}","size_bytes":1289},"client/src/components/section1.tsx":{"content":"import UXToolEvolutionChart from \"./ux-tool-evolution-chart\";\nimport MaxExperienceChart from \"./max-experience-chart\";\n\nexport default function Section1() {\n  return (\n    <section id=\"revolution\" className=\"py-16 px-4 sm:px-6 lg:px-8\" data-testid=\"section-1\">\n      <div className=\"max-w-3xl mx-auto space-y-12\">\n        <div>\n          <span className=\"text-muted uppercase tracking-wider text-sm font-mono\">Section 1</span>\n        </div>\n\n        <h2 className=\"font-display text-4xl sm:text-5xl font-bold leading-tight\" data-testid=\"text-section1-heading\">\n          The Last Computer and Great Interface Revolution\n        </h2>\n\n        <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n          <p>\n            In 1973, after the mainframe era, Xerox wanted a <strong>Personal Computer Revolution</strong> and GUI development was pioneered by their PARC lab. The lab held demonstrations to show what computing could be—the so-called \"Alto Demo\"—to tell the industry that text-only interfaces would not survive. Today, we have modern UI.\n          </p>\n        </div>\n\n        <div id=\"tools\" className=\"space-y-6 py-8\">\n          <div className=\"space-y-2\">\n            <span className=\"text-muted uppercase tracking-wider text-xs font-mono\">Fig 01</span>\n            <h3 className=\"font-display text-2xl font-semibold\">UX Tool Evolution & User Growth</h3>\n          </div>\n\n          <div className=\"bg-accent/10 rounded-lg p-8 border border-accent\">\n            <UXToolEvolutionChart />\n          </div>\n        </div>\n\n        <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n          <p>\n            The most important consequence of the Alto wasn't just a better computer interface, but the <strong>coupling of human psychology to computing</strong> and the rise of <strong>Human-Computer Interaction</strong>. Innovation bred creativity and brought in the brilliant engineers and designers. This was the <strong>Great Interface Revolution</strong> of the computing industry.\n          </p>\n\n          <p>\n            Before the GUI revolution, only <strong>3% of computer users</strong> were non-technical. The vast majority of computing required programming skills and text commands. <strong>Xerox made computers visual. Apple made them friendly. Microsoft made them ubiquitous.</strong>\n          </p>\n        </div>\n\n        <div id=\"economics\" className=\"space-y-6 py-8\">\n          <div className=\"space-y-2\">\n            <span className=\"text-muted uppercase tracking-wider text-xs font-mono\">Fig 02</span>\n            <h3 className=\"font-display text-2xl font-semibold\">Max UX/UI Experience by Career Start</h3>\n          </div>\n\n          <div className=\"bg-accent/10 rounded-lg p-8 border border-accent\">\n            <MaxExperienceChart />\n          </div>\n\n          <div className=\"text-xs text-muted space-y-2\">\n            <p className=\"italic\">FIELD CREATORS → PIONEERS → PROFESSIONAL PRACTICE → INDUSTRY STANDARDS</p>\n            <p>Note: Only Field Creators (1993) and Early Pioneers (1995) can claim 24+ years of experience in 2025</p>\n          </div>\n        </div>\n\n        <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n          <p>\n            But today that 3% has ballooned to <strong>97% of computing users</strong> being non-technical. The revolution's fixation on <strong>user-centered design, intuitive interfaces, and accessible technology</strong> has made computing universally appealing, suitable not just for engineers but for everyone—a transformation only possible at the dawn of the personal computer age.\n          </p>\n\n          <p>\n            <strong>Working in UX/UI before 1990 meant you were essentially a computer scientist or industrial designer</strong>, not a dedicated user experience professional. That designation didn't exist.\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3960},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/footer.tsx":{"content":"import { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Separator } from '@/components/ui/separator';\nimport { Mail, Twitter, Linkedin, Github, Rss, ExternalLink, CheckCircle } from 'lucide-react';\nimport logoSvg from \"@assets/UXUI-logo.svg\";\n\nexport default function Footer() {\n  const [email, setEmail] = useState('');\n  const [isSubscribed, setIsSubscribed] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubscribe = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email) return;\n    \n    setIsSubmitting(true);\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    setIsSubscribed(true);\n    setIsSubmitting(false);\n  };\n\n  const citations = [\n    {\n      id: 1,\n      author: \"Norman, Don\",\n      title: \"The Design of Everyday Things\",\n      year: \"1988\",\n      source: \"Basic Books\"\n    },\n    {\n      id: 2,\n      author: \"Nielsen, Jakob\",\n      title: \"Usability Engineering\",\n      year: \"1993\",\n      source: \"Academic Press\"\n    },\n    {\n      id: 3,\n      author: \"Cooper, Alan\",\n      title: \"About Face: The Essentials of Interaction Design\",\n      year: \"1995\",\n      source: \"Wiley\"\n    },\n    {\n      id: 4,\n      author: \"Krug, Steve\",\n      title: \"Don't Make Me Think: A Common Sense Approach to Web Usability\",\n      year: \"2000\",\n      source: \"New Riders\"\n    },\n    {\n      id: 5,\n      author: \"Nielsen Norman Group\",\n      title: \"State of UX Report 2024\",\n      year: \"2024\",\n      source: \"NN/g Publications\"\n    },\n    {\n      id: 6,\n      author: \"Forrester Research\",\n      title: \"The Business Impact of Customer Experience\",\n      year: \"2023\",\n      source: \"Forrester\"\n    },\n    {\n      id: 7,\n      author: \"McKinsey & Company\",\n      title: \"The Business Value of Design\",\n      year: \"2018\",\n      source: \"McKinsey Design\"\n    },\n    {\n      id: 8,\n      author: \"ISO\",\n      title: \"ISO 9241-210:2019 Ergonomics of human-system interaction\",\n      year: \"2019\",\n      source: \"International Organization for Standardization\"\n    }\n  ];\n\n  const resources = {\n    keyReferences: [\n      { name: \"Design Systems Handbook\", url: \"#\", description: \"Comprehensive guide to modern design systems\" },\n      { name: \"UX Collective Archives\", url: \"#\", description: \"Historical perspectives on UX evolution\" },\n      { name: \"ACM Digital Library\", url: \"#\", description: \"Academic HCI and UX research papers\" }\n    ],\n    dataSources: [\n      { name: \"Bureau of Labor Statistics\", url: \"#\", description: \"Employment and salary data\" },\n      { name: \"Stack Overflow Survey 2024\", url: \"#\", description: \"Developer and designer statistics\" },\n      { name: \"Design Census 2023\", url: \"#\", description: \"Industry demographics and trends\" }\n    ],\n    furtherReading: [\n      { name: \"The Evolution of User Experience Design\", url: \"#\", description: \"MIT Technology Review\" },\n      { name: \"A Brief History of Human-Computer Interaction\", url: \"#\", description: \"Stanford HCI Group\" },\n      { name: \"The Future of UX: 2025 and Beyond\", url: \"#\", description: \"Adobe Design Insights\" }\n    ]\n  };\n\n  return (\n    <footer className=\"bg-background border-t border-accent mt-32\">\n      {/* Email Capture Section */}\n      <section className=\"bg-secondary/20 py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"max-w-2xl mx-auto text-center\">\n            {!isSubscribed ? (\n              <>\n                <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-3\">Stay Updated on UX/UI Research</h3>\n                <p className=\"text-sm sm:text-base text-muted-foreground mb-8\">Get insights on design evolution and industry analysis</p>\n                \n                <form onSubmit={handleSubscribe} className=\"flex flex-col sm:flex-row gap-3 max-w-md mx-auto\">\n                  <Input\n                    type=\"email\"\n                    placeholder=\"Enter your email\"\n                    value={email}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\n                    className=\"flex-1 bg-background border-accent/30 focus:border-accent\"\n                    required\n                    data-testid=\"input-email-subscribe\"\n                  />\n                  <Button \n                    type=\"submit\" \n                    disabled={isSubmitting}\n                    className=\"bg-accent hover:bg-accent/90 text-background font-semibold\"\n                    data-testid=\"button-subscribe\"\n                  >\n                    {isSubmitting ? (\n                      <>Subscribing...</>\n                    ) : (\n                      <>\n                        <Mail className=\"w-4 h-4 mr-2\" />\n                        Subscribe\n                      </>\n                    )}\n                  </Button>\n                </form>\n                \n                <p className=\"text-xs sm:text-sm text-muted-foreground mt-4\">\n                  We respect your privacy. Unsubscribe at any time.\n                </p>\n              </>\n            ) : (\n              <div className=\"flex flex-col items-center justify-center space-y-3\">\n                <CheckCircle className=\"w-12 h-12 text-accent\" />\n                <h3 className=\"font-display text-xl sm:text-2xl font-semibold\">Thank You for Subscribing!</h3>\n                <p className=\"text-sm sm:text-base text-muted-foreground\">You'll receive our latest research insights soon.</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n\n      {/* Resources Section */}\n      <section className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-12 text-center\">Research Resources</h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-12\">\n            {/* Key References */}\n            <div>\n              <h4 className=\"font-semibold text-base sm:text-lg mb-6 text-accent\">Key References</h4>\n              <ul className=\"space-y-4\">\n                {resources.keyReferences.map((ref, index) => (\n                  <li key={index}>\n                    <a \n                      href={ref.url} \n                      className=\"group flex flex-col space-y-1\"\n                      data-testid={`link-reference-${index}`}\n                    >\n                      <span className=\"text-sm sm:text-base text-foreground group-hover:text-accent transition-colors flex items-center\">\n                        {ref.name}\n                        <ExternalLink className=\"w-3 h-3 ml-1 opacity-0 group-hover:opacity-100 transition-opacity\" />\n                      </span>\n                      <span className=\"text-xs sm:text-sm text-muted-foreground\">{ref.description}</span>\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            {/* Data Sources */}\n            <div>\n              <h4 className=\"font-semibold text-base sm:text-lg mb-6 text-accent\">Data Sources</h4>\n              <ul className=\"space-y-4\">\n                {resources.dataSources.map((source, index) => (\n                  <li key={index}>\n                    <a \n                      href={source.url} \n                      className=\"group flex flex-col space-y-1\"\n                      data-testid={`link-datasource-${index}`}\n                    >\n                      <span className=\"text-sm sm:text-base text-foreground group-hover:text-accent transition-colors flex items-center\">\n                        {source.name}\n                        <ExternalLink className=\"w-3 h-3 ml-1 opacity-0 group-hover:opacity-100 transition-opacity\" />\n                      </span>\n                      <span className=\"text-xs sm:text-sm text-muted-foreground\">{source.description}</span>\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            {/* Further Reading */}\n            <div>\n              <h4 className=\"font-semibold text-base sm:text-lg mb-6 text-accent\">Further Reading</h4>\n              <ul className=\"space-y-4\">\n                {resources.furtherReading.map((article, index) => (\n                  <li key={index}>\n                    <a \n                      href={article.url} \n                      className=\"group flex flex-col space-y-1\"\n                      data-testid={`link-reading-${index}`}\n                    >\n                      <span className=\"text-sm sm:text-base text-foreground group-hover:text-accent transition-colors flex items-center\">\n                        {article.name}\n                        <ExternalLink className=\"w-3 h-3 ml-1 opacity-0 group-hover:opacity-100 transition-opacity\" />\n                      </span>\n                      <span className=\"text-xs sm:text-sm text-muted-foreground\">{article.description}</span>\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          {/* Research Methodology */}\n          <div className=\"mt-12 p-6 bg-secondary/10 rounded-lg border border-accent/20\">\n            <h4 className=\"font-semibold text-base sm:text-lg mb-3 text-accent\">Research Methodology</h4>\n            <p className=\"text-xs sm:text-sm text-muted-foreground leading-relaxed\">\n              This research synthesizes data from multiple sources including academic papers, industry reports, \n              employment statistics, and historical documentation. We employed quantitative analysis of salary \n              trends, job market data, and tool adoption rates, combined with qualitative analysis of design \n              paradigm shifts and professional evolution. All data points are cross-referenced with at least \n              two independent sources for accuracy.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      <Separator className=\"bg-accent/20\" />\n\n      {/* Citations Section */}\n      <section className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-8 text-center\">Citations</h3>\n          \n          <div className=\"max-w-4xl mx-auto\">\n            <ol className=\"space-y-3\">\n              {citations.map((citation) => (\n                <li key={citation.id} className=\"flex text-xs sm:text-sm\">\n                  <span className=\"text-accent font-semibold mr-3 min-w-[20px]\">[{citation.id}]</span>\n                  <span className=\"text-muted-foreground\">\n                    {citation.author}. ({citation.year}). <em>{citation.title}</em>. {citation.source}.\n                  </span>\n                </li>\n              ))}\n            </ol>\n          </div>\n        </div>\n      </section>\n\n      <Separator className=\"bg-accent/20\" />\n\n      {/* Bottom Footer */}\n      <section className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 mb-12\">\n            {/* Logo and Description */}\n            <div className=\"md:col-span-1\">\n              <div className=\"mb-4\">\n                <img \n                  src={logoSvg} \n                  alt=\"UX/UI Timeline\" \n                  className=\"h-8 w-auto brightness-0 dark:brightness-0 dark:invert mb-4\"\n                  data-testid=\"logo-footer\"\n                />\n              </div>\n              <p className=\"text-xs sm:text-sm text-muted-foreground\">\n                Comprehensive research on the evolution of user experience design from 1980 to 2024.\n              </p>\n            </div>\n\n            {/* Footer Links */}\n            <div className=\"md:col-span-2\">\n              <div className=\"grid grid-cols-2 gap-8\">\n                <div>\n                  <h4 className=\"font-semibold text-sm sm:text-base mb-4 text-accent\">Research</h4>\n                  <ul className=\"space-y-2\">\n                    <li>\n                      <a href=\"#\" className=\"text-xs sm:text-sm text-muted-foreground hover:text-accent transition-colors\" data-testid=\"link-about\">\n                        About This Research\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#\" className=\"text-xs sm:text-sm text-muted-foreground hover:text-accent transition-colors\" data-testid=\"link-methodology\">\n                        Methodology\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#\" className=\"text-xs sm:text-sm text-muted-foreground hover:text-accent transition-colors\" data-testid=\"link-contact\">\n                        Contact\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-semibold text-sm sm:text-base mb-4 text-accent\">Legal</h4>\n                  <ul className=\"space-y-2\">\n                    <li>\n                      <a href=\"#\" className=\"text-xs sm:text-sm text-muted-foreground hover:text-accent transition-colors\" data-testid=\"link-privacy\">\n                        Privacy Policy\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#\" className=\"text-xs sm:text-sm text-muted-foreground hover:text-accent transition-colors\" data-testid=\"link-terms\">\n                        Terms of Use\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#\" className=\"text-xs sm:text-sm text-muted-foreground hover:text-accent transition-colors\" data-testid=\"link-license\">\n                        License\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            {/* Social Links */}\n            <div className=\"md:col-span-1\">\n              <h4 className=\"font-semibold text-sm sm:text-base mb-4 text-accent\">Connect</h4>\n              <div className=\"flex space-x-4\">\n                <a \n                  href=\"#\" \n                  className=\"text-muted-foreground hover:text-accent transition-colors\"\n                  aria-label=\"Twitter\"\n                  data-testid=\"link-twitter\"\n                >\n                  <Twitter className=\"w-5 h-5\" />\n                </a>\n                <a \n                  href=\"#\" \n                  className=\"text-muted-foreground hover:text-accent transition-colors\"\n                  aria-label=\"LinkedIn\"\n                  data-testid=\"link-linkedin\"\n                >\n                  <Linkedin className=\"w-5 h-5\" />\n                </a>\n                <a \n                  href=\"#\" \n                  className=\"text-muted-foreground hover:text-accent transition-colors\"\n                  aria-label=\"GitHub\"\n                  data-testid=\"link-github\"\n                >\n                  <Github className=\"w-5 h-5\" />\n                </a>\n                <a \n                  href=\"#\" \n                  className=\"text-muted-foreground hover:text-accent transition-colors\"\n                  aria-label=\"RSS Feed\"\n                  data-testid=\"link-rss\"\n                >\n                  <Rss className=\"w-5 h-5\" />\n                </a>\n              </div>\n            </div>\n          </div>\n\n          <Separator className=\"bg-accent/20 mb-8\" />\n\n          {/* Copyright & Attribution */}\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n            <div className=\"text-xs sm:text-sm text-muted-foreground text-center md:text-left\">\n              <p>© 2024 UX/UI Timeline Research. All rights reserved.</p>\n              <p className=\"mt-1\">\n                Licensed under{' '}\n                <a href=\"https://creativecommons.org/licenses/by-sa/4.0/\" className=\"text-accent hover:underline\">\n                  Creative Commons BY-SA 4.0\n                </a>\n              </p>\n            </div>\n            \n            <div className=\"text-xs sm:text-sm text-muted-foreground text-center md:text-right\">\n              <p>Data compiled from public sources.</p>\n              <p className=\"mt-1\">Last updated: January 2025</p>\n            </div>\n          </div>\n        </div>\n      </section>\n    </footer>\n  );\n}","size_bytes":16584},"client/src/components/skills-evolution-chart.tsx":{"content":"import { RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer, Legend, Tooltip } from 'recharts';\nimport { useState } from 'react';\n\n// Skills evolution data for different time periods\nconst skillsData = [\n  {\n    skill: 'Visual Design',\n    '2000': 90,\n    '2010': 85,\n    '2020': 75,\n    '2024': 70,\n    fullMark: 100\n  },\n  {\n    skill: 'User Research',\n    '2000': 40,\n    '2010': 60,\n    '2020': 80,\n    '2024': 85,\n    fullMark: 100\n  },\n  {\n    skill: 'Prototyping',\n    '2000': 30,\n    '2010': 70,\n    '2020': 85,\n    '2024': 90,\n    fullMark: 100\n  },\n  {\n    skill: 'Coding/HTML',\n    '2000': 60,\n    '2010': 50,\n    '2020': 40,\n    '2024': 35,\n    fullMark: 100\n  },\n  {\n    skill: 'Psychology',\n    '2000': 50,\n    '2010': 60,\n    '2020': 70,\n    '2024': 75,\n    fullMark: 100\n  },\n  {\n    skill: 'Design Systems',\n    '2000': 10,\n    '2010': 30,\n    '2020': 75,\n    '2024': 90,\n    fullMark: 100\n  },\n  {\n    skill: 'Data Analysis',\n    '2000': 20,\n    '2010': 40,\n    '2020': 70,\n    '2024': 80,\n    fullMark: 100\n  },\n  {\n    skill: 'Business Strategy',\n    '2000': 30,\n    '2010': 45,\n    '2020': 65,\n    '2024': 80,\n    fullMark: 100\n  }\n];\n\n// Color palette - IBM Carbon colors for different time periods\nconst periodColors: Record<string, string> = {\n  '2024': 'hsl(217, 100%, 53%)',     // IBM Carbon Blue (primary)\n  '2020': 'hsl(142, 63%, 39%)',      // Success green\n  '2010': 'hsl(292, 48%, 55%)',      // Purple for categorical\n  '2000': 'hsl(47, 86%, 52%)',       // Yellow for highlights\n};\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload }: any) => {\n  if (active && payload && payload.length) {\n    const sortedPayload = [...payload].sort((a, b) => {\n      const yearA = parseInt(a.dataKey);\n      const yearB = parseInt(b.dataKey);\n      return yearB - yearA;\n    });\n    \n    return (\n      <div className=\"bg-card dark:bg-card border border-primary/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200 min-w-[200px]\">\n        <p className=\"font-semibold text-foreground mb-2\">\n          {payload[0]?.payload?.skill}\n        </p>\n        {sortedPayload.map((entry: any) => {\n          if (entry.value) {\n            return (\n              <div key={entry.dataKey} className=\"flex justify-between items-center py-1\">\n                <div className=\"flex items-center gap-2\">\n                  <div \n                    className=\"w-3 h-3 rounded-sm\" \n                    style={{ backgroundColor: entry.color }}\n                  />\n                  <span className=\"text-sm text-foreground/90\">{entry.dataKey}</span>\n                </div>\n                <span className=\"text-sm font-mono font-semibold text-foreground\">\n                  {entry.value}\n                </span>\n              </div>\n            );\n          }\n          return null;\n        })}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Custom legend component with interactivity\nconst CustomLegend = ({ payload, onToggle, hiddenPeriods }: any) => {\n  return (\n    <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 md:gap-4 mt-6\">\n      {payload.map((entry: any) => {\n        const isHidden = hiddenPeriods.includes(entry.value);\n        return (\n          <button\n            key={entry.value}\n            onClick={() => onToggle(entry.value)}\n            className={`flex items-center gap-2 px-3 py-1.5 rounded-lg transition-all duration-200 \n              ${isHidden \n                ? 'opacity-40 bg-card hover:opacity-60' \n                : 'bg-primary/10 hover:bg-primary/20'\n              }`}\n          >\n            <div \n              className=\"w-3 h-3 rounded-sm transition-all duration-200\"\n              style={{ \n                backgroundColor: isHidden ? 'hsl(0, 0%, 40%)' : entry.color,\n              }}\n            />\n            <span className=\"text-xs sm:text-sm text-foreground/90 font-medium\">\n              {entry.value}\n            </span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\n// Custom label rendering for PolarAngleAxis\nconst renderCustomAxisLabel = (value: string) => {\n  const maxLength = 12;\n  if (value.length > maxLength) {\n    return value.substring(0, maxLength - 3) + '...';\n  }\n  return value;\n};\n\nexport default function SkillsEvolutionChart() {\n  const [hiddenPeriods, setHiddenPeriods] = useState<string[]>([]);\n  \n  const togglePeriod = (period: string) => {\n    setHiddenPeriods(prev => \n      prev.includes(period) \n        ? prev.filter(p => p !== period)\n        : [...prev, period]\n    );\n  };\n  \n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-primary/[0.02] rounded-xl border border-primary/10 p-4 sm:p-6 md:p-8 transition-all duration-300 hover:border-primary/20\">\n          <div className=\"mb-6\">\n            <span className=\"text-muted-foreground uppercase tracking-wider text-xs font-mono\">Fig 03</span>\n            <h3 className=\"text-xl sm:text-2xl md:text-3xl font-semibold font-display text-foreground mt-1\">\n              Evolution of UX/UI Skill Requirements\n            </h3>\n            <p className=\"text-xs sm:text-sm md:text-base text-foreground/70 mt-2\">\n              Relative importance of skills over time (0-100 scale)\n            </p>\n          </div>\n          \n          <div className=\"h-64 sm:h-80 md:h-96 w-full\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <RadarChart data={skillsData}>\n                <PolarGrid \n                  stroke=\"hsl(217, 100%, 53%)\"\n                  strokeOpacity={0.1}\n                  radialLines={true}\n                />\n                <PolarAngleAxis \n                  dataKey=\"skill\"\n                  tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 10 }}\n                  className=\"text-xs sm:text-sm\"\n                />\n                <PolarRadiusAxis \n                  angle={90}\n                  domain={[0, 100]}\n                  tick={{ fill: 'hsl(0, 0%, 55%)', fontSize: 9 }}\n                  className=\"text-xs\"\n                  tickCount={6}\n                />\n                \n                <Tooltip \n                  content={<CustomTooltip />}\n                  cursor={false}\n                  animationDuration={200}\n                />\n                \n                {/* Render radars in reverse chronological order for proper layering */}\n                {!hiddenPeriods.includes('2000') && (\n                  <Radar\n                    name=\"2000\"\n                    dataKey=\"2000\"\n                    stroke={periodColors['2000']}\n                    fill={periodColors['2000']}\n                    fillOpacity={0.15}\n                    strokeWidth={2}\n                    animationDuration={1200}\n                    animationBegin={0}\n                  />\n                )}\n                {!hiddenPeriods.includes('2010') && (\n                  <Radar\n                    name=\"2010\"\n                    dataKey=\"2010\"\n                    stroke={periodColors['2010']}\n                    fill={periodColors['2010']}\n                    fillOpacity={0.15}\n                    strokeWidth={2}\n                    animationDuration={1200}\n                    animationBegin={200}\n                  />\n                )}\n                {!hiddenPeriods.includes('2020') && (\n                  <Radar\n                    name=\"2020\"\n                    dataKey=\"2020\"\n                    stroke={periodColors['2020']}\n                    fill={periodColors['2020']}\n                    fillOpacity={0.15}\n                    strokeWidth={2}\n                    animationDuration={1200}\n                    animationBegin={400}\n                  />\n                )}\n                {!hiddenPeriods.includes('2024') && (\n                  <Radar\n                    name=\"2024\"\n                    dataKey=\"2024\"\n                    stroke={periodColors['2024']}\n                    fill={periodColors['2024']}\n                    fillOpacity={0.25}\n                    strokeWidth={3}\n                    animationDuration={1200}\n                    animationBegin={600}\n                  />\n                )}\n                \n                <Legend \n                  content={(props) => \n                    <CustomLegend \n                      {...props} \n                      onToggle={togglePeriod} \n                      hiddenPeriods={hiddenPeriods} \n                    />\n                  }\n                />\n              </RadarChart>\n            </ResponsiveContainer>\n          </div>\n          \n          {/* Key Insights */}\n          <div className=\"mt-8 pt-6 border-t border-primary/10\">\n            <h4 className=\"text-sm font-semibold text-foreground/90 mb-3\">Key Skill Evolution Insights:</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h5 className=\"text-xs font-mono text-primary mb-2\">Skills Gaining Importance ↑</h5>\n                <ul className=\"space-y-2 text-xs text-foreground/70\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-primary mr-2\">•</span>\n                    <span><strong>Design Systems</strong> (+800% since 2000): From 10 to 90, reflecting the shift to scalable, consistent design</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-primary mr-2\">•</span>\n                    <span><strong>Data Analysis</strong> (+300% since 2000): From 20 to 80, driven by data-informed design decisions</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-primary mr-2\">•</span>\n                    <span><strong>Prototyping</strong> (+200% since 2000): From 30 to 90, enabled by modern tools like Figma</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-primary mr-2\">•</span>\n                    <span><strong>Business Strategy</strong> (+167% since 2000): From 30 to 80, UX as business differentiator</span>\n                  </li>\n                </ul>\n              </div>\n              \n              <div>\n                <h5 className=\"text-xs font-mono text-primary mb-2\">Skills Declining in Emphasis ↓</h5>\n                <ul className=\"space-y-2 text-xs text-foreground/70\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-primary mr-2\">•</span>\n                    <span><strong>Visual Design</strong> (-22% since 2000): From 90 to 70, still important but less dominant</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-primary mr-2\">•</span>\n                    <span><strong>Coding/HTML</strong> (-42% since 2000): From 60 to 35, specialized roles and no-code tools</span>\n                  </li>\n                </ul>\n                \n                <h5 className=\"text-xs font-mono text-primary mb-2 mt-4\">Steady Growth Areas</h5>\n                <ul className=\"space-y-2 text-xs text-foreground/70\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-primary mr-2\">•</span>\n                    <span><strong>User Research</strong>: Consistent upward trend from 40 to 85</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-primary mr-2\">•</span>\n                    <span><strong>Psychology</strong>: Gradual increase from 50 to 75</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          \n          {/* Historical Context */}\n          <div className=\"mt-6 pt-6 border-t border-primary/10\">\n            <h4 className=\"text-sm font-semibold text-foreground/90 mb-3\">Evolution Timeline:</h4>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <div className=\"flex items-start gap-3\">\n                <span style={{ color: periodColors['2000'] }} className=\"text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2000</p>\n                  <p className=\"text-xs text-muted-foreground\">Visual-centric web design era, heavy coding requirements</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span style={{ color: periodColors['2010'] }} className=\"text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2010</p>\n                  <p className=\"text-xs text-muted-foreground\">Mobile-first revolution, rise of prototyping tools</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span style={{ color: periodColors['2020'] }} className=\"text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2020</p>\n                  <p className=\"text-xs text-muted-foreground\">Systems thinking dominance, data-driven design</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span style={{ color: periodColors['2024'] }} className=\"text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-foreground/80\">2024</p>\n                  <p className=\"text-xs text-muted-foreground\">AI-augmented design, strategic business focus</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <p className=\"text-xs text-muted-foreground mt-6 font-mono\">\n            Source: Industry job postings analysis, design role surveys, and professional skill assessments (2000-2024)\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":13977},"client/src/components/origins-section.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Clock, Cpu, Monitor, Mouse, Users, Lightbulb, Package } from \"lucide-react\";\nimport PullQuote from \"@/components/pull-quote\";\nimport DataCallout from \"@/components/data-callout\";\nimport ExpandablePioneerCard from \"@/components/expandable-pioneer-card\";\nimport FadeInSection from \"@/components/fade-in-section\";\nimport ComputingDemocratizationScatter from \"@/components/computing-democratization-scatter\";\nimport { motion } from \"framer-motion\";\nimport { ReactNode } from \"react\";\nimport VannevarBushImg from \"@assets/Visionaries/Vannevar-Bush-1500-800.jpg\";\nimport DouglasEngelbartImg from \"@assets/Visionaries/Douglas_Engelbart.jpg\";\nimport IvanSutherlandImg from \"@assets/Visionaries/300px-Ivan_Sutherland_1592.jpg\";\nimport AlanKayImg from \"@assets/Visionaries/Kay.webp\";\nimport LarryTeslerImg from \"@assets/Visionaries/Larry Tesler .jpg\";\n\ninterface CriticalMomentDataPoint {\n  name: string;\n  year: number;\n  category: string;\n  era: \"Early Era\" | \"GUI Era\";\n  icon: ReactNode;\n  person: string;\n  description: string;\n}\n\nexport default function OriginsSection() {\n  const criticalMomentsData: CriticalMomentDataPoint[] = [\n    {\n      name: \"Sketchpad\",\n      year: 1963,\n      category: \"Computer Graphics\",\n      era: \"Early Era\",\n      icon: <Monitor className=\"w-full h-full\" />,\n      person: \"Ivan Sutherland\",\n      description: \"First GUI program with light pen for direct manipulation\"\n    },\n    {\n      name: \"Mother of All Demos\",\n      year: 1968,\n      category: \"Input Devices\",\n      era: \"Early Era\",\n      icon: <Mouse className=\"w-full h-full\" />,\n      person: \"Douglas Engelbart\",\n      description: \"Demonstrated mouse, windows, hypertext, and collaboration\"\n    },\n    {\n      name: \"Xerox Alto\",\n      year: 1973,\n      category: \"GUI Systems\",\n      era: \"GUI Era\",\n      icon: <Cpu className=\"w-full h-full\" />,\n      person: \"Xerox PARC Team\",\n      description: \"First computer with GUI and mouse as primary interaction\"\n    },\n    {\n      name: \"Xerox Star\",\n      year: 1981,\n      category: \"Commercial Products\",\n      era: \"GUI Era\",\n      icon: <Package className=\"w-full h-full\" />,\n      person: \"Xerox Corporation\",\n      description: \"First commercial computer with GUI, icons, and WYSIWYG\"\n    }\n  ];\n\n  const criticalMomentsCategories = [\n    \"Computer Graphics\",\n    \"Input Devices\",\n    \"GUI Systems\",\n    \"Commercial Products\"\n  ];\n\n  const criticalMomentsYears = [1963, 1968, 1973, 1978, 1981];\n  \n  const getCriticalMomentsEraColor = (era: string) => {\n    switch (era) {\n      case \"Early Era\":\n        return \"#7A9A8A\"; // Muted sage-teal\n      case \"GUI Era\":\n        return \"#C8956B\"; // Terracotta\n      default:\n        return \"#a0aec0\";\n    }\n  };\n\n  const getCriticalMomentsYPosition = (category: string) => {\n    const index = criticalMomentsCategories.indexOf(category);\n    return (index / (criticalMomentsCategories.length - 1)) * 100;\n  };\n\n  const getCriticalMomentsXPosition = (year: number) => {\n    return ((year - 1963) / (1981 - 1963)) * 100;\n  };\n\n  const pioneers = [\n    {\n      name: \"Vannevar Bush\",\n      title: \"Information Architecture Visionary\",\n      years: \"1890-1974\",\n      contribution: \"His 1945 essay 'As We May Think' described the Memex, envisioning a future where humans could navigate vast amounts of interconnected information through associative trails - the conceptual foundation of hypertext.\",\n      quote: \"Consider a future device... in which an individual stores all his books, records, and communications, and which is mechanized so that it may be consulted with exceeding speed and flexibility.\",\n      legacy: \"Inspired Douglas Engelbart and Ted Nelson to pursue hypertext systems\"\n    },\n    {\n      name: \"Douglas Engelbart\",\n      title: \"Human Augmentation Pioneer\",\n      years: \"1925-2013\",\n      contribution: \"Founded the Augmentation Research Center at Stanford Research Institute. Invented the computer mouse, developed early hypertext systems, and pioneered collaborative computing tools.\",\n      quote: \"The digital revolution is far more significant than the invention of writing or even of printing.\",\n      legacy: \"His 1968 demo influenced every major advancement in personal computing\"\n    },\n    {\n      name: \"Ivan Sutherland\",\n      title: \"Computer Graphics Pioneer\",\n      years: \"1938-Present\",\n      contribution: \"Created Sketchpad in 1963, demonstrating that computers could be used for more than just processing numbers. Introduced concepts of graphical computing and direct manipulation interfaces.\",\n      quote: \"The ultimate display would, of course, be a room within which the computer can control the existence of matter.\",\n      legacy: \"Father of computer graphics, VR pioneer, Turing Award winner\"\n    },\n    {\n      name: \"Alan Kay\",\n      title: \"Object-Oriented UI Inventor\",\n      years: \"1940-Present\",\n      contribution: \"Conceived the Dynabook concept - a portable computer for children. Led development of Smalltalk at Xerox PARC, creating the first true object-oriented programming language with a graphical interface.\",\n      quote: \"The best way to predict the future is to invent it.\",\n      legacy: \"Influenced Steve Jobs, pioneered modern educational computing\"\n    },\n    {\n      name: \"Larry Tesler\",\n      title: \"Modeless Interface Champion\",\n      years: \"1945-2020\",\n      contribution: \"Invented cut, copy, and paste operations. Advocated for modeless interfaces where users don't need to switch between different states. Made computing more intuitive for non-programmers.\",\n      quote: \"There's no mode that can't be eliminated.\",\n      legacy: \"His 'no modes' philosophy shaped modern user interface design\"\n    }\n  ];\n\n  return (\n    <>\n      {/* Opening Hero Section with Dark Sage Background */}\n      <section \n        className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12 bg-[#6b7a5d]\" \n        data-testid=\"section-origins-hero\"\n      >\n        <div className=\"max-w-5xl mx-auto\">\n          <div className=\"space-y-12\">\n            {/* Section Label and Pagination Dots */}\n            <div className=\"flex items-start justify-between\">\n              <span \n                className=\"text-black/60 uppercase tracking-[0.2em] text-xs sm:text-sm font-sans font-medium\" \n                data-testid=\"label-section-1\"\n              >\n                Section 1\n              </span>\n              \n              {/* Pagination Dots */}\n              <div className=\"flex items-center gap-2\" data-testid=\"pagination-dots\">\n                <div className=\"w-2.5 h-2.5 rounded-full bg-black\" data-testid=\"dot-active\" />\n                <div className=\"w-2.5 h-2.5 rounded-full bg-black/20\" data-testid=\"dot-inactive-1\" />\n                <div className=\"w-2.5 h-2.5 rounded-full bg-black/20\" data-testid=\"dot-inactive-2\" />\n                <div className=\"w-2.5 h-2.5 rounded-full bg-black/20\" data-testid=\"dot-inactive-3\" />\n              </div>\n            </div>\n            \n            {/* Headline */}\n            <h2 \n              className=\"font-display text-3xl sm:text-4xl lg:text-5xl font-normal leading-[1.1] text-black\" \n              data-testid=\"text-origins-heading\"\n            >\n              Before the pixel, there was the vision\n            </h2>\n\n            {/* Body Text */}\n            <div className=\"space-y-6 text-black/90\">\n              <p className=\"text-sm sm:text-base leading-[1.8] text-justify\">\n                Long before screens glowed with graphical interfaces, before mice clicked and fingers tapped, visionaries imagined a future where humans and computers would collaborate as partners. This is the untold prehistory of UX/UI design — a story that begins not with pixels, but with profound questions about human cognition and information architecture.\n              </p>\n\n              <p className=\"text-sm sm:text-base leading-[1.8] text-justify\">\n                In the aftermath of World War II, as early computers filled entire rooms and required specialized operators, a handful of pioneers dared to imagine something radical: machines that would augment human intelligence rather than merely calculate. They envisioned systems that would feel natural, interfaces that would disappear into intuition, and tools that would amplify human creativity.\n              </p>\n\n              <p className=\"text-sm sm:text-base leading-[1.8] text-justify\">\n                These weren't designers in the modern sense — they were mathematicians, engineers, and cognitive scientists. Yet their work laid the foundation for everything we now call user experience. They asked the questions that still drive our field: How should humans and computers communicate? What makes an interface intuitive? How can technology enhance rather than replace human capabilities?\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Content Section with Original Styling */}\n      <section className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\" data-testid=\"section-origins\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Critical Moments Scatter Plot */}\n          <div className=\"mb-24\">\n            <div className=\"w-full bg-[#f5f2ed] py-12 px-6 rounded-lg\">\n              <div className=\"max-w-6xl mx-auto\">\n                <h3 className=\"text-xl sm:text-2xl md:text-3xl font-display font-bold text-center mb-2 text-black\">\n                  Critical Moments in Pre-Digital Interface History\n                </h3>\n                \n                {/* Legend */}\n                <div className=\"flex justify-center gap-6 mb-8 flex-wrap\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-[#7A9A8A]\" />\n                    <span className=\"text-xs sm:text-sm font-sans text-black\">Early Era (1963-1970)</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-[#C8956B]\" />\n                    <span className=\"text-xs sm:text-sm font-sans text-black\">GUI Era (1971-1981)</span>\n                  </div>\n                </div>\n\n                {/* Chart Container */}\n                <div className=\"relative bg-white/30 border border-black/10 rounded-lg p-4 sm:p-6 md:p-8\">\n                  {/* Y-axis labels */}\n                  <div className=\"absolute left-0 top-4 sm:top-6 md:top-8 bottom-4 sm:bottom-6 md:bottom-8 w-24 sm:w-32 md:w-40 flex flex-col justify-between text-right pr-2 sm:pr-3 md:pr-4\">\n                    {criticalMomentsCategories.map((cat, index) => (\n                      <div key={cat} className=\"text-[10px] sm:text-xs font-sans text-black/70 leading-tight\" style={{ \n                        transform: 'translateY(-50%)',\n                        position: 'absolute',\n                        top: `${(index / (criticalMomentsCategories.length - 1)) * 100}%`,\n                        right: '1rem'\n                      }}>\n                        {cat}\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Chart area */}\n                  <div className=\"ml-24 sm:ml-32 md:ml-40 relative h-64 sm:h-72 md:h-[350px]\">\n                    {/* Grid lines - vertical */}\n                    {criticalMomentsYears.map((year) => (\n                      <div\n                        key={`grid-v-${year}`}\n                        className=\"absolute top-0 bottom-0 border-l border-black/5\"\n                        style={{ left: `${getCriticalMomentsXPosition(year)}%` }}\n                      />\n                    ))}\n\n                    {/* Grid lines - horizontal */}\n                    {criticalMomentsCategories.map((cat, index) => (\n                      <div\n                        key={`grid-h-${cat}`}\n                        className=\"absolute left-0 right-0 border-t border-black/5\"\n                        style={{ top: `${(index / (criticalMomentsCategories.length - 1)) * 100}%` }}\n                      />\n                    ))}\n\n                    {/* Data points with icons */}\n                    {criticalMomentsData.map((moment, index) => (\n                      <motion.div\n                        key={`${moment.name}-${index}`}\n                        initial={{ scale: 0, opacity: 0 }}\n                        animate={{ scale: 1, opacity: 1 }}\n                        transition={{ delay: index * 0.15, duration: 0.5 }}\n                        className=\"absolute cursor-pointer transform -translate-x-1/2 -translate-y-1/2 group\"\n                        style={{\n                          left: `${getCriticalMomentsXPosition(moment.year)}%`,\n                          top: `${getCriticalMomentsYPosition(moment.category)}%`,\n                        }}\n                        data-testid={`icon-${moment.category.toLowerCase().replace(/\\s+/g, '-')}-${moment.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                      >\n                        {/* Icon container with colored background */}\n                        <div \n                          className=\"w-6 h-6 sm:w-7 sm:h-7 md:w-9 md:h-9 rounded-lg flex items-center justify-center p-1 sm:p-1.5 md:p-2 shadow-md transition-all duration-200 group-hover:scale-125 group-hover:shadow-lg\"\n                          style={{\n                            backgroundColor: getCriticalMomentsEraColor(moment.era),\n                            color: 'white'\n                          }}\n                        >\n                          {moment.icon}\n                        </div>\n                        \n                        {/* Hover tooltip */}\n                        <div className=\"absolute left-1/2 -translate-x-1/2 top-full mt-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none z-10\">\n                          <div className=\"bg-black text-white text-xs rounded-lg px-3 py-2 shadow-xl max-w-xs\">\n                            <div className=\"font-bold\">{moment.name}</div>\n                            <div className=\"text-white/70\">{moment.year} - {moment.person}</div>\n                            <div className=\"text-white/60 text-[10px] mt-1\">{moment.description}</div>\n                          </div>\n                        </div>\n                      </motion.div>\n                    ))}\n\n                    {/* X-axis labels */}\n                    <div className=\"absolute left-0 right-0 -bottom-6 flex justify-between\">\n                      {criticalMomentsYears.map((year) => (\n                        <div\n                          key={`x-label-${year}`}\n                          className=\"text-[10px] sm:text-xs text-black/70 font-mono\"\n                          style={{ \n                            position: 'absolute',\n                            left: `${getCriticalMomentsXPosition(year)}%`,\n                            transform: 'translateX(-50%)'\n                          }}\n                        >\n                          {year}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Research Centers Callout */}\n          <Card className=\"p-8 mb-20 bg-accent/10 border-accent/30\">\n            <div className=\"flex items-start gap-4\">\n              <Users className=\"w-6 h-6 text-accent mt-1\" />\n              <div>\n                <h4 className=\"text-xl sm:text-2xl md:text-3xl font-semibold mb-3\">Early HCI Research Centers</h4>\n                <div className=\"grid md:grid-cols-3 gap-6 text-foreground/80\">\n                  <div>\n                    <p className=\"font-semibold text-accent text-sm sm:text-base\">MIT</p>\n                    <p className=\"text-sm sm:text-base\">Lincoln Laboratory pioneered interactive computing with TX-0 and TX-2 computers, enabling Sutherland's Sketchpad.</p>\n                  </div>\n                  <div>\n                    <p className=\"font-semibold text-accent text-sm sm:text-base\">Stanford Research Institute</p>\n                    <p className=\"text-sm sm:text-base\">Engelbart's Augmentation Research Center developed NLS (oN-Line System), the first hypertext system with a mouse.</p>\n                  </div>\n                  <div>\n                    <p className=\"font-semibold text-accent text-sm sm:text-base\">Xerox PARC</p>\n                    <p className=\"text-sm sm:text-base\">The Computer Science Laboratory created Alto and Star, defining the desktop metaphor we still use today.</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Pioneers Section */}\n          <FadeInSection className=\"mb-20\">\n            <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-12\">The Visionaries Who Defined Our Digital Future</h3>\n            \n            <div className=\"space-y-8\">\n              {pioneers.map((pioneer, index) => {\n                const images = [\n                  VannevarBushImg,\n                  DouglasEngelbartImg,\n                  IvanSutherlandImg,\n                  AlanKayImg,\n                  LarryTeslerImg\n                ];\n                \n                return (\n                  <Card key={pioneer.name} className=\"overflow-hidden bg-card/30 border-accent/20\" data-testid={`visionary-${pioneer.name.toLowerCase().replace(' ', '-')}`}>\n                    <div className=\"grid md:grid-cols-[300px_1fr] gap-0\">\n                      {/* Image Section */}\n                      <div className=\"bg-black/40\">\n                        <img \n                          src={images[index]} \n                          alt={pioneer.name}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      </div>\n                      \n                      {/* Content Section */}\n                      <div className=\"p-8 space-y-6\">\n                        {/* Header */}\n                        <div className=\"space-y-1\">\n                          <h4 className=\"text-2xl sm:text-3xl font-bold\">{pioneer.name}</h4>\n                          <p className=\"text-xs sm:text-sm text-muted-foreground font-mono\">{pioneer.years}</p>\n                          <p className=\"text-accent text-sm sm:text-base font-semibold\">{pioneer.title}</p>\n                        </div>\n                        \n                        {/* Contribution */}\n                        <p className=\"text-sm sm:text-base text-foreground/90 leading-relaxed\">\n                          {pioneer.contribution}\n                        </p>\n                        \n                        {/* Quote */}\n                        <blockquote className=\"border-l-4 border-accent/40 pl-6 py-2\">\n                          <p className=\"italic text-sm sm:text-base text-foreground/80\">\"{pioneer.quote}\"</p>\n                        </blockquote>\n                        \n                        {/* Legacy */}\n                        <p className=\"text-sm sm:text-base text-foreground/70\">\n                          {pioneer.legacy}\n                        </p>\n                      </div>\n                    </div>\n                  </Card>\n                );\n              })}\n            </div>\n          </FadeInSection>\n\n          {/* Pull Quote from Alan Kay */}\n          <PullQuote\n            quote=\"The best way to predict the future is to invent it.\"\n            attribution=\"Alan Kay\"\n          />\n\n          {/* Data Callouts */}\n          <DataCallout\n            value=\"$220,000 in today's dollars\"\n            label=\"The 1973 Xerox Alto cost ($32,000 originally) - making it accessible only to research institutions, yet it defined personal computing's future\"\n            type=\"money\"\n          />\n\n          {/* Birth of GUI Section */}\n          <div className=\"max-w-4xl mx-auto mb-24\">\n            <Separator className=\"mb-12 bg-accent/20\" />\n            \n            <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-8\">The Birth of Graphical Interfaces</h3>\n            \n            <div className=\"prose prose-lg space-y-6 text-foreground/90\">\n              <p className=\"text-sm sm:text-base\">\n                The transition from command-line interfaces to graphical user interfaces wasn't merely a technical evolution — it was a philosophical revolution. When the Xerox Alto displayed its first bitmapped screen in 1973, it represented a fundamental shift in how we conceive the relationship between humans and computers.\n              </p>\n              \n              <p className=\"text-sm sm:text-base\">\n                For the first time, computers could show rather than tell. Icons replaced commands. The mouse enabled direct manipulation. The desktop metaphor made abstract digital concepts tangible. These weren't just new features; they were new languages for human-computer interaction.\n              </p>\n              \n              <p className=\"text-sm sm:text-base\">\n                The researchers at Xerox PARC didn't just create new technology — they created new possibilities for human expression and creativity. Their work proved that computers could be tools for everyone, not just programmers. The GUI democratized computing, setting the stage for the personal computer revolution and, ultimately, for the field of UX/UI design itself.\n              </p>\n              \n              <p className=\"text-base sm:text-lg lg:text-xl font-medium text-accent\">\n                What began as academic research in the 1960s and 1970s would, within a generation, transform into a multi-billion dollar industry and reshape human civilization. The foundations laid by these pioneers continue to support every swipe, tap, and click we make today.\n              </p>\n            </div>\n          </div>\n\n          {/* Computing Democratization Scatter Plot */}\n          <div className=\"mb-24\">\n            <ComputingDemocratizationScatter />\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":22182},"client/src/components/timeline-minimap.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface TimelineEvent {\n  year: string;\n  title: string;\n  id?: string;\n}\n\ninterface TimelineMinimapProps {\n  events: TimelineEvent[];\n  sectionId?: string;\n}\n\nexport default function TimelineMinimap({ events, sectionId }: TimelineMinimapProps) {\n  const [activeIndex, setActiveIndex] = useState<number>(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const section = sectionId ? document.getElementById(sectionId) : null;\n      if (!section) return;\n\n      const sectionRect = section.getBoundingClientRect();\n      const viewportMiddle = window.innerHeight / 2;\n\n      // Find which event is closest to the viewport middle\n      const eventElements = section.querySelectorAll('[data-year]');\n      let closestIndex = 0;\n      let closestDistance = Infinity;\n\n      eventElements.forEach((el, index) => {\n        const rect = el.getBoundingClientRect();\n        const distance = Math.abs(rect.top + rect.height / 2 - viewportMiddle);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestIndex = index;\n        }\n      });\n\n      setActiveIndex(closestIndex);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    handleScroll(); // Initial check\n\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [sectionId]);\n\n  const handleEventClick = (event: TimelineEvent, index: number) => {\n    const section = sectionId ? document.getElementById(sectionId) : null;\n    if (!section) return;\n\n    const eventElements = section.querySelectorAll('[data-year]');\n    const targetElement = eventElements[index] as HTMLElement;\n\n    if (targetElement) {\n      const offset = 100; // Offset from top\n      const elementPosition = targetElement.getBoundingClientRect().top + window.scrollY;\n      const offsetPosition = elementPosition - offset;\n\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  return (\n    <div \n      className=\"sticky bottom-8 left-0 right-0 z-20 px-4 sm:px-6 lg:px-8 pointer-events-none\"\n      data-testid=\"timeline-minimap\"\n    >\n      <div className=\"max-w-4xl mx-auto\">\n        <motion.div\n          className=\"bg-background/80 backdrop-blur-lg border border-timeline-sage/30 rounded-full px-6 py-3 pointer-events-auto\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.5 }}\n        >\n          {/* Minimap Title */}\n          <div className=\"flex items-center justify-between mb-3\">\n            <p className=\"text-xs font-mono text-muted-foreground uppercase tracking-wider\">\n              Timeline Overview\n            </p>\n            <p className=\"text-xs font-mono text-timeline-sage\">\n              {events[activeIndex]?.year}\n            </p>\n          </div>\n\n          {/* Event Dots */}\n          <div className=\"flex items-center gap-2 justify-between\">\n            {events.map((event, index) => (\n              <button\n                key={index}\n                onClick={() => handleEventClick(event, index)}\n                className=\"group relative flex flex-col items-center gap-1 transition-all\"\n                data-testid={`minimap-dot-${index}`}\n                aria-label={`Jump to ${event.year}`}\n              >\n                {/* Dot */}\n                <motion.div\n                  className={`\n                    rounded-full transition-all duration-300\n                    ${activeIndex === index \n                      ? 'w-3 h-3 bg-timeline-terracotta shadow-lg shadow-timeline-terracotta/50' \n                      : 'w-2 h-2 bg-timeline-sage/40 group-hover:bg-timeline-sage/70'\n                    }\n                  `}\n                  whileHover={{ scale: 1.3 }}\n                  whileTap={{ scale: 0.9 }}\n                />\n\n                {/* Year label on hover */}\n                <motion.div\n                  className=\"absolute -top-8 whitespace-nowrap\"\n                  initial={{ opacity: 0, y: 5 }}\n                  whileHover={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <div className=\"bg-background/90 border border-timeline-sage/30 rounded px-2 py-1 backdrop-blur-sm\">\n                    <p className=\"text-[10px] font-mono text-timeline-cream\">\n                      {event.year}\n                    </p>\n                  </div>\n                </motion.div>\n\n                {/* Active indicator line */}\n                {activeIndex === index && (\n                  <motion.div\n                    className=\"absolute -top-1 w-px h-4 bg-timeline-terracotta\"\n                    initial={{ height: 0 }}\n                    animate={{ height: 16 }}\n                    transition={{ duration: 0.3 }}\n                  />\n                )}\n              </button>\n            ))}\n          </div>\n\n          {/* Progress bar */}\n          <div className=\"mt-3 h-0.5 bg-timeline-sage/20 rounded-full overflow-hidden\">\n            <motion.div\n              className=\"h-full bg-gradient-to-r from-timeline-sage to-timeline-terracotta\"\n              initial={{ width: \"0%\" }}\n              animate={{ \n                width: `${((activeIndex + 1) / events.length) * 100}%` \n              }}\n              transition={{ duration: 0.5, ease: \"easeOut\" }}\n            />\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5514},"client/src/components/salary-heatmap.tsx":{"content":"import { ResponsiveContainer, Tooltip } from 'recharts';\n\n// Define types for the data structure\ninterface SalaryRange {\n  min: number;\n  max: number;\n}\n\ninterface RegionData {\n  region: string;\n  junior: SalaryRange;\n  mid: SalaryRange;\n  senior: SalaryRange;\n  lead: SalaryRange;\n}\n\n// Realistic salary data for 2024\nconst salaryData: RegionData[] = [\n  {\n    region: 'US West Coast',\n    junior: { min: 75, max: 95 },\n    mid: { min: 110, max: 140 },\n    senior: { min: 150, max: 180 },\n    lead: { min: 180, max: 250 }\n  },\n  {\n    region: 'US East Coast',\n    junior: { min: 70, max: 85 },\n    mid: { min: 95, max: 120 },\n    senior: { min: 130, max: 160 },\n    lead: { min: 160, max: 220 }\n  },\n  {\n    region: 'Europe',\n    junior: { min: 45, max: 60 },\n    mid: { min: 65, max: 85 },\n    senior: { min: 90, max: 120 },\n    lead: { min: 120, max: 160 }\n  },\n  {\n    region: 'Asia',\n    junior: { min: 25, max: 40 },\n    mid: { min: 45, max: 65 },\n    senior: { min: 70, max: 95 },\n    lead: { min: 95, max: 130 }\n  },\n  {\n    region: 'Canada',\n    junior: { min: 55, max: 70 },\n    mid: { min: 75, max: 95 },\n    senior: { min: 100, max: 130 },\n    lead: { min: 130, max: 170 }\n  },\n  {\n    region: 'Australia',\n    junior: { min: 60, max: 75 },\n    mid: { min: 80, max: 100 },\n    senior: { min: 110, max: 140 },\n    lead: { min: 140, max: 180 }\n  }\n];\n\nconst seniorityLevels = [\n  { key: 'junior', label: 'Junior (0-2 years)' },\n  { key: 'mid', label: 'Mid (3-5 years)' },\n  { key: 'senior', label: 'Senior (6-10 years)' },\n  { key: 'lead', label: 'Lead (10+ years)' }\n];\n\n// Function to get color based on salary average - IBM Carbon palette\nconst getSalaryColor = (min: number, max: number): string => {\n  const avg = (min + max) / 2;\n  const maxSalary = 250;\n  const intensity = avg / maxSalary;\n  \n  // Create gradient using IBM Carbon blue shades\n  if (intensity < 0.2) {\n    return 'hsl(217, 40%, 85%)'; // Very light blue\n  } else if (intensity < 0.3) {\n    return 'hsl(217, 50%, 75%)';\n  } else if (intensity < 0.4) {\n    return 'hsl(217, 60%, 65%)';\n  } else if (intensity < 0.5) {\n    return 'hsl(217, 70%, 60%)';\n  } else if (intensity < 0.6) {\n    return 'hsl(217, 80%, 55%)'; // IBM Carbon blue\n  } else if (intensity < 0.7) {\n    return 'hsl(217, 90%, 50%)';\n  } else if (intensity < 0.8) {\n    return 'hsl(220, 100%, 46%)'; // IBM Carbon blue hover\n  } else {\n    return 'hsl(220, 100%, 40%)'; // Deepest blue for highest values\n  }\n};\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload }: any) => {\n  if (active && payload && payload.length) {\n    const { region, level, min, max, levelLabel } = payload[0].payload;\n    return (\n      <div className=\"bg-card dark:bg-card border border-primary/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200\">\n        <p className=\"font-semibold text-foreground mb-1\">{region}</p>\n        <p className=\"text-sm text-foreground/90 mb-2\">{levelLabel}</p>\n        <p className=\"text-sm text-foreground/90\">\n          Salary Range:\n          <span className=\"ml-2 font-mono font-semibold text-primary\">\n            ${min}k - ${max}k\n          </span>\n        </p>\n        <p className=\"text-xs text-muted-foreground mt-2\">\n          Average: ${Math.round((min + max) / 2)}k USD\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default function SalaryHeatmap() {\n  // Transform data into heatmap cells\n  const heatmapCells = salaryData.flatMap((region) =>\n    seniorityLevels.map((level) => {\n      const salaryRange = region[level.key as keyof RegionData] as SalaryRange;\n      return {\n        region: region.region,\n        level: level.key,\n        levelLabel: level.label,\n        min: salaryRange.min,\n        max: salaryRange.max,\n        color: getSalaryColor(salaryRange.min, salaryRange.max)\n      };\n    })\n  );\n\n  return (\n    <div className=\"w-full py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-primary/[0.02] dark:bg-primary/[0.05] rounded-xl border border-primary/10 p-6 transition-all duration-300 hover:border-primary/20\">\n          <div className=\"mb-6\">\n            <span className=\"text-muted-foreground uppercase tracking-wider text-xs font-mono\">Fig 03</span>\n            <h3 className=\"text-2xl font-semibold font-display text-foreground mt-1\">\n              UX/UI Designer Salaries by Region and Experience\n            </h3>\n            <p className=\"text-sm text-muted-foreground mt-2\">\n              Annual compensation in USD (2024 market data)\n            </p>\n          </div>\n          \n          {/* Heatmap Grid */}\n          <div className=\"overflow-x-auto\">\n            <div className=\"min-w-[600px]\">\n              {/* Column Headers */}\n              <div className=\"grid grid-cols-5 gap-2 mb-3\">\n                <div className=\"text-xs text-muted-foreground font-mono\"></div>\n                {seniorityLevels.map((level) => (\n                  <div key={level.key} className=\"text-xs text-muted-foreground font-mono text-center\">\n                    {level.label}\n                  </div>\n                ))}\n              </div>\n              \n              {/* Heatmap Rows */}\n              {salaryData.map((region) => (\n                <div key={region.region} className=\"grid grid-cols-5 gap-2 mb-2\">\n                  {/* Row Label */}\n                  <div className=\"text-sm text-foreground/90 flex items-center pr-2 font-medium\">\n                    {region.region}\n                  </div>\n                  \n                  {/* Cells */}\n                  {seniorityLevels.map((level) => {\n                    const salaryRange = region[level.key as keyof RegionData] as SalaryRange;\n                    const color = getSalaryColor(salaryRange.min, salaryRange.max);\n                    const avg = Math.round((salaryRange.min + salaryRange.max) / 2);\n                    \n                    return (\n                      <div\n                        key={`${region.region}-${level.key}`}\n                        className=\"relative group cursor-pointer transition-all duration-200 hover:scale-105\"\n                        style={{ backgroundColor: color }}\n                      >\n                        <div className=\"p-3 rounded text-center\">\n                          <div className=\"text-xs font-mono text-white dark:text-white font-semibold\">\n                            ${avg}k\n                          </div>\n                          <div className=\"text-[10px] text-white/80 dark:text-white/80 mt-1\">\n                            ${salaryRange.min}-${salaryRange.max}k\n                          </div>\n                        </div>\n                        \n                        {/* Hover Tooltip */}\n                        <div className=\"absolute z-10 hidden group-hover:block bottom-full left-1/2 -translate-x-1/2 mb-2 w-48\">\n                          <div className=\"bg-card dark:bg-card border border-primary/40 rounded-lg px-3 py-2 shadow-xl\">\n                            <p className=\"text-xs font-semibold text-foreground\">{region.region}</p>\n                            <p className=\"text-xs text-foreground/80 mt-1\">{level.label}</p>\n                            <p className=\"text-xs text-primary font-mono mt-1\">\n                              ${salaryRange.min}k - ${salaryRange.max}k USD\n                            </p>\n                          </div>\n                          <div className=\"absolute top-full left-1/2 -translate-x-1/2 -mt-1\">\n                            <div className=\"w-0 h-0 border-l-[6px] border-l-transparent border-r-[6px] border-r-transparent border-t-[6px] border-t-card\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Legend */}\n          <div className=\"mt-8 flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-xs text-muted-foreground\">Lower Salaries</span>\n              <div className=\"flex\">\n                {[\n                  'hsl(217, 40%, 85%)', 'hsl(217, 50%, 75%)', 'hsl(217, 60%, 65%)', 'hsl(217, 70%, 60%)',\n                  'hsl(217, 80%, 55%)', 'hsl(217, 90%, 50%)', 'hsl(220, 100%, 46%)', 'hsl(220, 100%, 40%)'\n                ].map((color, index) => (\n                  <div\n                    key={index}\n                    className=\"w-8 h-4\"\n                    style={{ backgroundColor: color }}\n                  />\n                ))}\n              </div>\n              <span className=\"text-xs text-muted-foreground\">Higher Salaries</span>\n            </div>\n          </div>\n          \n          <p className=\"text-xs text-muted-foreground mt-6 font-mono\">\n            Source: Industry salary surveys and recruitment data (2024). All values in USD thousands.\n          </p>\n          \n          {/* Additional Insights */}\n          <div className=\"mt-6 pt-6 border-t border-primary/10\">\n            <h4 className=\"text-sm font-semibold text-foreground/90 mb-3\">Key Insights:</h4>\n            <ul className=\"space-y-2 text-xs text-muted-foreground\">\n              <li className=\"flex items-start\">\n                <span className=\"text-primary mr-2\">•</span>\n                US West Coast leads in compensation across all experience levels, with Lead roles reaching up to $250k\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-primary mr-2\">•</span>\n                Asia shows the lowest compensation ranges, reflecting cost of living and market differences\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-primary mr-2\">•</span>\n                Experience significantly impacts compensation, with Lead roles earning 2-3x Junior salaries in most regions\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-primary mr-2\">•</span>\n                Europe and Canada show similar mid-level compensation despite geographic differences\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":10275},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/sticky-navigation.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { Download, Menu, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport ShareButtons from \"./share-buttons\";\nimport BylineStrip from \"./byline-strip\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function StickyNavigation() {\n  const [isVisible, setIsVisible] = useState(false);\n  const [activeSection, setActiveSection] = useState<string>(\"\");\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const scrollTimeout = useRef<NodeJS.Timeout>();\n\n  const sections = [\n    { id: \"origins\", label: \"Origins\" },\n    { id: \"revolution\", label: \"Revolution\" },\n    { id: \"formalization\", label: \"Formalization\" },\n    { id: \"tools\", label: \"Tools\" },\n    { id: \"economics\", label: \"Economics\" },\n    { id: \"claims\", label: \"Claims\" },\n  ];\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      const heroHeight = window.innerHeight;\n      \n      // Show navigation after scrolling past hero section\n      const shouldBeVisible = currentScrollY > heroHeight;\n      setIsVisible(shouldBeVisible);\n\n      // Update active section based on scroll position\n      const sectionElements = sections.map(section => ({\n        id: section.id,\n        element: document.getElementById(section.id)\n      })).filter(item => item.element);\n\n      const currentSection = sectionElements.find(section => {\n        const rect = section.element!.getBoundingClientRect();\n        return rect.top <= 100 && rect.bottom >= 100;\n      });\n\n      if (currentSection) {\n        setActiveSection(currentSection.id);\n      }\n    };\n\n    const throttledHandleScroll = () => {\n      if (scrollTimeout.current) {\n        clearTimeout(scrollTimeout.current);\n      }\n      scrollTimeout.current = setTimeout(handleScroll, 10);\n    };\n\n    window.addEventListener(\"scroll\", throttledHandleScroll);\n    handleScroll(); // Initial check\n    \n    return () => {\n      window.removeEventListener(\"scroll\", throttledHandleScroll);\n      if (scrollTimeout.current) {\n        clearTimeout(scrollTimeout.current);\n      }\n    };\n  }, []);\n\n  const handlePdfDownload = () => {\n    window.print();\n  };\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      const offset = 80; // Height of sticky nav\n      const elementPosition = element.getBoundingClientRect().top + window.scrollY;\n      const offsetPosition = elementPosition - offset;\n\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: \"smooth\"\n      });\n      \n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {/* Sticky Navigation Bar */}\n      <nav\n        className={cn(\n          \"fixed top-0 left-0 right-0 z-40 transition-all duration-300\",\n          \"bg-background/90 backdrop-blur-md border-b border-accent/20\",\n          isVisible ? \"translate-y-0 opacity-100\" : \"-translate-y-full opacity-0\"\n        )}\n        data-testid=\"sticky-navigation\"\n      >\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            {/* Left: Branding and Condensed Byline */}\n            <div className=\"flex items-center space-x-4 flex-shrink-0\">\n              <div className=\"flex items-center space-x-2\">\n                <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 2L2 7L12 12L22 7L12 2Z\" stroke=\"#8AA97A\" strokeWidth=\"2\" strokeLinejoin=\"round\"/>\n                  <path d=\"M2 17L12 22L22 17\" stroke=\"#8AA97A\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                  <path d=\"M2 12L12 17L22 12\" stroke=\"#8AA97A\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                </svg>\n                <span className=\"font-display font-semibold text-sm sm:text-base\">UX/UI Timeline</span>\n              </div>\n              {/* Condensed Byline - Hidden on mobile */}\n              <div className=\"hidden md:block border-l border-accent/20 pl-4\">\n                <BylineStrip variant=\"condensed\" showScrollProgress={true} />\n              </div>\n            </div>\n\n            {/* Center: Section Navigation - Desktop */}\n            <nav className=\"hidden lg:flex items-center space-x-1 xl:space-x-2\">\n              {sections.map((section) => (\n                <button\n                  key={section.id}\n                  onClick={() => scrollToSection(section.id)}\n                  className={cn(\n                    \"px-3 py-2 text-sm font-medium transition-all duration-200\",\n                    \"hover:text-accent\",\n                    activeSection === section.id\n                      ? \"text-accent border-b-2 border-accent\"\n                      : \"text-muted-foreground hover:text-foreground\"\n                  )}\n                  data-testid={`nav-anchor-${section.id}`}\n                >\n                  {section.label}\n                </button>\n              ))}\n            </nav>\n\n            {/* Right: Actions - Desktop */}\n            <div className=\"hidden sm:flex items-center space-x-3\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                className=\"hover-lift border-accent/30 hover:border-accent hover:bg-accent/10 transition-all\"\n                onClick={handlePdfDownload}\n                data-testid=\"button-sticky-pdf-download\"\n              >\n                <span className=\"flex items-center space-x-2\">\n                  <span>PDF</span>\n                  <Download className=\"w-4 h-4\" />\n                </span>\n              </Button>\n              <ShareButtons />\n            </div>\n\n            {/* Mobile Menu Button */}\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"sm:hidden p-2 rounded-lg hover:bg-accent/10 transition-colors\"\n              data-testid=\"button-mobile-menu\"\n              aria-label={isMobileMenuOpen ? \"Close menu\" : \"Open menu\"}\n            >\n              {isMobileMenuOpen ? (\n                <X className=\"w-5 h-5\" />\n              ) : (\n                <Menu className=\"w-5 h-5\" />\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        <div\n          className={cn(\n            \"sm:hidden overflow-hidden transition-all duration-300\",\n            \"bg-background/95 backdrop-blur-md border-t border-accent/20\",\n            isMobileMenuOpen ? \"max-h-96\" : \"max-h-0\"\n          )}\n        >\n          <div className=\"px-4 py-4 space-y-3\">\n            {/* Mobile Navigation Links */}\n            {sections.map((section) => (\n              <button\n                key={section.id}\n                onClick={() => scrollToSection(section.id)}\n                className={cn(\n                  \"block w-full text-left px-3 py-2 rounded-lg text-sm font-medium transition-all\",\n                  \"hover:bg-accent/10\",\n                  activeSection === section.id\n                    ? \"text-accent bg-accent/10\"\n                    : \"text-muted-foreground hover:text-foreground\"\n                )}\n                data-testid={`nav-mobile-anchor-${section.id}`}\n              >\n                {section.label}\n              </button>\n            ))}\n            \n            {/* Mobile Actions */}\n            <div className=\"flex gap-3 pt-3 border-t border-accent/20\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                className=\"flex-1 border-accent/30 hover:border-accent hover:bg-accent/10\"\n                onClick={handlePdfDownload}\n                data-testid=\"button-mobile-pdf-download\"\n              >\n                <span className=\"flex items-center justify-center space-x-2\">\n                  <span>PDF</span>\n                  <Download className=\"w-4 h-4\" />\n                </span>\n              </Button>\n              <div className=\"flex-1\">\n                <ShareButtons />\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Spacer to prevent content jump when nav becomes sticky */}\n      {isVisible && <div className=\"h-16\" />}\n    </>\n  );\n}","size_bytes":8274},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/fade-in-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useInView } from \"framer-motion\";\nimport { useRef, ReactNode } from \"react\";\n\ninterface FadeInSectionProps {\n  children: ReactNode;\n  delay?: number;\n  direction?: \"up\" | \"down\" | \"left\" | \"right\" | \"none\";\n  className?: string;\n}\n\nexport default function FadeInSection({ \n  children, \n  delay = 0, \n  direction = \"up\",\n  className = \"\"\n}: FadeInSectionProps) {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: true, margin: \"-100px\" });\n\n  const directionOffset = {\n    up: { y: 40 },\n    down: { y: -40 },\n    left: { x: 40 },\n    right: { x: -40 },\n    none: {}\n  };\n\n  return (\n    <motion.div\n      ref={ref}\n      initial={{ \n        opacity: 0, \n        ...directionOffset[direction]\n      }}\n      animate={isInView ? { \n        opacity: 1, \n        x: 0, \n        y: 0 \n      } : {}}\n      transition={{ \n        duration: 0.7, \n        delay,\n        ease: [0.21, 0.47, 0.32, 0.98]\n      }}\n      className={className}\n    >\n      {children}\n    </motion.div>\n  );\n}\n","size_bytes":1047},"client/src/components/american-flag.tsx":{"content":"import { cn } from \"@/lib/utils\";\n\ninterface AmericanFlagProps {\n  className?: string;\n}\n\nexport default function AmericanFlag({ className }: AmericanFlagProps) {\n  return (\n    <svg \n      className={cn(\"inline-block\", className)} \n      viewBox=\"0 0 120 80\" \n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      {/* Flag stripes */}\n      <rect x=\"0\" y=\"0\" width=\"120\" height=\"80\" fill=\"#f4f4e4\"/>\n      <rect x=\"0\" y=\"6.15\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"18.46\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"30.77\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"43.08\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"55.38\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"67.69\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      \n      {/* Canton */}\n      <rect x=\"0\" y=\"0\" width=\"48\" height=\"43.08\" fill=\"#2a2a2a\"/>\n      \n      {/* Stars (simplified grid pattern) */}\n      <g fill=\"#f4f4e4\">\n        <circle cx=\"6\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"14\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"22\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"30\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"38\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"10\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"18\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"26\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"34\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"42\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"6\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"14\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"22\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"30\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"38\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"10\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"18\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"26\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"34\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"42\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"6\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"14\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"22\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"30\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"38\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"10\" cy=\"35\" r=\"1.5\"/>\n        <circle cx=\"18\" cy=\"35\" r=\"1.5\"/>\n        <circle cx=\"26\" cy=\"35\" r=\"1.5\"/>\n        <circle cx=\"34\" cy=\"35\" r=\"1.5\"/>\n        <circle cx=\"42\" cy=\"35\" r=\"1.5\"/>\n      </g>\n    </svg>\n  );\n}\n","size_bytes":2345},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/industry-economics-section.tsx":{"content":"import { Building2, Users, TrendingUp, Globe, Briefcase, DollarSign, Target, Sparkles } from 'lucide-react';\nimport { SiApple, SiGoogle, SiMeta, SiAmazon, SiAdobe } from 'react-icons/si';\nimport PullQuote from '@/components/pull-quote';\nimport DataCallout from '@/components/data-callout';\nimport IndustryTimelineScatter from '@/components/industry-timeline-scatter';\n\nexport default function IndustryEconomicsSection() {\n  return (\n    <section className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\" data-testid=\"section-industry-economics\">\n      <div className=\"max-w-6xl mx-auto space-y-16\">\n        {/* Section Header */}\n        <div className=\"text-center space-y-4\">\n          <h2 className=\"font-display text-3xl sm:text-4xl lg:text-5xl font-bold leading-tight\" data-testid=\"text-industry-heading\">\n            Industry & Economics\n          </h2>\n          <p className=\"text-base sm:text-lg text-foreground/70 max-w-3xl mx-auto\">\n            How the UX/UI profession transformed from a single role at Apple to a \n            $18 billion global industry with half a million professionals\n          </p>\n        </div>\n\n        {/* Industry Timeline Scatter Plot */}\n        <div className=\"mb-20\">\n          <IndustryTimelineScatter />\n        </div>\n\n        {/* Company Evolution Timeline */}\n        <div className=\"space-y-8\">\n          <div className=\"border-l-2 border-accent/30 pl-8\">\n            <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-2\">\n              Company Evolution: Building Design Empires\n            </h3>\n            <p className=\"text-sm sm:text-base text-foreground/70 mb-8\">\n              From single designers to thousand-person teams in three decades\n            </p>\n          </div>\n\n          <div className=\"grid gap-6\">\n            {/* Apple */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiApple className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-base sm:text-lg\">Apple</h4>\n                    <span className=\"text-xs sm:text-sm text-muted-foreground font-mono\">(1993-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">1993:</span> Don Norman becomes first \"User Experience Architect\" - literally invents the UX title\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2007:</span> iPhone launch with ~50 designers reshapes entire industry\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 500+ designers maintaining design-led culture, Human Interface Guidelines influence millions\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">1 → 500+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <TrendingUp className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">50,000% growth</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Google */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiGoogle className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-base sm:text-lg\">Google</h4>\n                    <span className=\"text-xs sm:text-sm text-muted-foreground font-mono\">(2005-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2005:</span> First dedicated UX team formed with 10 designers\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2014:</span> Material Design launches, becomes industry standard\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 2000+ designers, dedicated UX research labs, AI-first design initiatives\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">10 → 2000+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Building2 className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">5 global UX labs</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Microsoft */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <Building2 className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-base sm:text-lg\">Microsoft</h4>\n                    <span className=\"text-xs sm:text-sm text-muted-foreground font-mono\">(1995-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">1995:</span> Windows 95 UI team of 20 pioneers graphical interfaces\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2012:</span> Metro design language for Windows 8\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 1500+ designers, Fluent Design System across all products\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">20 → 1500+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Sparkles className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">Fluent Design System</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Meta */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiMeta className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-base sm:text-lg\">Facebook/Meta</h4>\n                    <span className=\"text-xs sm:text-sm text-muted-foreground font-mono\">(2006-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2006:</span> First designer hired, focus on \"move fast\" philosophy\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2015:</span> Design team grows to 200, React framework changes frontend\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 800+ designers working on social, VR/AR, and metaverse\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">1 → 800+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Target className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">VR/AR focus</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Amazon */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiAmazon className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-base sm:text-lg\">Amazon</h4>\n                    <span className=\"text-xs sm:text-sm text-muted-foreground font-mono\">(1998-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">1998:</span> Early web designers focus on e-commerce usability\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2014:</span> Alexa team pioneers voice UI design\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 1000+ designers across retail, AWS, devices, \"customer obsession\"\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">5 → 1000+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Briefcase className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">Customer obsession</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Adobe */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiAdobe className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-base sm:text-lg\">Adobe</h4>\n                    <span className=\"text-xs sm:text-sm text-muted-foreground font-mono\">(1990s-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">1990s:</span> Tool maker for designers, Photoshop dominates\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2013:</span> Creative Cloud subscription model, XD for UX design\n                    </p>\n                    <p className=\"text-sm sm:text-base text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> Platform for designers, AI-powered Creative Cloud, Figma acquisition\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Building2 className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">Tools → Platform</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <DollarSign className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-xs sm:text-sm font-mono text-accent\">$20B Figma deal</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Role Evolution & Specialization */}\n        <div className=\"space-y-8\">\n          <div className=\"border-l-2 border-accent/30 pl-8\">\n            <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-2\">\n              Role Evolution & Specialization\n            </h3>\n            <p className=\"text-sm sm:text-base text-foreground/70\">\n              From webmasters to specialized design engineers\n            </p>\n          </div>\n\n          {/* Role Branching Diagram */}\n          <div className=\"bg-card/50 border border-border rounded-lg p-8\">\n            <div className=\"space-y-8\">\n              {/* 1990s */}\n              <div className=\"relative\">\n                <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-accent/30\"></div>\n                <div className=\"pl-8\">\n                  <div className=\"flex items-center gap-4 mb-3\">\n                    <span className=\"font-mono text-xs sm:text-sm text-accent font-semibold\">1990s</span>\n                    <div className=\"h-px bg-accent/20 flex-1\"></div>\n                  </div>\n                  <div className=\"flex flex-wrap gap-3\">\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-xs sm:text-sm\">Webmaster</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-xs sm:text-sm\">Graphic Designer</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* 2000s */}\n              <div className=\"relative\">\n                <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-accent/30\"></div>\n                <div className=\"pl-8\">\n                  <div className=\"flex items-center gap-4 mb-3\">\n                    <span className=\"font-mono text-xs sm:text-sm text-accent font-semibold\">2000s</span>\n                    <div className=\"h-px bg-accent/20 flex-1\"></div>\n                  </div>\n                  <div className=\"flex flex-wrap gap-3\">\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-xs sm:text-sm\">Information Architect</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-xs sm:text-sm\">Interaction Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-xs sm:text-sm\">Visual Designer</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* 2010s */}\n              <div className=\"relative\">\n                <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-accent/30\"></div>\n                <div className=\"pl-8\">\n                  <div className=\"flex items-center gap-4 mb-3\">\n                    <span className=\"font-mono text-accent font-semibold\">2010s</span>\n                    <div className=\"h-px bg-accent/20 flex-1\"></div>\n                  </div>\n                  <div className=\"flex flex-wrap gap-3\">\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">UX Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">UI Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">UX Researcher</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">UX Writer</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* 2020s */}\n              <div className=\"relative\">\n                <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-accent/30\"></div>\n                <div className=\"pl-8\">\n                  <div className=\"flex items-center gap-4 mb-3\">\n                    <span className=\"font-mono text-accent font-semibold\">2020s</span>\n                    <div className=\"h-px bg-accent/20 flex-1\"></div>\n                  </div>\n                  <div className=\"flex flex-wrap gap-3\">\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">Product Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">Design Systems Engineer</span>\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">UX Engineer</span>\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">Conversation Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">AR/VR Designer</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Economic Growth Data */}\n        <div className=\"space-y-8\">\n          <div className=\"border-l-2 border-accent/30 pl-8\">\n            <h3 className=\"font-display text-2xl sm:text-3xl font-semibold mb-2\">\n              Economic Impact & Growth\n            </h3>\n            <p className=\"text-foreground/70\">\n              The financial transformation of design from cost center to profit driver\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Design Team Sizes */}\n            <div className=\"bg-card/50 border border-border rounded-lg p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h4 className=\"font-semibold text-lg\">Team Size Evolution</h4>\n                <Users className=\"w-5 h-5 text-accent\" />\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">1995</span>\n                  <span className=\"font-mono font-semibold text-accent\">2-3 designers</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2005</span>\n                  <span className=\"font-mono font-semibold text-accent\">10-20 designers</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2015</span>\n                  <span className=\"font-mono font-semibold text-accent\">30-100 designers</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2024</span>\n                  <span className=\"font-mono font-semibold text-accent\">50-200 designers</span>\n                </div>\n              </div>\n              <div className=\"mt-4 pt-4 border-t border-border\">\n                <p className=\"text-xs text-foreground/60\">Average for mid-to-large tech companies</p>\n              </div>\n            </div>\n\n            {/* Budget Allocation */}\n            <div className=\"bg-card/50 border border-border rounded-lg p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h4 className=\"font-semibold text-lg\">Design Budget Growth</h4>\n                <DollarSign className=\"w-5 h-5 text-accent\" />\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">1990s</span>\n                  <span className=\"font-mono font-semibold text-accent\">1% of tech budget</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2000s</span>\n                  <span className=\"font-mono font-semibold text-accent\">2-3% of tech budget</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2010s</span>\n                  <span className=\"font-mono font-semibold text-accent\">5-8% of tech budget</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2020s</span>\n                  <span className=\"font-mono font-semibold text-accent\">5-15% of tech budget</span>\n                </div>\n              </div>\n              <div className=\"mt-4 pt-4 border-t border-border\">\n                <p className=\"text-xs text-foreground/60\">Percentage of total technology investment</p>\n              </div>\n            </div>\n\n            {/* ROI of Design */}\n            <div className=\"bg-card/50 border border-border rounded-lg p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h4 className=\"font-semibold text-lg\">ROI of Design</h4>\n                <TrendingUp className=\"w-5 h-5 text-accent\" />\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-foreground/90\">\n                    <span className=\"font-semibold text-accent\">2x</span> revenue growth for design-led companies\n                  </p>\n                  <p className=\"text-xs text-foreground/60\">McKinsey Design Index (2018)</p>\n                </div>\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-foreground/90\">\n                    <span className=\"font-semibold text-accent\">32%</span> higher revenue growth\n                  </p>\n                  <p className=\"text-xs text-foreground/60\">Design Management Institute (2015)</p>\n                </div>\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-foreground/90\">\n                    <span className=\"font-semibold text-accent\">56%</span> higher shareholder returns\n                  </p>\n                  <p className=\"text-xs text-foreground/60\">Design Value Index (2020)</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Unicorn Companies */}\n            <div className=\"bg-card/50 border border-border rounded-lg p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h4 className=\"font-semibold text-lg\">Designer-Founded Unicorns</h4>\n                <Sparkles className=\"w-5 h-5 text-accent\" />\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/90\">Airbnb</span>\n                  <span className=\"font-mono text-sm text-accent\">$75B</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/90\">Pinterest</span>\n                  <span className=\"font-mono text-sm text-accent\">$12B</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/90\">Canva</span>\n                  <span className=\"font-mono text-sm text-accent\">$40B</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/90\">Figma</span>\n                  <span className=\"font-mono text-sm text-accent\">$20B</span>\n                </div>\n              </div>\n              <div className=\"mt-4 pt-4 border-t border-border\">\n                <p className=\"text-xs text-foreground/60\">Companies with designer co-founders</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Data Callout for UX Professionals */}\n        <DataCallout\n          value=\"500,000+ UX professionals worldwide\"\n          label=\"From less than 100 people with 'UX' in their job title in 1995 to over half a million professionals today, the field has grown 5,000x in three decades\"\n          type=\"users\"\n        />\n\n        {/* Current Industry State */}\n        <div className=\"space-y-8\">\n          <div className=\"border-l-2 border-accent/30 pl-8\">\n            <h3 className=\"font-display text-2xl sm:text-3xl font-semibold mb-2\">\n              Current Industry State (2024)\n            </h3>\n            <p className=\"text-foreground/70\">\n              The global design profession by the numbers\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <div className=\"bg-gradient-to-br from-accent/20 to-accent/10 border border-accent/30 rounded-lg p-6 text-center\">\n              <Globe className=\"w-8 h-8 text-accent mx-auto mb-3\" />\n              <div className=\"text-3xl font-bold font-mono text-accent mb-1\">500,000+</div>\n              <div className=\"text-sm text-foreground/70\">UX Professionals Worldwide</div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-accent/20 to-accent/10 border border-accent/30 rounded-lg p-6 text-center\">\n              <DollarSign className=\"w-8 h-8 text-accent mx-auto mb-3\" />\n              <div className=\"text-3xl font-bold font-mono text-accent mb-1\">$18B</div>\n              <div className=\"text-sm text-foreground/70\">Design Tools Market</div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-accent/20 to-accent/10 border border-accent/30 rounded-lg p-6 text-center\">\n              <Users className=\"w-8 h-8 text-accent mx-auto mb-3\" />\n              <div className=\"text-3xl font-bold font-mono text-accent mb-1\">1:5-8</div>\n              <div className=\"text-sm text-foreground/70\">Designer to Engineer Ratio</div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-accent/20 to-accent/10 border border-accent/30 rounded-lg p-6 text-center\">\n              <Building2 className=\"w-8 h-8 text-accent mx-auto mb-3\" />\n              <div className=\"text-3xl font-bold font-mono text-accent mb-1\">65%</div>\n              <div className=\"text-sm text-foreground/70\">Remote or Hybrid Work</div>\n            </div>\n          </div>\n\n          <div className=\"bg-accent/5 border border-accent/20 rounded-lg p-6\">\n            <h4 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\n              <Globe className=\"w-5 h-5 text-accent\" />\n              Global Talent Distribution Impact\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-3\">\n                <h5 className=\"font-medium text-foreground/90\">Pre-Pandemic (2019)</h5>\n                <ul className=\"space-y-2 text-sm text-foreground/70\">\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    85% concentrated in tech hubs (SF, NYC, London, Berlin)\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    Limited opportunities outside major cities\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    Salary disparities based on location\n                  </li>\n                </ul>\n              </div>\n              <div className=\"space-y-3\">\n                <h5 className=\"font-medium text-foreground/90\">Post-Pandemic (2024)</h5>\n                <ul className=\"space-y-2 text-sm text-foreground/70\">\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    40% distributed across smaller cities and countries\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    Remote-first companies dominating hiring\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    Location-adjusted but competitive global salaries\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Future Outlook */}\n        <div className=\"bg-gradient-to-br from-accent/10 to-transparent border border-accent/30 rounded-lg p-8\">\n          <h3 className=\"font-display text-2xl font-semibold mb-4\">The Next Decade: 2025-2035</h3>\n          <div className=\"space-y-4 text-foreground/80\">\n            <p className=\"text-lg leading-relaxed\">\n              As we enter the AI era, the UX/UI profession stands at another inflection point. \n              The industry that grew from one person to half a million professionals now faces \n              its greatest transformation yet.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-6\">\n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-accent\">AI Integration</h4>\n                <p className=\"text-sm text-foreground/70\">\n                  Design tools becoming AI-powered co-creators, not just productivity enhancers\n                </p>\n              </div>\n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-accent\">New Interfaces</h4>\n                <p className=\"text-sm text-foreground/70\">\n                  Spatial computing, brain-computer interfaces, and ambient computing\n                </p>\n              </div>\n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-accent\">Ethical Design</h4>\n                <p className=\"text-sm text-foreground/70\">\n                  Growing focus on responsible AI, privacy, and human-centered ethics\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":32977},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/introduction-section.tsx":{"content":"export default function IntroductionSection() {\n  return (\n    <section \n      id=\"introduction\" \n      className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12 bg-[#f5f2ed]\" \n      data-testid=\"section-introduction\"\n    >\n      <div className=\"max-w-5xl mx-auto\">\n        <div className=\"space-y-12\">\n          {/* Section Label */}\n          <div>\n            <span \n              className=\"text-[#6b6b6b] uppercase tracking-[0.2em] text-xs sm:text-sm font-sans font-medium\" \n              data-testid=\"label-introduction\"\n            >\n              Introduction\n            </span>\n          </div>\n          \n          {/* Headline */}\n          <div className=\"space-y-6\">\n            <h2 \n              className=\"font-display text-3xl sm:text-4xl lg:text-5xl font-normal leading-[1.1] text-black\" \n              data-testid=\"text-intro-heading\"\n            >\n              As professionals, we are in an undeclared state of confusion.\n            </h2>\n            \n            {/* Horizontal separator line */}\n            <div className=\"w-full h-[1px] bg-black/20\" />\n          </div>\n\n          {/* Body Text */}\n          <div className=\"space-y-6 text-black/90\">\n            <p className=\"text-sm sm:text-base leading-[1.8] text-justify\">\n              Around 2025, Indian managers claim 20-25 years of UX/UI experience while staying in India itself. Hiring managers validate impossible professional histories, and senior leaders inflate their backgrounds by citing roles that didn't exist. We have interns with more authentic experience than self-proclaimed \"experts,\" 1,000+ false LinkedIn profiles claiming timelines that predate UX team formations in their own companies, and an unprecedented proliferation of fabricated credentials.\n            </p>\n\n            <p className=\"text-sm sm:text-base leading-[1.8] text-justify\">\n              This is a hot war against professional integrity. The industry has empirically lost credibility. We must prove with mathematical precision why these claims are impossible—particularly for managers who stayed in India, working at companies like TCS, Wipro, Infosys, Tech Mahindra, Google India, Apple India, and Microsoft India.\n            </p>\n\n            <p className=\"text-sm sm:text-base leading-[1.8] text-justify\">\n              We have a peer problem: Geographic and timeline impossibility. UX/UI in India began experimentally in the late 1990s during the Y2K boom, with formal roles emerging around 2000. Maximum possible experience for someone starting in India: 25 years (2000-2025), but only for pioneers in experimental roles—statistically rare. For managers claiming 20-25 years at Infosys, Wipro, or Google India, where UX teams formed in 2014, 2014, and 2008 respectively, the mathematics proves impossibility. In 1993, Don Norman was the only person globally with \"User Experience\" in his job title. Today, thousands of Indian professionals claim experience predating not just the field's global existence, but India's regional adoption.\n            </p>\n\n            <p className=\"text-sm sm:text-base leading-[1.8] text-justify\">\n              Given these claims about 20-25 years of UX experience in Indian service-based companies and tech giants operating in India, it would be reasonable to wonder: what does the data actually prove?\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3405},"client/src/components/curved-tool-timeline.tsx":{"content":"import { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Card } from \"@/components/ui/card\";\nimport { \n  Layers, \n  Palette, \n  Code2, \n  Share2, \n  Component,\n  Brush,\n  Globe,\n  PenTool,\n  Package,\n  Box,\n  Sparkles,\n  GitBranch,\n  Cloud,\n  FileCode\n} from \"lucide-react\";\n\ninterface Tool {\n  id: string;\n  name: string;\n  year: string;\n  position: { x: number; y: number };\n  icon: React.ReactNode;\n  description: string;\n  category: string;\n}\n\ninterface CurvedToolTimelineProps {\n  title?: string;\n  description?: string;\n}\n\ninterface ToolConnection {\n  from: string;\n  to: string;\n  label: string;\n  color: string;\n}\n\nexport default function CurvedToolTimeline({ title, description }: CurvedToolTimelineProps) {\n  const [hoveredTool, setHoveredTool] = useState<string | null>(null);\n  const [selectedTool, setSelectedTool] = useState<string | null>(null);\n  const [activeCategories, setActiveCategories] = useState<Set<string>>(new Set());\n\n  const toolConnections: ToolConnection[] = [\n    { from: \"photoshop\", to: \"flash\", label: \"Graphics Evolution\", color: \"hsl(88, 16%, 53%)\" },\n    { from: \"flash\", to: \"fireworks\", label: \"Graphics Evolution\", color: \"hsl(88, 16%, 53%)\" },\n    { from: \"photoshop\", to: \"fireworks\", label: \"Adobe Graphics\", color: \"hsl(24, 30%, 58%)\" },\n    { from: \"fireworks\", to: \"adobexd\", label: \"Adobe Suite\", color: \"hsl(24, 30%, 58%)\" },\n    { from: \"sketch\", to: \"figma\", label: \"UI Design Evolution\", color: \"hsl(56, 24%, 82%)\" },\n    { from: \"sketch\", to: \"adobexd\", label: \"UI Tools\", color: \"hsl(56, 24%, 82%)\" },\n    { from: \"balsamiq\", to: \"invision\", label: \"Prototyping\", color: \"hsl(48, 18%, 75%)\" },\n    { from: \"invision\", to: \"framer\", label: \"Advanced Prototyping\", color: \"hsl(48, 18%, 75%)\" },\n    { from: \"invision\", to: \"figma\", label: \"Collaboration\", color: \"hsl(120, 5%, 8%)\" },\n    { from: \"figma\", to: \"penpot\", label: \"Open Collaboration\", color: \"hsl(120, 5%, 8%)\" },\n    { from: \"sketch\", to: \"abstract\", label: \"Version Control\", color: \"hsl(24, 30%, 58%)\" }\n  ];\n\n  const tools: Tool[] = [\n    {\n      id: \"photoshop\",\n      name: \"Photoshop\",\n      year: \"1990\",\n      position: { x: 8, y: 50 },\n      icon: <Brush className=\"w-5 h-5\" />,\n      description: \"Raster graphics editor adapted for web design via image slicing\",\n      category: \"Graphics\"\n    },\n    {\n      id: \"flash\",\n      name: \"Flash\",\n      year: \"1996\",\n      position: { x: 12, y: 48 },\n      icon: <Sparkles className=\"w-5 h-5\" />,\n      description: \"Vector animation and interactive web experiences\",\n      category: \"Animation\"\n    },\n    {\n      id: \"dreamweaver\",\n      name: \"Dreamweaver\",\n      year: \"1997\",\n      position: { x: 16, y: 46 },\n      icon: <FileCode className=\"w-5 h-5\" />,\n      description: \"WYSIWYG HTML editor for visual web design\",\n      category: \"Development\"\n    },\n    {\n      id: \"fireworks\",\n      name: \"Fireworks\",\n      year: \"2005\",\n      position: { x: 24, y: 42 },\n      icon: <Globe className=\"w-5 h-5\" />,\n      description: \"Web graphics tool optimized for web workflow\",\n      category: \"Graphics\"\n    },\n    {\n      id: \"balsamiq\",\n      name: \"Balsamiq\",\n      year: \"2008\",\n      position: { x: 30, y: 40 },\n      icon: <Palette className=\"w-5 h-5\" />,\n      description: \"Low-fidelity rapid prototyping and mockups\",\n      category: \"Wireframing\"\n    },\n    {\n      id: \"sketch\",\n      name: \"Sketch\",\n      year: \"2010\",\n      position: { x: 38, y: 35 },\n      icon: <PenTool className=\"w-5 h-5\" />,\n      description: \"First UI-focused vector design tool for Mac\",\n      category: \"UI Design\"\n    },\n    {\n      id: \"invision\",\n      name: \"InVision\",\n      year: \"2013\",\n      position: { x: 48, y: 32 },\n      icon: <Box className=\"w-5 h-5\" />,\n      description: \"Clickable prototypes and design collaboration\",\n      category: \"Prototyping\"\n    },\n    {\n      id: \"framer\",\n      name: \"Framer\",\n      year: \"2014\",\n      position: { x: 54, y: 30 },\n      icon: <Code2 className=\"w-5 h-5\" />,\n      description: \"Code-based advanced interactions and animations\",\n      category: \"Code & Design\"\n    },\n    {\n      id: \"figma\",\n      name: \"Figma\",\n      year: \"2016\",\n      position: { x: 62, y: 28 },\n      icon: <Cloud className=\"w-5 h-5\" />,\n      description: \"Real-time collaborative cloud-based design\",\n      category: \"Collaboration\"\n    },\n    {\n      id: \"adobexd\",\n      name: \"Adobe XD\",\n      year: \"2017\",\n      position: { x: 68, y: 35 },\n      icon: <Package className=\"w-5 h-5\" />,\n      description: \"All-in-one UX/UI tool with Adobe ecosystem integration\",\n      category: \"UI Design\"\n    },\n    {\n      id: \"abstract\",\n      name: \"Abstract\",\n      year: \"2017\",\n      position: { x: 74, y: 42 },\n      icon: <GitBranch className=\"w-5 h-5\" />,\n      description: \"Version control for designers (Git for design)\",\n      category: \"Version Control\"\n    },\n    {\n      id: \"systems\",\n      name: \"Design Systems\",\n      year: \"2020\",\n      position: { x: 82, y: 55 },\n      icon: <Component className=\"w-5 h-5\" />,\n      description: \"Material, Carbon, Polaris - systematic component libraries\",\n      category: \"Systems\"\n    },\n    {\n      id: \"penpot\",\n      name: \"Penpot\",\n      year: \"2021\",\n      position: { x: 88, y: 68 },\n      icon: <Layers className=\"w-5 h-5\" />,\n      description: \"Open-source collaborative design platform\",\n      category: \"Open Source\"\n    },\n    {\n      id: \"ai\",\n      name: \"AI Tools\",\n      year: \"2023\",\n      position: { x: 92, y: 82 },\n      icon: <Sparkles className=\"w-5 h-5\" />,\n      description: \"Midjourney, DALL-E for AI-augmented design\",\n      category: \"AI\"\n    }\n  ];\n\n  // Get unique categories\n  const categories = Array.from(new Set(tools.map(t => t.category)));\n\n  // Toggle category filter\n  const toggleCategory = (category: string) => {\n    const newCategories = new Set(activeCategories);\n    if (newCategories.has(category)) {\n      newCategories.delete(category);\n    } else {\n      newCategories.add(category);\n    }\n    setActiveCategories(newCategories);\n  };\n\n  // Clear all filters\n  const clearFilters = () => {\n    setActiveCategories(new Set());\n  };\n\n  // Filter visible tools\n  const visibleTools = activeCategories.size === 0 \n    ? tools \n    : tools.filter(t => activeCategories.has(t.category));\n\n  // Generate curved path through visible tool positions\n  const generateCurvePath = () => {\n    if (visibleTools.length === 0) return \"\";\n    \n    const firstTool = visibleTools[0];\n    let path = `M ${firstTool.position.x} ${firstTool.position.y}`;\n    \n    for (let i = 1; i < visibleTools.length; i++) {\n      const curr = visibleTools[i];\n      const prev = visibleTools[i - 1];\n      \n      // Create smooth curve using quadratic bezier\n      const midX = (prev.position.x + curr.position.x) / 2;\n      const controlY = (prev.position.y + curr.position.y) / 2;\n      \n      path += ` Q ${midX} ${controlY}, ${curr.position.x} ${curr.position.y}`;\n    }\n    \n    return path;\n  };\n\n  const activeTool = tools.find(t => t.id === (selectedTool || hoveredTool));\n\n  return (\n    <div className=\"w-full min-h-[600px] bg-background\" data-testid=\"curved-tool-timeline\">\n      {title && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6 }}\n          className=\"mb-12 text-center\"\n        >\n          <h3 className=\"font-display text-2xl sm:text-3xl md:text-4xl font-semibold mb-4\" data-testid=\"timeline-title\">\n            {title}\n          </h3>\n          {description && (\n            <p className=\"text-sm sm:text-base md:text-lg font-sans text-muted-foreground max-w-3xl mx-auto\" data-testid=\"timeline-description\">\n              {description}\n            </p>\n          )}\n        </motion.div>\n      )}\n\n      {/* Category Filters */}\n      <div className=\"mb-8 flex flex-wrap items-center gap-2 sm:gap-3 md:gap-4 justify-center\">\n        <p className=\"text-xs sm:text-sm font-mono text-muted-foreground mr-2\">Filter by:</p>\n        {categories.map(category => (\n          <motion.button\n            key={category}\n            onClick={() => toggleCategory(category)}\n            className={`\n              px-3 sm:px-4 py-1.5 sm:py-2 rounded-full text-xs sm:text-sm font-sans font-medium transition-all\n              ${activeCategories.has(category)\n                ? 'bg-timeline-sage text-background'\n                : 'bg-timeline-sage/20 text-timeline-sage hover:bg-timeline-sage/30'\n              }\n            `}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            data-testid={`filter-${category.toLowerCase().replace(/\\s+/g, '-')}`}\n          >\n            {category}\n          </motion.button>\n        ))}\n        {activeCategories.size > 0 && (\n          <motion.button\n            onClick={clearFilters}\n            className=\"px-3 sm:px-4 py-1.5 sm:py-2 rounded-full text-xs sm:text-sm font-sans font-medium bg-timeline-terracotta/20 text-timeline-terracotta hover:bg-timeline-terracotta/30 transition-all\"\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            data-testid=\"filter-clear\"\n          >\n            Clear Filters\n          </motion.button>\n        )}\n      </div>\n\n      <div className=\"relative w-full overflow-x-auto\">\n        <div className=\"min-w-[1000px] w-full\">\n          {/* SVG Timeline */}\n          <svg\n            viewBox=\"0 0 100 100\"\n            className=\"w-full h-64 sm:h-80 md:h-96\"\n            preserveAspectRatio=\"xMidYMid meet\"\n            data-testid=\"timeline-svg\"\n          >\n            {/* Curved path */}\n            <motion.path\n              d={generateCurvePath()}\n              stroke=\"var(--timeline-sage)\"\n              strokeWidth=\"0.3\"\n              fill=\"none\"\n              strokeDasharray=\"1 1\"\n              initial={{ pathLength: 0 }}\n              whileInView={{ pathLength: 1 }}\n              viewport={{ once: true }}\n              transition={{ duration: 2, ease: \"easeInOut\" }}\n              data-testid=\"timeline-path\"\n            />\n\n            {/* Connection Lines between related tools */}\n            {toolConnections.map((connection, index) => {\n              const fromTool = tools.find(t => t.id === connection.from);\n              const toTool = tools.find(t => t.id === connection.to);\n              \n              if (!fromTool || !toTool) return null;\n\n              // Only show connection if both tools are visible\n              const isFromVisible = visibleTools.includes(fromTool);\n              const isToVisible = visibleTools.includes(toTool);\n              if (!isFromVisible || !isToVisible) return null;\n\n              const isConnectionActive = hoveredTool === connection.from || \n                                        hoveredTool === connection.to || \n                                        selectedTool === connection.from || \n                                        selectedTool === connection.to;\n\n              const midX = (fromTool.position.x + toTool.position.x) / 2;\n              const midY = (fromTool.position.y + toTool.position.y) / 2;\n              const controlY = midY - Math.abs(toTool.position.x - fromTool.position.x) * 0.1;\n\n              const connectionPath = `M ${fromTool.position.x} ${fromTool.position.y} Q ${midX} ${controlY}, ${toTool.position.x} ${toTool.position.y}`;\n\n              return (\n                <motion.path\n                  key={`connection-${connection.from}-${connection.to}`}\n                  d={connectionPath}\n                  stroke={connection.color}\n                  strokeWidth=\"0.2\"\n                  fill=\"none\"\n                  strokeDasharray=\"0.5 1\"\n                  initial={{ opacity: 0 }}\n                  animate={{ \n                    opacity: isConnectionActive ? 0.5 : 0.15,\n                    strokeWidth: isConnectionActive ? 0.3 : 0.2\n                  }}\n                  transition={{ duration: 0.3 }}\n                  data-testid={`connection-${connection.from}-${connection.to}`}\n                />\n              );\n            })}\n\n            {/* Tool dots and labels */}\n            {tools.map((tool, index) => {\n              const isVisible = visibleTools.includes(tool);\n              const opacity = isVisible ? 1 : 0.15;\n              \n              return (\n                <g key={tool.id}>\n                  {/* Connection line to dot */}\n                  <motion.line\n                    x1={tool.position.x}\n                    y1={tool.position.y}\n                    x2={tool.position.x}\n                    y2={tool.position.y - 5}\n                    stroke=\"var(--timeline-sage)\"\n                    strokeWidth=\"0.1\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: isVisible ? 0.3 : 0.1 }}\n                    transition={{ duration: 0.3 }}\n                  />\n\n                  {/* Tool dot */}\n                  <motion.circle\n                    cx={tool.position.x}\n                    cy={tool.position.y}\n                    r={hoveredTool === tool.id || selectedTool === tool.id ? 1.2 : 0.8}\n                    fill={hoveredTool === tool.id || selectedTool === tool.id \n                      ? \"var(--timeline-terracotta)\" \n                      : \"var(--timeline-sage)\"}\n                    className={isVisible ? \"cursor-pointer\" : \"cursor-not-allowed\"}\n                    initial={{ scale: 0, opacity: 0 }}\n                    animate={{ \n                      scale: 1, \n                      opacity: opacity,\n                      transition: { duration: 0.3 }\n                    }}\n                    whileInView={{ scale: 1 }}\n                    viewport={{ once: true }}\n                    transition={{ delay: index * 0.05, type: \"spring\" }}\n                    onMouseEnter={() => isVisible && setHoveredTool(tool.id)}\n                    onMouseLeave={() => setHoveredTool(null)}\n                    onClick={() => isVisible && setSelectedTool(selectedTool === tool.id ? null : tool.id)}\n                    style={{\n                      filter: hoveredTool === tool.id || selectedTool === tool.id \n                        ? \"drop-shadow(0 0 8px var(--timeline-terracotta))\" \n                        : \"none\"\n                    }}\n                    data-testid={`tool-dot-${tool.id}`}\n                  />\n\n                  {/* Tool label */}\n                  <motion.text\n                    x={tool.position.x}\n                    y={tool.position.y - 6}\n                    textAnchor=\"middle\"\n                    className=\"font-mono text-[2.5px] sm:text-[3px] pointer-events-none\"\n                    fill=\"var(--timeline-cream)\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: isVisible ? 1 : 0.2 }}\n                    transition={{ duration: 0.3 }}\n                    data-testid={`tool-label-${tool.id}`}\n                  >\n                    {tool.name}\n                  </motion.text>\n\n                  {/* Year label below */}\n                  <motion.text\n                    x={tool.position.x}\n                    y={tool.position.y + 3}\n                    textAnchor=\"middle\"\n                    className=\"font-mono text-[2px] pointer-events-none\"\n                    fill=\"var(--timeline-sage)\"\n                    fillOpacity=\"0.6\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: isVisible ? 0.6 : 0.15 }}\n                    transition={{ duration: 0.3 }}\n                    data-testid={`tool-year-${tool.id}`}\n                  >\n                    {tool.year}\n                  </motion.text>\n                </g>\n              );\n            })}\n          </svg>\n        </div>\n      </div>\n\n      {/* Tool Detail Card */}\n      <AnimatePresence mode=\"wait\">\n        {activeTool && (\n          <motion.div\n            key={activeTool.id}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{ duration: 0.3 }}\n            className=\"mt-8\"\n          >\n            <Card className=\"p-4 sm:p-6 md:p-8 chart-dark-container border-timeline-sage/30\" data-testid={`tool-detail-${activeTool.id}`}>\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 rounded-lg bg-timeline-sage/10 text-timeline-sage\">\n                  {activeTool.icon}\n                </div>\n                <div className=\"flex-1\">\n                  <div className=\"flex items-baseline gap-3 mb-2\">\n                    <h4 className=\"font-display text-xl sm:text-2xl md:text-3xl font-bold text-timeline-cream\" data-testid=\"detail-tool-name\">\n                      {activeTool.name}\n                    </h4>\n                    <span className=\"text-xs sm:text-sm text-timeline-sage font-mono\" data-testid=\"detail-tool-year\">\n                      {activeTool.year}\n                    </span>\n                    <span className=\"text-[10px] sm:text-xs px-2 py-1 rounded bg-timeline-sage/20 text-timeline-sage\" data-testid=\"detail-tool-category\">\n                      {activeTool.category}\n                    </span>\n                  </div>\n                  <p className=\"font-sans text-xs sm:text-sm md:text-base text-foreground/80 leading-relaxed\" data-testid=\"detail-tool-description\">\n                    {activeTool.description}\n                  </p>\n                </div>\n              </div>\n            </Card>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Legend */}\n      <div className=\"mt-8 flex flex-wrap gap-2 sm:gap-3 md:gap-4 justify-center text-xs sm:text-sm text-muted-foreground\">\n        <div className=\"flex items-center gap-2\" data-testid=\"legend-design-tools\">\n          <div className=\"w-3 h-3 rounded-full bg-timeline-sage\" />\n          <span className=\"font-sans\">Design Tools</span>\n        </div>\n        <div className=\"flex items-center gap-2\" data-testid=\"legend-selected\">\n          <div className=\"w-3 h-3 rounded-full bg-timeline-terracotta\" />\n          <span className=\"font-sans\">Selected/Hover</span>\n        </div>\n        <div className=\"flex items-center gap-2\" data-testid=\"legend-path\">\n          <div className=\"h-0.5 w-8 bg-timeline-sage opacity-30\" style={{ backgroundImage: 'repeating-linear-gradient(90deg, var(--timeline-sage), var(--timeline-sage) 4px, transparent 4px, transparent 8px)' }} />\n          <span className=\"font-sans\">Timeline Path</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":18696},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"attached_assets/ux-ui-history-18theses-style_1759698157803.md":{"content":"# The History of UX/UI Design: A Treatise on Professional Claims\n\n## As professionals, we are in an undeclared state of confusion.\n\n---\n\nAround 2025, hiring managers in India claim 24 years of UX/UI experience, recruiters validate 20-year professional histories, and senior designers inflate their backgrounds by a decade. A decade later, we have interns with more authentic experience than self-proclaimed \"experts,\" 1,000+ false LinkedIn profiles claiming impossible timelines, and an unprecedented proliferation of fabricated UX credentials.\n\nThis is a hot war against professional integrity. The industry has empirically lost credibility. We must respond to this misinformation with facts.\n\nWe have a peer problem: **Mathematical impossibility**. \"Senior UX/UI Designer\" is a euphemism to avoid the embarrassment of acknowledging that the profession is younger than claimed. In 1993, Don Norman was the only person with \"User Experience\" in his job title. Today, thousands claim experience predating the field's existence. The UX/UI industry requires historical accuracy, or it will lose credibility and plunge hiring into darkness under fraudulent resumes.\n\nGiven the vast claims we have seen about experience in these decades of digital transformation, it would be reasonable to wonder: **what went wrong?**\n\n---\n\n## SECTION 1\n\n### The Last Computer and Great Interface Revolution\n\nIn 1973, after the mainframe era, Xerox wanted a **Personal Computer Revolution** and GUI development was pioneered by their PARC lab. The lab held demonstrations to show what computing could be—the so-called \"Alto Demo\"—to tell the industry that text-only interfaces would not survive. Today, we have modern UI.\n\n**FIG 01: Corporate Evolution in the Tech Sector**\n\nThe most important consequence of the Alto wasn't just a better computer interface, but the **coupling of human psychology to computing** and the rise of **Human-Computer Interaction**. Innovation bred creativity and brought in the brilliant engineers and designers. This was the **Great Interface Revolution** of the computing industry.\n\nBefore the GUI revolution, only **3% of computer users** were non-technical. The vast majority of computing required programming skills and text commands. **Xerox made computers visual. Apple made them friendly. Microsoft made them ubiquitous.**\n\n**FIG 02: Major Computing Paradigm Budget: Share by Interface Type**\n\n*TEXT-ONLY INTERFACES*\n*GRAPHICAL USER INTERFACES*  \n*WEB INTERFACES*\n*MOBILE INTERFACES*\n\n1970 → 1984 → Apple Macintosh Launch → 1995 → 2007 → 2025\n\nBut today that 3% has ballooned to **97% of computing users** being non-technical. The revolution's fixation on **user-centered design, intuitive interfaces, and accessible technology** has made computing universally appealing, suitable not just for engineers but for everyone—a transformation only possible at the dawn of the personal computer age.\n\n**Working in UX/UI before 1990 meant you were essentially a computer scientist or industrial designer**, not a dedicated user experience professional. That designation didn't exist.\n\n---\n\n## SECTION 2\n\n### The Profession's Genesis\n\nEveryone, including the marketing departments and business analysts, wanted to design interfaces except there was no profession called UX/UI. The only problem is that **we are bad historians**.\n\nWe run a **chronologically impossible claim process** that neither acknowledges the actual timeline of professional development nor the documented history of the field. **Historical evidence explains the impossibility of extended experience claims:**\n\n### \"The field of UX/UI design as a distinct profession is based on the concepts of human-centered design that were revolutionary in the 1990s and at the forefront of the technology industry before it was systematized by pioneers like Don Norman and Alan Cooper. Centralized, predictive interface design and user research were then thought to be superior to the trial and error engineering approaches that dominated early computing.\"\n\n**HISTORICAL EVIDENCE**\n\nThere is no resume that can claim 25+ years of UX/UI experience without being anachronistic. **The mathematics are unforgiving**. We must be very careful not to conflate **graphic design experience with UX/UI professional practice**. As Don Norman said, **\"UX encompasses all aspects of the person's experience with a system.\"** This holistic approach didn't exist before the 1990s.\n\nOur **human-centered design methodology** values **user research, not just visual design**. It values **usability testing and iterative improvement**, not just aesthetic appeal.\n\nThe GUI revolution created a new discipline that was **unaware of or separate from traditional graphic design**. In Silicon Valley, we call them **interaction designers and user researchers**—distinct from visual designers. We once had generalist \"computer programmers,\" but UX/UI required **specialized knowledge of human psychology, information architecture, and usability principles**.\n\n---\n\n## SECTION 3\n\n### The Theses of Professional Timeline Accuracy\n\n**1. Mathematical impossibility is the root of false claims.**\n\nThe root of resume inflation is a **lack of historical awareness**. Avoid chronologically impossible experience claims at all costs by **understanding documented professional milestones**. **Don Norman coined \"User Experience\" in 1993**—maximum possible experience is 32 years, and that's only for the field's creator.\n\n**2. \"20+ years UX/UI experience\" makes claims statistically impossible.**\n\nMaybe someone has 20 years of \"design experience,\" but it's mathematically wrong for **dedicated UX/UI practice**. This robs credibility from the profession and **institutionalizes resume inflation** by valuing **years claimed over actual expertise**. The iPhone launched in 2007—mobile UX design is maximum 18 years old.\n\n**3. Professional roles emerged in phases, not decades.**\n\nHistorical documentation shows **clear professional development phases**:\n- **1973-1990**: GUI research and development\n- **1990-1995**: Academic HCI establishment  \n- **1995-2005**: Professional practice emergence\n- **2005-2015**: Industry standardization\n- **2015-present**: Mature profession\n\n**4. The timeline is documented: career claims must align.**\n\n**Key Historical Milestones:**\n- **1973**: Xerox Alto (first GUI)\n- **1984**: Apple Macintosh (consumer GUI)\n- **1990**: Nielsen-Molich heuristics published\n- **1993**: Don Norman coins \"User Experience\"\n- **1995**: First UX consultancies founded\n- **2000s**: Dedicated UX/UI job roles emerge\n\n**5. Tools evolution proves recent professionalization.**\n\n**Design Tools Timeline:**\n- **1988-2010**: Photoshop era (image editing adapted for web)\n- **2010-2016**: Sketch era (first dedicated UI tool)\n- **2016-present**: Figma era (collaborative design)\n\nProfessional UX/UI tools didn't exist before 2010. **Photoshop was photo editing software adapted for web design**.\n\n**6. Company design system history validates timeline.**\n\n**Corporate Design System Timeline:**\n- **1987**: Apple Human Interface Guidelines established\n- **2006**: Yahoo! Design Pattern Library released\n- **2014**: Google Material Design launched\n- **2016**: IBM Carbon Design System created\n\n**Design systems as systematic UX practice emerged in the 2000s, matured in the 2010s**.\n\n**7. Education and certification prove recent formalization.**\n\n**UX/UI Education Timeline:**\n- **1990s**: First HCI academic programs\n- **2000s**: Design schools add interaction design\n- **2010s**: Dedicated UX/UI bootcamps emerge\n- **2015+**: Industry-wide certification programs\n\n**Formal UX/UI education is less than 25 years old**.\n\n**8. Research methodology validates professional timeline.**\n\n**UX Research Methods Development:**\n- **1990**: Jakob Nielsen's usability heuristics\n- **1994**: Usability testing standardization\n- **1998**: ISO usability standards established\n- **2000s**: User research methodologies systematized\n\n**Professional UX research practices are maximum 30 years old**.\n\n**9. Job market data confirms recent profession emergence.**\n\n**Employment Data Timeline:**\n- **Pre-2000**: Fewer than 100 dedicated UX roles globally\n- **2000-2005**: Hundreds of UX positions emerge\n- **2005-2010**: Thousands of UX/UI roles created\n- **2010+**: Mainstream professional adoption\n\n**10. Technology constraints limited early practice.**\n\n**Technical Limitations Timeline:**\n- **Pre-1995**: Limited GUI development tools\n- **1995-2005**: Basic web design capabilities\n- **2005-2015**: Advanced interaction possibilities\n- **2015+**: Modern UX/UI tool ecosystem\n\n**Technical constraints made modern UX/UI practice impossible before 2000**.\n\n---\n\n## CONCLUSION\n\n### The Mathematical Proof of Professional Timeline\n\n#### \"A little fact-checking now and then is a good thing, and as necessary in the professional world as audits in the financial.\"\n\n**HISTORICAL VERIFICATION**\n\nI present these facts not because I hate the UX/UI profession, but because I love it profoundly.\n\nWe are in a state of **undeclared resume inflation**. For more than a decade, we've accepted **chronologically impossible experience claims** born from a **complacent hiring process** with no historical verification. We have **believed inflated timelines for too long**.\n\n**Change is now possible** because we all realize there is something worse than correcting false claims: **professional credibility collapse**. We have no time to waste in **establishing accurate professional standards** we can depend on for reliable hiring.\n\n**It was accurate professional standards that underwrote industry credibility**. They can once again if we embrace historical facts as our foundation.\n\n---\n\n## THE DEFINITIVE TIMELINE\n\n### **Pre-History Era (Before 1970)**\n- **4000 BC**: Feng Shui spatial optimization\n- **500 BC**: Greek ergonomic principles  \n- **1900s**: Industrial design emergence\n- **1955**: Henry Dreyfuss \"Designing for People\"\n\n### **Foundation Era (1970-1990)**\n- **1973**: Xerox Alto (first complete GUI)\n- **1975**: \"Human-Computer Interaction\" term coined\n- **1984**: Apple Macintosh mass-market GUI\n- **1988**: Don Norman's \"Design of Everyday Things\"\n\n### **Professional Genesis (1990-2000)**  \n- **1990**: Nielsen-Molich usability heuristics\n- **1992**: Cooper Interaction Design founded\n- **1993**: **Don Norman coins \"User Experience\"**\n- **1995**: Professional UX consultancies emerge\n- **1998**: ISO usability standards established\n\n### **Industry Formation (2000-2010)**\n- **2000s**: Dedicated UX/UI job roles created\n- **2006**: Yahoo! Design Pattern Library  \n- **2007**: iPhone launches mobile UX era\n- **2010**: Sketch (first dedicated UI tool)\n\n### **Professional Maturation (2010-Present)**\n- **2014**: Google Material Design System\n- **2016**: Figma collaborative design era\n- **2020s**: Industry-wide standardization\n\n---\n\n## MAXIMUM POSSIBLE EXPERIENCE CALCULATIONS\n\n**For 2025 Claims:**\n\n- **Don Norman (field creator)**: 32 years maximum (1993-2025)\n- **Early pioneers (1995 start)**: 30 years maximum  \n- **Professional practice (2000 start)**: 25 years maximum\n- **Industry standards (2005 start)**: 20 years maximum\n- **Mainstream adoption (2010 start)**: 15 years maximum\n\n**REALITY CHECK:** Anyone claiming 25+ years of dedicated UX/UI experience must be **among the documented founders of the field** with verifiable professional history.\n\n**The evidence is definitive: Claims exceeding these mathematical limits are chronologically impossible and professionally misleading.**\n\n---\n\n*Compiled from extensive historical research, industry documentation, and mathematical verification*\n\n*Sources: Don Norman writings, Apple archives, Xerox PARC documentation, Nielsen Norman Group publications, industry timeline analysis*","size_bytes":11790},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/gui-revolution-section.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Monitor, MousePointer, Package, Users, Briefcase, BarChart2, Zap, Trophy, DollarSign, TrendingUp } from \"lucide-react\";\nimport PullQuote from \"@/components/pull-quote\";\nimport DataCallout from \"@/components/data-callout\";\nimport TimelineTrack from \"@/components/timeline-track\";\nimport TimelineMinimap from \"@/components/timeline-minimap\";\nimport StackedAreaChart from \"@/components/stacked-area-chart\";\nimport ProportionalBarGroup from \"@/components/proportional-bar-group\";\nimport FadeInSection from \"@/components/fade-in-section\";\nimport AnimatedLineChart from \"@/components/animated-line-chart\";\nimport AnimatedBarChart from \"@/components/animated-bar-chart\";\n\nexport default function GuiRevolutionSection() {\n  const timelineEvents = [\n    {\n      year: \"1983\",\n      title: \"Apple Lisa\",\n      description: \"First mass-marketed personal computer with a GUI and mouse. Priced at $9,995 ($31,000 in 2025 dollars), it was a commercial failure with only 10,000 units sold.\",\n      details: \"Despite poor sales, the Lisa proved that graphical interfaces were technically viable for personal computers, paving the way for future innovations.\",\n      impact: \"Proved GUI was possible for personal computers, establishing the foundation for the Macintosh\"\n    },\n    {\n      year: \"1984\",\n      title: \"Macintosh Launch\",\n      description: \"The computer for the rest of us - affordable GUI computing at $2,495 ($7,500 in 2025). Sold 70,000 units in first 100 days, finally making graphical interfaces accessible.\",\n      details: \"With its famous 1984 Super Bowl commercial and revolutionary design, the Macintosh transformed Apple from a niche player into a cultural phenomenon.\",\n      impact: \"Made GUI accessible to creative professionals and established Apple as an innovation leader\"\n    },\n    {\n      year: \"1985\",\n      title: \"Windows 1.0\",\n      description: \"Microsoft's first graphical operating environment for MS-DOS, priced at just $99 ($280 in 2025). Initially received poor reviews due to limited functionality.\",\n      details: \"Though criticized as a Mac copycat, Windows 1.0 marked Microsoft's strategic entry into the GUI market that would eventually dominate the industry.\",\n      impact: \"Microsoft's entry into GUI market, beginning a decades-long competition with Apple\"\n    },\n    {\n      year: \"1990\",\n      title: \"Windows 3.0 Breakthrough\",\n      description: \"First commercially successful version of Windows at $149 ($350 in 2025). Sold 10 million copies in 2 years, finally delivering a usable GUI for the PC masses.\",\n      details: \"Windows 3.0's Program Manager and File Manager became the standard interface pattern, and its improved performance made it viable for business use.\",\n      impact: \"GUI becomes mainstream on PCs, shifting market dominance from Apple to Microsoft\"\n    },\n    {\n      year: \"1995\",\n      title: \"Windows 95 Revolution\",\n      description: \"Revolutionary OS with the iconic Start menu and taskbar, priced at $209 ($420 in 2025). Sold 40 million copies in the first year with a $700 million marketing campaign.\",\n      details: \"The Start Me Up campaign featuring The Rolling Stones made Windows 95 a cultural event. Lines formed at midnight launches worldwide.\",\n      impact: \"GUI becomes essential for all computer users, achieving over 90% market share by 2000\"\n    }\n  ];\n\n  const designPrinciples = [\n    {\n      name: \"WYSIWYG\",\n      fullName: \"What You See Is What You Get\",\n      description: \"Documents appear on screen exactly as they will when printed, eliminating the guesswork of command-line formatting.\",\n      icon: <Monitor className=\"w-6 h-6\" />,\n      example: \"MacWrite and MacPaint pioneered this principle in 1984\",\n      modernUsage: \"Foundation of all modern document editors and design tools\"\n    },\n    {\n      name: \"Direct Manipulation\",\n      fullName: \"Interact with objects, not commands\",\n      description: \"Users can click, drag, and manipulate visual representations of data directly, rather than typing abstract commands.\",\n      icon: <MousePointer className=\"w-6 h-6\" />,\n      example: \"Drag-and-drop file management introduced with Macintosh\",\n      modernUsage: \"Touch interfaces extend this principle to smartphones and tablets\"\n    },\n    {\n      name: \"Desktop Metaphor\",\n      fullName: \"Digital workspace mimics physical office\",\n      description: \"Files, folders, trash cans, and desktops provide familiar mental models for organizing digital information.\",\n      icon: <Package className=\"w-6 h-6\" />,\n      example: \"Xerox Star's office metaphor adopted by both Apple and Microsoft\",\n      modernUsage: \"Still the dominant paradigm for file management systems\"\n    },\n    {\n      name: \"Visual Consistency\",\n      fullName: \"Unified design language across applications\",\n      description: \"Standardized UI elements and behaviors create predictable, learnable interfaces across different programs.\",\n      icon: <Zap className=\"w-6 h-6\" />,\n      example: \"Apple's Human Interface Guidelines (1987) set the standard\",\n      modernUsage: \"Design systems like Material Design and iOS HIG continue this tradition\"\n    },\n    {\n      name: \"Menu Systems\",\n      fullName: \"Hierarchical organization of commands\",\n      description: \"Pull-down menus, context menus, and toolbars organize complex functionality into discoverable, accessible structures.\",\n      icon: <BarChart2 className=\"w-6 h-6\" />,\n      example: \"Lisa's menu bar became the standard for decades\",\n      modernUsage: \"Evolved into ribbons, hamburger menus, and command palettes\"\n    }\n  ];\n\n  const companyProfiles = [\n    {\n      company: \"Apple\",\n      leader: \"Steve Jobs\",\n      philosophy: \"Design-First Innovation\",\n      approach: \"Premium experience for creative professionals\",\n      keyMoments: [\n        {\n          year: \"1979\",\n          event: \"Steve Jobs visits Xerox PARC\",\n          impact: \"Sees Alto demo, immediately understands GUI's potential\"\n        },\n        {\n          year: \"1983\",\n          event: \"Lisa launch\",\n          impact: \"Over-engineered and overpriced, but proves the concept\"\n        },\n        {\n          year: \"1984\",\n          event: \"Macintosh Super Bowl ad\",\n          impact: \"Positions Apple as revolutionary alternative to IBM\"\n        },\n        {\n          year: \"1985\",\n          event: \"Jobs forced out of Apple\",\n          impact: \"GUI innovation stagnates until his return in 1997\"\n        }\n      ],\n      quote: \"Design is not just what it looks like and feels like. Design is how it works.\",\n      marketStrategy: \"Target creative professionals and education markets with premium, integrated experiences\",\n      revenue1990: \"$5.5 billion\",\n      marketShare1990: \"15% of personal computers\"\n    },\n    {\n      company: \"Microsoft\",\n      leader: \"Bill Gates\",\n      philosophy: \"Pragmatic Ubiquity\",\n      approach: \"Affordable software for every PC\",\n      keyMoments: [\n        {\n          year: \"1981\",\n          event: \"MS-DOS becomes IBM PC standard\",\n          impact: \"Establishes Microsoft as OS leader before GUI era\"\n        },\n        {\n          year: \"1985\",\n          event: \"Windows 1.0 ships late\",\n          impact: \"Poor initial reception, seen as Mac copycat\"\n        },\n        {\n          year: \"1990\",\n          event: \"Windows 3.0 breakthrough\",\n          impact: \"Finally delivers usable GUI for PC masses\"\n        },\n        {\n          year: \"1995\",\n          event: \"Windows 95 launch\",\n          impact: \"$700 million marketing campaign, computing goes mainstream\"\n        }\n      ],\n      quote: \"Your most unhappy customers are your greatest source of learning.\",\n      marketStrategy: \"License to all PC manufacturers, iterate rapidly based on market feedback\",\n      revenue1990: \"$1.8 billion\",\n      marketShare1990: \"90% of PC operating systems\"\n    }\n  ];\n\n  const marketAreaData = [\n    { year: \"1984\", macs: 0.07, windows: 0 },\n    { year: \"1985\", macs: 0.2, windows: 0.02 },\n    { year: \"1987\", macs: 0.8, windows: 0.5 },\n    { year: \"1990\", macs: 1.5, windows: 10 },\n    { year: \"1992\", macs: 3.0, windows: 25 },\n    { year: \"1995\", macs: 4.5, windows: 60 },\n    { year: \"1997\", macs: 4.0, windows: 150 },\n    { year: \"2000\", macs: 3.5, windows: 300 }\n  ];\n\n  const proportionalBarData = [\n    {\n      year: \"1984\",\n      label: \"Mac launches\",\n      segments: [\n        { value: 0.07, color: \"hsl(88, 20%, 48%)\", label: \"Macintosh\" },\n        { value: 0.01, color: \"hsl(56, 22%, 75%)\", label: \"Other GUI\" }\n      ],\n      total: 0.08\n    },\n    {\n      year: \"1990\",\n      label: \"Windows 3.0 breakthrough\",\n      segments: [\n        { value: 1.5, color: \"hsl(88, 20%, 48%)\", label: \"Macintosh\" },\n        { value: 10, color: \"hsl(56, 22%, 75%)\", label: \"Windows\" }\n      ],\n      total: 11.5\n    },\n    {\n      year: \"1995\",\n      label: \"Windows 95 dominance\",\n      segments: [\n        { value: 4.5, color: \"hsl(88, 20%, 48%)\", label: \"Macintosh\" },\n        { value: 60, color: \"hsl(56, 22%, 75%)\", label: \"Windows\" }\n      ],\n      total: 64.5\n    },\n    {\n      year: \"2000\",\n      label: \"Peak market saturation\",\n      segments: [\n        { value: 3.5, color: \"hsl(88, 20%, 48%)\", label: \"Macintosh\" },\n        { value: 300, color: \"hsl(56, 22%, 75%)\", label: \"Windows\" }\n      ],\n      total: 303.5\n    }\n  ];\n\n  return (\n    <section className=\"py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\" data-testid=\"section-gui-revolution\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Opening Narrative */}\n        <div className=\"max-w-4xl mx-auto mb-20\">\n          <h2 className=\"font-display text-3xl sm:text-4xl lg:text-5xl font-bold mb-8 leading-tight\" data-testid=\"text-revolution-heading\">\n            The GUI Wars: When Computing Became Personal\n          </h2>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p className=\"text-base sm:text-lg lg:text-xl\">\n              In 1979, a young Steve Jobs walked into Xerox PARC and witnessed the future. What he saw — a computer controlled by pointing and clicking rather than typing commands — would spark a revolution that transformed computers from corporate tools into personal creative instruments. This is the story of how two companies, Apple and Microsoft, took an academic research project and turned it into the foundation of modern computing.\n            </p>\n            \n            <p className=\"text-sm sm:text-base\">\n              The commercialization of the graphical user interface wasn't just a business competition; it was a battle for the soul of computing. Would computers be beautiful, intuitive tools for creative expression, as Apple envisioned? Or practical, affordable utilities for every desk, as Microsoft pursued? The answer, ultimately, was both — but the journey there reshaped entire industries and established design principles we still follow today.\n            </p>\n          </div>\n        </div>\n\n        {/* Historical Timeline - Interactive */}\n        <FadeInSection className=\"mb-24 relative\">\n          <TimelineTrack \n            events={timelineEvents}\n            title=\"The Race to Democratize Computing\"\n            description=\"From Xerox PARC to Windows 95: How two companies transformed computing forever\"\n          />\n          <TimelineMinimap \n            events={timelineEvents}\n            sectionId=\"revolution\"\n          />\n        </FadeInSection>\n\n        {/* Pull Quote */}\n        <PullQuote\n          quote=\"The computer for the rest of us\"\n          attribution=\"Apple Macintosh tagline\"\n        />\n\n        {/* Design Wars Callout */}\n        <Card className=\"p-8 mb-20 bg-gradient-to-br from-red-500/10 to-transparent border-red-500/30\">\n          <div className=\"flex items-start gap-4\">\n            <Briefcase className=\"w-6 h-6 text-red-400 mt-1\" />\n            <div>\n              <h4 className=\"text-xl sm:text-2xl md:text-3xl font-semibold mb-3 text-red-400\">The Look and Feel Lawsuits</h4>\n              <div className=\"space-y-3 text-foreground/80\">\n                <p className=\"text-sm sm:text-base\">\n                  <span className=\"font-semibold\">1988:</span> Apple sues Microsoft for copyright infringement over Windows 2.0, claiming it copies the \"look and feel\" of Macintosh.\n                </p>\n                <p className=\"text-sm sm:text-base\">\n                  <span className=\"font-semibold\">1989:</span> Apple extends lawsuit to HP's NewWave, seeking to establish GUI elements as copyrightable expression.\n                </p>\n                <p className=\"text-sm sm:text-base\">\n                  <span className=\"font-semibold\">1994:</span> Courts rule that GUI elements are functional, not artistic expression. Microsoft wins, establishing that interface concepts cannot be monopolized.\n                </p>\n                <p className=\"font-medium text-accent text-sm sm:text-base\">\n                  Impact: This ruling allowed GUI innovation to flourish across the industry, preventing any single company from owning fundamental interface concepts.\n                </p>\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Company Profiles */}\n        <div className=\"mb-24\">\n          <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-12\">Two Visions, One Revolution</h3>\n          \n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            {companyProfiles.map((profile) => (\n              <Card key={profile.company} className=\"p-8 bg-card/50 backdrop-blur border-accent/30\" data-testid={`profile-${profile.company.toLowerCase()}`}>\n                <div className=\"mb-6\">\n                  <h4 className=\"text-2xl sm:text-3xl font-bold mb-2\">{profile.company}</h4>\n                  <p className=\"text-base sm:text-lg text-accent\">{profile.philosophy}</p>\n                  <p className=\"text-xs sm:text-sm text-muted-foreground mt-1\">Led by {profile.leader}</p>\n                </div>\n                \n                <blockquote className=\"border-l-4 border-accent/50 pl-4 mb-6 italic text-sm sm:text-base text-foreground/70\">\n                  \"{profile.quote}\"\n                  <footer className=\"text-xs sm:text-sm mt-2 not-italic\">— {profile.leader}</footer>\n                </blockquote>\n                \n                <div className=\"space-y-4 mb-6\">\n                  <p className=\"text-xs sm:text-sm font-medium text-accent\">Strategy:</p>\n                  <p className=\"text-xs sm:text-sm text-foreground/80\">{profile.marketStrategy}</p>\n                  \n                  <div className=\"space-y-2\">\n                    <p className=\"text-xs sm:text-sm font-medium text-accent\">Key Moments:</p>\n                    {profile.keyMoments.map((moment) => (\n                      <div key={moment.year} className=\"flex gap-3 text-xs sm:text-sm\">\n                        <span className=\"font-mono text-accent/70\">{moment.year}</span>\n                        <div className=\"flex-1\">\n                          <p className=\"font-medium\">{moment.event}</p>\n                          <p className=\"text-muted-foreground text-xs\">{moment.impact}</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-4 pt-4 border-t border-accent/20\">\n                  <div>\n                    <p className=\"text-xl sm:text-2xl font-bold text-accent\">{profile.revenue1990}</p>\n                    <p className=\"text-xs sm:text-sm text-muted-foreground\">1990 Revenue</p>\n                  </div>\n                  <div>\n                    <p className=\"text-xl sm:text-2xl font-bold text-accent\">{profile.marketShare1990}</p>\n                    <p className=\"text-xs sm:text-sm text-muted-foreground\">1990 Market Share</p>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Market Share Stacked Area Chart */}\n        <StackedAreaChart\n          data={marketAreaData}\n          areas={[\n            { dataKey: \"macs\", name: \"Macintosh Users\", color: \"hsl(88, 20%, 48%)\" },\n            { dataKey: \"windows\", name: \"Windows Users\", color: \"hsl(56, 22%, 75%)\" }\n          ]}\n          title=\"GUI Operating System Adoption (1984-2000)\"\n          description=\"The dramatic shift from Macintosh dominance to Windows ubiquity\"\n          yAxisLabel=\"Users (millions)\"\n        />\n\n        {/* Proportional Market Share Bars */}\n        <ProportionalBarGroup\n          data={proportionalBarData}\n          title=\"Market Share Evolution\"\n          description=\"Comparative market dominance at key milestones in GUI history\"\n        />\n\n        {/* Core Design Principles */}\n        <div className=\"mb-24\">\n          <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-12\">Design Principles That Shaped Computing</h3>\n          \n          <div className=\"grid gap-6\">\n            {designPrinciples.map((principle) => (\n              <Card key={principle.name} className=\"p-6 bg-card/50 backdrop-blur border-border hover:border-accent/50 transition-colors\" data-testid={`principle-${principle.name.toLowerCase()}`}>\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 rounded-lg bg-accent/20 flex items-center justify-center flex-shrink-0\">\n                    {principle.icon}\n                  </div>\n                  \n                  <div className=\"flex-1\">\n                    <div className=\"flex flex-wrap items-baseline gap-3 mb-3\">\n                      <h4 className=\"text-xl sm:text-2xl font-bold\">{principle.name}</h4>\n                      <span className=\"text-xs sm:text-sm text-muted-foreground\">({principle.fullName})</span>\n                    </div>\n                    \n                    <p className=\"text-sm sm:text-base text-foreground/80 mb-4\">{principle.description}</p>\n                    \n                    <div className=\"grid sm:grid-cols-2 gap-4 pt-4 border-t border-accent/20\">\n                      <div>\n                        <p className=\"text-xs sm:text-sm text-accent font-semibold uppercase tracking-wider mb-1\">Historical Example</p>\n                        <p className=\"text-xs sm:text-sm text-foreground/70\">{principle.example}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-xs sm:text-sm text-accent font-semibold uppercase tracking-wider mb-1\">Modern Legacy</p>\n                        <p className=\"text-xs sm:text-sm text-foreground/70\">{principle.modernUsage}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Data Callout for Windows 95 */}\n        <DataCallout\n          value=\"40 million copies in first year\"\n          label=\"Windows 95 became the largest software launch in history, with a $700M marketing budget including licensing 'Start Me Up' by The Rolling Stones\"\n          type=\"chart\"\n        />\n\n        {/* Closing Narrative */}\n        <div className=\"max-w-4xl mx-auto\">\n          <Separator className=\"mb-12 bg-accent/20\" />\n          \n          <h3 className=\"font-display text-xl sm:text-2xl md:text-3xl font-semibold mb-8\">From Revolution to Foundation</h3>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90\">\n            <p className=\"text-sm sm:text-base\">\n              The GUI revolution of the 1980s and 1990s wasn't just about making computers easier to use — it was about reimagining the relationship between humans and machines. Apple's vision of computers as \"bicycles for the mind\" and Microsoft's dream of \"a computer on every desk\" both came true, creating an industry worth trillions and transforming how humanity creates, communicates, and thinks.\n            </p>\n            \n            <p className=\"text-sm sm:text-base\">\n              The principles established during these GUI wars — direct manipulation, visual consistency, WYSIWYG editing — became so fundamental that we now take them for granted. Every smartphone swipe, every drag-and-drop action, every menu you navigate traces its lineage back to these pioneering days when two companies fought to define the future of human-computer interaction.\n            </p>\n            \n            <p className=\"text-base sm:text-lg lg:text-xl font-medium text-accent\">\n              What started as a $32,000 research computer at Xerox became a $3 trillion industry. The GUI didn't just change how we use computers — it changed what computers could be: not just tools for calculation, but extensions of human creativity and thought.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":20981},"client/src/contexts/reading-progress-context.tsx":{"content":"import { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\n\ninterface ReadingProgress {\n  scrollPosition: number;\n  readTheses: number[];\n  lastVisited: string;\n}\n\ninterface ReadingProgressContextType {\n  progress: ReadingProgress;\n  saveProgress: (updates: Partial<ReadingProgress>) => void;\n  markThesisAsRead: (thesisNumber: number) => void;\n  updateScrollPosition: (position: number) => void;\n  clearProgress: () => void;\n  getProgressPercentage: () => number;\n}\n\nconst ReadingProgressContext = createContext<ReadingProgressContextType | null>(null);\n\nconst STORAGE_KEY = 'defense-reformation-reading-progress';\n\nexport function ReadingProgressProvider({ children }: { children: ReactNode }) {\n  const [progress, setProgress] = useState<ReadingProgress>({\n    scrollPosition: 0,\n    readTheses: [],\n    lastVisited: new Date().toISOString(),\n  });\n\n  useEffect(() => {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        setProgress(parsed);\n      } catch (error) {\n        console.error('Failed to parse reading progress:', error);\n      }\n    }\n  }, []);\n\n  const saveProgress = useCallback((updates: Partial<ReadingProgress>) => {\n    setProgress((prev) => {\n      const newProgress = { \n        ...prev, \n        ...updates,\n        lastVisited: new Date().toISOString() \n      };\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newProgress));\n      return newProgress;\n    });\n  }, []);\n\n  const markThesisAsRead = useCallback((thesisNumber: number) => {\n    setProgress((prev) => {\n      if (prev.readTheses.includes(thesisNumber)) {\n        return prev;\n      }\n      const newProgress = {\n        ...prev,\n        readTheses: [...prev.readTheses, thesisNumber].sort((a, b) => a - b),\n        lastVisited: new Date().toISOString(),\n      };\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newProgress));\n      return newProgress;\n    });\n  }, []);\n\n  const updateScrollPosition = useCallback((position: number) => {\n    saveProgress({ scrollPosition: position });\n  }, [saveProgress]);\n\n  const clearProgress = useCallback(() => {\n    localStorage.removeItem(STORAGE_KEY);\n    setProgress({\n      scrollPosition: 0,\n      readTheses: [],\n      lastVisited: new Date().toISOString(),\n    });\n  }, []);\n\n  const getProgressPercentage = useCallback(() => {\n    return Math.round((progress.readTheses.length / 18) * 100);\n  }, [progress.readTheses.length]);\n\n  return (\n    <ReadingProgressContext.Provider\n      value={{\n        progress,\n        saveProgress,\n        markThesisAsRead,\n        updateScrollPosition,\n        clearProgress,\n        getProgressPercentage,\n      }}\n    >\n      {children}\n    </ReadingProgressContext.Provider>\n  );\n}\n\nexport function useReadingProgress() {\n  const context = useContext(ReadingProgressContext);\n  if (!context) {\n    throw new Error('useReadingProgress must be used within ReadingProgressProvider');\n  }\n  return context;\n}\n","size_bytes":3011},"client/src/components/tools-methodology-section.tsx":{"content":"import FadeInSection from \"@/components/fade-in-section\";\nimport ToolsEvolutionScatter from \"@/components/tools-evolution-scatter\";\n\nexport default function ToolsMethodologySection() {\n  const insights = [\n    {\n      number: 1,\n      title: \"The root of what ails us.\",\n      content: \"The evolution of UX/UI design tools mirrors the profession's journey from print adaptation to digital-native thinking. What began as designers using Photoshop to slice images for web pages has transformed into a sophisticated ecosystem of collaborative, cloud-based platforms that enable real-time design systems at scale.\"\n    },\n    {\n      number: 2,\n      title: \"This transformation wasn't just technological.\",\n      content: \"This transformation wasn't just technological—it fundamentally changed how teams work together. The shift from waterfall to agile methodologies, the rise of design thinking, and the emergence of DesignOps reflect the profession's maturation from service provider to strategic partner.\"\n    },\n    {\n      number: 3,\n      title: \"A budget is a plan, and no plan survives first contact.\",\n      content: \"Military doctrine states plans are valuable, even if planning is invaluable. 'I support the President's budget' is an evasion. No company could survive if it took years for POR budget for projects (similarly JCIDS Program Objective Memorandum, or POM). The model must be subverted. And for a hybrid you must invest in existing technology, fund new tools, and many rapid pivot points. Most tools require money upfront, not 4 months, not 4 years. Messy and imperfect execution is required. We require DevSecOps for architects.\"\n    },\n    {\n      number: 4,\n      title: \"The person is the program: the primacy of people.\",\n      content: \"The Defense Officer Personnel Management Act (the law that says how military officer careers and promotions are governed) must be reformed. There is a reason that Director of Naval Reactors was the first Navy three-star and four-star billet ever given an exemption to this law. Consider the Director of Cyber. Thirty years ago that the F.A. Bernhardt and the J. Pierpont. Talent is not fungible. Talent: Problem fit is rare and hard to retain. The military culture today is not designed to keep the highly talented individuals who have both the experience to fill out a things go. Additionally, Congressional oversight can't work with Program Element numbers. Which identical individuals are Congress protecting and holding the DoD accountable?\"\n    },\n    {\n      number: 5,\n      title: \"The only requirement is winning.\",\n      content: \"The most important projects don't come from requirements. America's culture strengths are fundamentally creative and entrepreneurial. The requirements process ensures we play by our weaknesses. In a fight 'no one cares about the requirements process'. Most enterprise capabilities require changing the requirements-making requires engaging in the messy, overlapping, seemingly wasteful but actually efficient process of being agile. Materiel solutions often require writing requires deep insights. But they aren't built. We have national plans to counter without execution.\"\n    }\n  ];\n\n  return (\n    <section className=\"relative\" data-testid=\"section-tools-methodology\">\n      {/* Header Section */}\n      <div className=\"bg-[#6b7a5d] py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"flex items-center justify-between mb-8\">\n            <p className=\"text-xs sm:text-sm uppercase tracking-[0.2em] text-white/70\">Section 3</p>\n            <div className=\"flex gap-2\">\n              <div className=\"w-2 h-2 rounded-full bg-white/30\" />\n              <div className=\"w-2 h-2 rounded-full bg-white\" />\n              <div className=\"w-2 h-2 rounded-full bg-white/30\" />\n            </div>\n          </div>\n          <h2 className=\"text-3xl sm:text-4xl lg:text-5xl font-display font-light leading-tight text-white mb-6\">\n            Tools & Methodology Evolution\n          </h2>\n          <p className=\"text-base sm:text-lg text-white/90 max-w-3xl leading-relaxed\">\n            The evolution of UX/UI design tools mirrors the profession's journey from print adaptation to digital-native thinking. What began as designers using Photoshop to slice images for web pages has transformed into a sophisticated ecosystem of collaborative, cloud-based platforms that enable real-time design systems at scale.\n          </p>\n        </div>\n      </div>\n\n      {/* Content Section - Light Cream Background */}\n      <div className=\"bg-[#f5f2ed] py-12 px-6 sm:py-16 sm:px-8 lg:py-20 lg:px-12\">\n        <div className=\"max-w-4xl mx-auto space-y-16\">\n          {/* Insights */}\n          {insights.slice(0, 2).map((insight) => (\n            <FadeInSection key={insight.number}>\n              <div className=\"flex gap-6 items-start\" data-testid={`insight-${insight.number}`}>\n                {/* Circled Number */}\n                <div \n                  className=\"flex-shrink-0 w-12 h-12 rounded-full border-2 border-black flex items-center justify-center\"\n                  data-testid={`number-insight-${insight.number}`}\n                >\n                  <span className=\"text-black font-mono text-xs sm:text-sm font-bold\">\n                    {String(insight.number).padStart(2, '0')}\n                  </span>\n                </div>\n\n                {/* Content */}\n                <div className=\"flex-1 space-y-3\">\n                  <h4 \n                    className=\"text-xl sm:text-2xl md:text-3xl font-display font-bold leading-tight text-black\"\n                    data-testid={`title-insight-${insight.number}`}\n                  >\n                    {insight.title}\n                  </h4>\n                  <p \n                    className=\"text-sm sm:text-base leading-[1.8] text-justify text-black/90\"\n                    data-testid={`description-insight-${insight.number}`}\n                  >\n                    {insight.content}\n                  </p>\n                </div>\n              </div>\n            </FadeInSection>\n          ))}\n\n          {/* Graph Section - Insight 3 */}\n          <FadeInSection>\n            <div className=\"space-y-8\" data-testid=\"insight-3\">\n              <ToolsEvolutionScatter />\n            </div>\n          </FadeInSection>\n\n          {/* Remaining Insights */}\n          {insights.slice(2).map((insight) => (\n            <FadeInSection key={insight.number}>\n              <div className=\"flex gap-6 items-start\" data-testid={`insight-${insight.number}`}>\n                {/* Circled Number */}\n                <div \n                  className=\"flex-shrink-0 w-12 h-12 rounded-full border-2 border-black flex items-center justify-center\"\n                  data-testid={`number-insight-${insight.number}`}\n                >\n                  <span className=\"text-black font-mono text-xs sm:text-sm font-bold\">\n                    {String(insight.number).padStart(2, '0')}\n                  </span>\n                </div>\n\n                {/* Content */}\n                <div className=\"flex-1 space-y-3\">\n                  <h4 \n                    className=\"text-xl sm:text-2xl md:text-3xl font-display font-bold leading-tight text-black\"\n                    data-testid={`title-insight-${insight.number}`}\n                  >\n                    {insight.title}\n                  </h4>\n                  <p \n                    className=\"text-sm sm:text-base leading-[1.8] text-justify text-black/90\"\n                    data-testid={`description-insight-${insight.number}`}\n                  >\n                    {insight.content}\n                  </p>\n                </div>\n              </div>\n            </FadeInSection>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7817}},"version":2}