{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a React-based web application that presents \"The History of UX/UI Design: A Treatise on Professional Claims\" - a data-driven long-form article that mathematically debunks inflated UX/UI experience claims. The application is built as a single-page, content-focused website with a dark theme aesthetic, featuring historical timelines, interactive data visualizations, and evidence-based thesis statements proving that 24+ year UX/UI experience claims are often chronologically impossible. The tech stack combines a Vite-powered React frontend with an Express backend, using TypeScript throughout.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n\n**Framework & Build System**\n- React 18 with TypeScript for type-safe component development\n- Vite as the build tool and development server, configured to serve the React app from the `client` directory\n- Wouter for lightweight client-side routing (single route to home page currently)\n- TanStack Query (React Query) for server state management with infinite stale time configured\n\n**UI Component System**\n- Shadcn/ui component library using Radix UI primitives for accessible, unstyled components\n- Tailwind CSS for styling with custom design tokens (dark theme focused)\n- Custom fonts: Inter (sans), Space Grotesk (display), JetBrains Mono (monospace)\n- Component structure follows atomic design with reusable UI components in `client/src/components/ui/`\n- Custom page-specific components in `client/src/components/` for the defense article content\n\n**Design Decisions**\n- Dark theme as default with extensive CSS custom properties for theming\n- Single-page application structure presenting long-form content\n- Content sections separated by dividers for visual hierarchy\n- Responsive design using Tailwind's mobile-first approach\n\n## Backend Architecture\n\n**Server Framework**\n- Express.js server with TypeScript\n- Custom Vite integration for development with HMR (Hot Module Replacement)\n- Middleware for JSON parsing with raw body capture for potential webhook handling\n- Request/response logging middleware for API routes (paths starting with `/api`)\n\n**Data Layer**\n- Drizzle ORM configured for PostgreSQL dialect\n- Schema defined in `shared/schema.ts` for code sharing between frontend and backend\n- Current schema includes a users table with username/password fields\n- Zod schemas generated from Drizzle for runtime validation\n- In-memory storage implementation (`MemStorage`) as fallback/development option\n- Storage interface pattern (`IStorage`) allows swapping between different storage implementations\n\n**Server Architecture Decisions**\n- Module-based routing system with routes registered in `server/routes.ts`\n- API routes prefixed with `/api` convention\n- HTTP server wraps Express for WebSocket potential (server returned from `registerRoutes`)\n- Separation of concerns: routes, storage layer, and server setup are distinct modules\n\n## External Dependencies\n\n**Database**\n- PostgreSQL via Neon serverless driver (`@neondatabase/serverless`)\n- Connection configured through `DATABASE_URL` environment variable\n- Drizzle Kit for migrations (output to `./migrations` directory)\n\n**UI Libraries**\n- Comprehensive Radix UI component primitives for accessible UI elements\n- Embla Carousel for carousel functionality\n- Lucide React for iconography\n- Date-fns for date manipulation\n- Class Variance Authority (CVA) for variant-based component styling\n\n**Development Tools**\n- Replit-specific plugins for development (cartographer, dev banner, runtime error overlay)\n- TSX for running TypeScript in development\n- ESBuild for production builds\n\n**Session Management**\n- Connect-pg-simple for PostgreSQL-backed session storage (installed but not yet implemented)\n\n**Build & Deployment**\n- Vite build outputs to `dist/public` for static assets\n- Server bundle outputs to `dist/index.js` via ESBuild\n- Production mode serves built static files from Express\n- Development mode uses Vite middleware for HMR\n\n**Configuration Approach**\n- Path aliases configured consistently across TypeScript and Vite (`@/`, `@shared/`, `@assets/`)\n- Environment-based configuration (NODE_ENV for dev/production switching)\n- Shared schema between client and server promotes type safety across the stack","size_bytes":4331},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        \"flag-green\": \"var(--flag-green)\",\n        sage: {\n          DEFAULT: \"#8AA97A\",\n          light: \"var(--sage-light)\",\n          dark: \"var(--sage-dark)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        display: [\"var(--font-display)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n      spacing: {\n        '18': '72px',\n        '20': '80px',\n        '22': '88px',\n        '24': '96px',\n        '26': '104px',\n        '28': '112px',\n        '30': '120px',\n        '32': '128px',\n      },\n      maxWidth: {\n        'container': '1200px',\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3235},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"attached_assets/content-1759693755476.md":{"content":"The Defense Reformation - YouTube\n\n[Photo image of Palantir](https://www.youtube.com/channel/UCwed6_f0WcDIioXvMQfcP2Q?embeds_referring_euri=https%3A%2F%2F18theses.com%2F&embeds_referring_origin=https%3A%2F%2F18theses.com)\n\nPalantir\n\n128K subscribers\n\n[The Defense Reformation](https://www.youtube.com/watch?v=UVLDANg9oLw)\n\nPalantir\n\nSearch\n\nWatch later\n\nShare\n\nCopy link\n\nInfo\n\nShopping\n\nTap to unmute\n\nIf playback doesn't begin shortly, try restarting your device.\n\nMore videos\n\n## More videos\n\nYou're signed out\n\nVideos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.\n\nCancelConfirm\n\nShare\n\nInclude playlist\n\nAn error occurred while retrieving sharing information. Please try again later.\n\n[Watch on](https://www.youtube.com/watch?v=UVLDANg9oLw&embeds_referring_euri=https%3A%2F%2F18theses.com%2F&embeds_referring_origin=https%3A%2F%2F18theses.com)\n\n0:00\n\n0:00 / 59:01\n•Live\n\n•\n\n* * *\n\nIntroduction\n\n## As a nation, we are in an undeclared state of emergency.\n\n* * *\n\nAround 2014, Russia annexed Crimea, China militarized the Spratly Islands in the South China Sea, and Iran was allowed to pursue the bomb. A decade later, we have had more than 300 attacks on U.S. bases by Iran, 1,200 people slaughtered in a pogrom in Israel, an estimated 1 million casualties in brutal combat in Ukraine, and an unprecedented tempo of CCP phase zero operations in the Taiwan Straits.\n\nThis is a hot Cold War II. The West has empirically lost deterrence. We must respond to this emergency to regain it.\n\nWe have a peer adversary: China. “Near-Peer” is a shibboleth, a euphemism to avoid the embarrassment of acknowledging we have peers when we were once peerless. In World War II, America was the best at mass production. Today that distinction belongs to our adversary. America’s national security requires a robust industrial base, or it will lose the next war and plunge the world into darkness under authoritarian regimes. In the current environment, American industries can’t produce a minimum line of ships, subs, munitions, aircraft, and more. It takes a decade or two to deliver new major weapon systems at scale. If we’re in a hot war, we would only have days worth of ammunition and weapons on hand. Even more alarming is our lack of capacity and capability to rapidly repair and regenerate our weapon systems.\n\nGiven the vast sums we have spent on defense in these decades of Pax Americana, it would be reasonable to wonder: what went wrong?\n\n![](https://18theses.com/assets/poster-large-BI_TEpf7.jpg)\n\n* * *\n\nVideo\n\nDefense forum\n\nand discussion\n\n* * *\n\nSection 1\n\n## The Last Supper and Great Schism\n\n* * *\n\nIn 1993, after the end of the Cold War, America wanted a Peace Dividend and defense spending was slashed by 67%. The Secretary of Defense held a dinner at the Pentagon — the so-called “Last Supper” — to tell the 51 primes they would not all survive. Today, there are 5.\n\n* * *\n\nFig 01\n\n### Corporate consolidation in the defense sector\n\nThe most important consequence of the Last Supper wasn’t a reduction in competition in the Defense Industrial Base, but the decoupling of commercial innovation from defense and the rise of the government [Monopsony](https://www.firstbreakfast.com/p/break-the-department-of-defenses). Consolidation bred conformity and pushed out the crazy Founders and innovative engineers. This was the Great Schism of the American Industrial Base.\n\nBefore the fall of the Berlin Wall, only 6% of defense spending went to defense specialists — so called traditionals. The vast majority of the spend went to companies that had both defense and commercial businesses. Chrysler made cars and missiles. Ford made satellites until 1990. General Mills — the cereal company — made artillery and inertial guidance systems.\n\n* * *\n\nFig 02\n\n### Major weapon systems acquisition budget: share by industrial base category\n\n* * *\n\nDefense Specialists\n\n* * *\n\nAerospace & Defense Companies\n\n* * *\n\nCommercial Companies\n\nServing defense and\n\nmany other markets\n\n1977\n\n1989\n\n* * *\n\nFall of the Berlin Wall, Collapse of the USSR\n\n2001\n\n2013\n\n2025\n\nSource: Gregory C. Allen and Doug Berenson, Why is the U.S. Defense Industrial Base So Isolated from the U.S. Economy? (2024), and Martin Bollinger, based on the DOD’s Annual Report to the Congress and Program Acquisition Cost by Weapon System, fiscal years 1977 through 2025\n\nSource: Department of Defense Report on the State of Competition within the Defense Industrial Base, February 2022\n\nNote: “Major weapon systems” includes MDAPs and some additional spending, not the entire procurement and research, development, test, and evaluation budget\n\nBut today that 6% has ballooned to 86%. The Monopsony’s fixation on cost-plus contracting, control, and tedious regulation has made working in the national interest bad business, suitable only to risk-averse investors who are addicted to dividends and buybacks — a luxury only affordable at the end of history. That is not what the most dynamic parts of the American economy do — only the dying parts.\n\nWorking with the Monopsony as a defense contractor is so unappealing that Ball would rather [make beer cans than satellite buses](https://www.ball.com/newswire/article/124211/ball-completes-sale-of-aerospace-business). That is depressing.\n\nThe S&P 500 last added a defense company 46 years ago — until Palantir’s addition in September 2024. That resembles Europe’s sclerotic capital markets, not America’s.\n\n* * *\n\nFig 03\n\n### Defense companies by market cap\n\nCompany\n\nMarket Cap\n\nEmployees\n\nFounded\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='113'%20height='27'%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M27.82%202.86h6.97c2.54%200%204.27.14%205.68%201.67C41.51%205.6%2042%207.01%2042%208.57s-.52%202.94-1.64%204.07c-1.1%201.09-2.54%201.79-6.29%201.79H30.7v9.25h-2.88zM30.7%2012h3.43c1.91%200%204.82-.14%204.82-3.54S36.24%205.2%2034.74%205.2h-4.03V12ZM51.35%2023.68c-.2-.72-.26-1.41-.26-2.16-1.29%202.4-3.26%202.63-4.47%202.63-3.32%200-5.1-1.87-5.1-4.27%200-1.15.4-3%202.54-4.24%201.56-.86%203.86-.95%205.02-.95.69%200%201.13.03%201.96.09%200-1.79%200-2.57-.52-3.2-.55-.72-1.73-.95-2.51-.95-2.74%200-2.88%201.87-2.91%202.45h-2.71c.08-.75.17-1.76%201.01-2.74%201.1-1.21%203.14-1.56%204.67-1.56%202.11%200%204.35.66%205.13%202.13.46.87.49%201.56.49%202.22l-.12%206.92c0%20.23.03%202.16.23%203.63zm-1.87-7.13c-1.1%200-5.22%200-5.22%202.94%200%20.92.57%202.51%203%202.51%201.38%200%202.42-.55%203.09-1.56.61-.98.63-1.79.69-3.81-.49-.06-.89-.09-1.56-.09ZM56.08%202.86h2.71v20.82h-2.71zM70.44%2023.68c-.2-.72-.26-1.41-.26-2.16-1.3%202.4-3.26%202.63-4.47%202.63-3.32%200-5.11-1.87-5.11-4.27%200-1.15.41-3%202.54-4.24%201.56-.86%203.86-.95%205.02-.95.69%200%201.12.03%201.96.09%200-1.79%200-2.57-.52-3.2-.55-.72-1.73-.95-2.51-.95-2.74%200-2.88%201.87-2.91%202.45h-2.71c.09-.75.17-1.76%201.01-2.74%201.09-1.21%203.14-1.56%204.67-1.56%202.11%200%204.35.66%205.13%202.13.46.87.49%201.56.49%202.22l-.11%206.92c0%20.23.03%202.16.23%203.63zm-1.87-7.13c-1.1%200-5.22%200-5.22%202.94%200%20.92.58%202.51%203%202.51%201.38%200%202.42-.55%203.09-1.56.6-.98.63-1.79.69-3.81-.49-.06-.89-.09-1.56-.09ZM75.21%2010.88l-.03-1.67h2.71l.03%202.34c.32-.61%201.35-2.63%204.64-2.63%201.29%200%205.25.49%205.25%204.93v9.83h-2.77v-9.2c0-.95-.12-1.82-.78-2.48-.69-.66-1.64-.98-2.56-.98-1.96%200-3.78%201.41-3.78%204.32v8.33h-2.71v-12.8ZM88.65%209.2h2.57V6.12l2.68-.86v3.95h3.23v1.99H93.9v8.62c0%20.72%200%201.93%201.93%201.93.55%200%201.06-.09%201.3-.15v2.11c-.49.09-1.27.17-2.25.17-2.48%200-3.66-.72-3.66-3.08v-9.6h-2.57V9.21ZM99.03%202.86h3.26v3.03h-3.26zm.29%206.34h2.71v14.47h-2.71zM104.53%2012.14c0-.98-.06-1.99-.15-2.94h2.74l.06%202.8c.52-2.02%202.25-2.68%203.46-2.85a8.3%208.3%200%200%201%201.87-.06v2.65c-.14-.06-.32-.09-.52-.11-.2-.03-.46-.03-.78-.03-3.2%200-3.95%201.9-3.95%204.38v7.7h-2.74V12.15Z'/%3e%3c/g%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M11.07.08C5.46.08.91%204.63.91%2010.24S5.46%2020.4%2011.07%2020.4s10.16-4.55%2010.16-10.16S16.68.08%2011.07.08m0%2017.2c-3.88%200-7.02-3.15-7.02-7.02s3.14-7.02%207.02-7.02%207.02%203.14%207.02%207.02-3.14%207.02-7.02%207.02'/%3e%3cpath%20d='m20.15%2019.51-9.08%203.92-9.08-3.92L.48%2022.4l10.59%204.52%2010.59-4.52z'/%3e%3c/g%3e%3c/svg%3e)\n\n$381,639,000,000\n\n4,164\n\n2003\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2088%2034'%3e%3cpath%20fill='%23f4f4e4'%20d='M13.497.49c.376-.094.753-.141%201.129-.188l1.74%209.972c-.376.047-.753.094-1.129.188zm-.423%2011.007c.376-.282.753-.47%201.176-.659L9.217%202.043c-.376.235-.8.423-1.176.659l5.033%208.796ZM10.205%2017c0-.376.047-.753.094-1.082H.327c-.047.329-.047.659-.047%201.035%200%20.329%200%20.659.047.988h9.972c-.047-.329-.094-.611-.094-.941m13.546%200a6.745%206.745%200%200%201-6.773%206.773c-3.34%200-6.115-2.446-6.679-5.644L.892%2021.562c.188.753.47%201.458.753%202.117l9.313-3.434-7.573%206.491c.47.659%201.035%201.317%201.599%201.928l7.102-6.021-4.657%208.137c.753.517%201.505.988%202.352%201.364l4.374-7.667-1.505%208.702c.941.235%201.881.423%202.869.517l1.411-8.137%201.411%208.137a21%2021%200%200%200%203.01-.517l-1.317-7.526%203.81%206.632a15.7%2015.7%200%200%200%202.963-1.74l-3.481-6.115%205.362%204.515a18.2%2018.2%200%200%200%202.258-2.775l-4.798-4.045%205.832%202.164c.564-1.129.941-2.305%201.223-3.575l-5.127-1.881h5.456c.047-.611.094-1.27.094-1.928%200-.753-.047-1.505-.141-2.211H23.372c.235.753.376%201.505.376%202.305m-13.355-1.551a6.6%206.6%200%200%201%20.659-1.693l-9.408-3.434c-.235.564-.423%201.129-.611%201.693zM29.584%205.9l-7.667%206.444c.188.188.376.423.517.611l7.667-6.444a6%206%200%200%200-.517-.611m-3.81-3.246c-.282-.188-.564-.329-.8-.47l-5.033%208.702c.282.141.564.282.847.47zm-13.359%209.36L4.701%205.523c-.376.376-.706.8-1.035%201.223l7.667%206.491c.329-.47.659-.847%201.082-1.223m5.268-1.74c.329.047.659.094.988.188L20.412.49c-.329-.047-.659-.141-.988-.188l-1.74%209.972Z'/%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M41.484%2025.655V8.345h6.303c2.117%200%203.763.517%204.986%201.552%201.176%201.035%201.787%202.493%201.787%204.327q0%201.481-.706%202.681c-.706%201.2-1.082%201.458-1.834%201.976l4.233%206.773H51.22l-3.01-5.55h-2.305v5.55h-4.421Zm5.644-13.97h-1.317v5.033h1.27q2.963%200%202.963-2.54c.047-1.646-.941-2.493-2.916-2.493M60.251%2025.655V12.062h-5.315V8.346h15.24v3.716h-5.315v13.593zM70.27%2025.655l6.021-8.984-5.597-8.278h5.409l3.057%205.315%203.01-5.315h5.221l-5.644%208.466%205.974%208.796h-5.409l-3.481-5.879-3.293%205.879z'/%3e%3c/g%3e%3c/svg%3e)\n\n$213,591,000,000\n\n185,000\n\n1934\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='168'%20height='39'%3e%3cpath%20fill='%23f4f4e4'%20d='M25.6%2023.63c2.8-6.01.78-13.17-4.74-16.83%202.15-2.21%204.48-4.4%206.93-6.49-2.87%201.7-5.58%203.64-8.13%205.79C13.09%202.68%205%205.22%201.57%2011.79a13.41%2013.41%200%200%200%201.72%2014.94C.73%2032.29.32%2036.74%202.54%2038.25c2.43%201.61%207.69-1.32%2010.89-6.08%200%200-4.89%204.41-7.58%203.4-1.65-.62-1.65-3.16-.3-6.78%205.31%203.9%2012.66%203.36%2017.35-1.27l.48.89c5.84-.48%2023.28-.94%2023.28-.94-.04-.82-11.59-.03-21.06-3.83ZM1.66%2017.97c0-6.52%205.3-11.8%2011.82-11.79%201.68%200%203.34.36%204.87%201.06A64.2%2064.2%200%200%200%204.08%2025.13a11.8%2011.8%200%200%201-2.42-7.16m11.79%2011.8c-2.65%200-5.22-.88-7.3-2.53%202.34-5.27%207.09-12.34%2013.58-19.25%205.04%203.17%206.92%209.61%204.39%2015-2.05-.92-3.94-2.15-5.6-3.65l3.56%206.67a11.8%2011.8%200%200%201-8.62%203.75ZM105.58%2016.75l2.18-2.9h-7.61l1.87-2.49h7.62l2.19-2.9H96.64L86.19%2022.32h15.19l2.18-2.9h-7.61l2.01-2.67zM116.12%208.46l-10.44%2013.86h7.58L123.7%208.46zM141.38%208.46l-5.3%207.03-1.63-7.03h-5.92l-10.44%2013.86h5.01l5.24-6.96%201.62%206.96h5.98l10.45-13.86zM166.15%208.46h-12.18c-2.01%200-3.9.94-5.1%202.54l-6.29%208.35c-.25.32-.38.71-.38%201.12%200%201.02.83%201.86%201.85%201.86h12.18c2.01%200%203.9-.94%205.11-2.54l1.52-1.98h1.76l2.2-2.97h-9.33l-2.97%203.91c-.31.42-.8.66-1.33.66h-2.15a.49.49%200%200%201-.49-.49c0-.1.03-.21.1-.29L155.6%2012c.31-.42.8-.67%201.33-.66h2.15c.27%200%20.49.22.49.49%200%20.1-.04.2-.1.29l-.81%201.08h7.57l1.34-1.78c.62-.81.46-1.98-.36-2.59-.32-.25-.72-.38-1.13-.38l.07.02ZM90.42%2010.32c0-1.02-.83-1.85-1.85-1.85H76.39c-2.01%200-3.9.94-5.11%202.54l-6.29%208.35c-.61.83-.44%201.99.39%202.6.32.24.7.36%201.1.37h12.18c2.01%200%203.9-.94%205.11-2.54l6.29-8.35c.24-.32.37-.72.37-1.12Zm-8.47%201.81L77%2018.75c-.31.42-.8.67-1.33.66h-2.19c-.27%200-.48-.22-.48-.49%200-.1.03-.2.09-.28l4.95-6.63c.31-.42.81-.66%201.33-.66h2.15c.27%200%20.49.22.49.49%200%20.1-.04.2-.1.29z'/%3e%3cpath%20fill='%23f4f4e4'%20d='M61.77%2015.73a6.32%206.32%200%200%200%203.68-2.39l1.45-1.91c.62-.81.46-1.98-.36-2.59-.32-.25-.72-.38-1.13-.38H50.04L39.59%2022.32h15.9c2.01%200%203.9-.94%205.11-2.54l1.48-1.98c.19-.26.3-.57.3-.89%200-.47-.22-.92-.6-1.2v.02Zm-7.03%201.8-.94%201.25c-.31.42-.8.66-1.33.66h-3.1l1.98-2.67h2.97c.27%200%20.49.22.49.49%200%20.1-.03.21-.1.29h.03Zm4.06-5.39L58%2013.2c-.32.41-.81.66-1.33.65h-3.1l1.87-2.49h2.97c.27%200%20.49.22.49.49%200%20.1-.04.2-.1.29'/%3e%3c/svg%3e)\n\n$177,569,000,000\n\n170,000\n\n1934\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='252'%20height='39'%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M3.17%2019.25h4.06L4.77%2030.86h6.49l-.6%202.84H.1l3.06-14.46ZM16%2020.85c2.22-1.84%205.03-2%206.09-2%205.77%200%206.45%204.14%205.69%207.67-1.22%205.77-5.69%207.53-9.13%207.53-3.84%200-6.97-2.12-5.83-7.51.2-.96.98-3.84%203.18-5.69m3.32%2010.25c2.86%200%203.9-2.64%204.32-4.65.42-2.02.16-3.02-.14-3.66-.42-.8-1.3-1.04-2.18-1.04-2.64%200-3.84%202.28-4.39%204.76-.48%202.3-.28%204.59%202.38%204.59ZM39.81%2023.8c.14-1.46-.78-2-1.92-2-2.42%200-3.62%202.22-4.19%204.87-.2.88-.94%204.52%202.16%204.52%202.12%200%202.66-1.54%202.86-2.1h4.16C41.9%2033.62%2037.21%2034%2035.33%2034c-1.4%200-3.82-.24-5.09-1.92-1.22-1.68-1-3.98-.68-5.49.42-1.98%201.3-3.96%202.98-5.51%201.84-1.68%203.84-2.12%205.95-2.12%202.34%200%204%20.56%204.89%201.76.9%201.24.64%202.54.54%203.08H39.8ZM47.33%2019.25h4.06l-1.34%206.35%205.97-6.35h4.75l-6.33%206.37%203.66%208.09h-4.97l-3.16-7.69-1.64%207.69h-4.07l3.06-14.46ZM62.69%2019.25h4.05l-1.18%205.65h4.82l1.18-5.65h4.06l-3.06%2014.46h-4.07l1.24-5.85h-4.85l-1.24%205.85h-4.02l3.06-14.46ZM78.34%2019.29h10.85l-.58%202.76h-6.89l-.64%203h6.49l-.6%202.76h-6.49l-.64%203.08h7.05l-.6%202.8H75.28l3.06-14.42ZM91.7%2019.29h10.85l-.58%202.76h-6.89l-.64%203h6.49l-.6%202.76h-6.49l-.64%203.08h7.05l-.6%202.8H88.64l3.06-14.42ZM105.13%2019.25h6.11c1.72%200%203.98.18%205.27%201.2%201.82%201.46%201.9%203.84%201.44%205.99-.68%203.2-2.2%205.57-5.37%206.71-1.6.56-3.36.56-4.37.56h-6.15l3.06-14.46Zm1.64%2011.67h1.72c2.66-.02%204.6-1.16%205.33-4.52.92-4.39-2.36-4.39-3.58-4.39l-1.58-.02-1.88%208.93ZM128.27%2019.25h6.31l.34%209.79%204.35-9.79%206.31-.02-3.06%2014.48h-3.78l2.76-12.13-6.01%2012.13h-3.6l-.7-12.23-2.5%2012.23h-3.46l3.06-14.46ZM152.9%2019.25h4.89l2.64%2014.46h-4.52l-.38-2.9h-5.79l-1.6%202.9h-4l8.77-14.46Zm2.26%208.89-.58-6.07h-.06l-3.28%206.07zM165.01%2019.25h6.69c2.6%200%203.56.16%204.22%201.04.36.44.74%201.24.42%202.8-.34%201.58-1.12%202.26-1.9%202.68-1.04.58-1.94.68-2.36.74l-.02.08c2.8.08%202.68%201.32%202.54%203.54-.08.98-.2%202.54-.08%203.56h-4.35c-.06-.88.08-1.98.22-3.26.18-1.74.26-2.38-1.54-2.38h-1.68l-1.2%205.65h-4.02l3.06-14.46Zm2.72%206.21h1.5c.88%200%201.32%200%201.68-.12.94-.28%201.3-1.18%201.4-1.64.38-1.78-1.18-1.78-2.34-1.78h-1.5zM182.16%2022.11h-4.41l.6-2.86h12.95l-.6%202.86h-4.5l-2.46%2011.59h-4.05l2.46-11.59ZM192.71%2019.25h4.12l-3.06%2014.46h-4.12zM199.52%2019.25h5.53l2.6%2010.77%202.24-10.77h3.5l-3.06%2014.46h-5.41l-2.6-11.23-2.34%2011.23h-3.52z'/%3e%3c/g%3e%3cg%20fill='%23f4f4e4'%3e%3cpath%20d='M235.58%2015.36%20239.91.72c.05-.19-.18-.32-.32-.18l-13.75%2014.82h-60.08c-.24%200-.25.37-.01.37l58.74%201.29%203.7.08%203.55.08.22-1.82h-4.41l7.42-6.76-1.29%206.76-1.89%209.89-2.49%2013.04c-.04.23.3.31.36.08l3.38-13.75%2018.74-8.92c.18-.09.12-.35-.08-.35h-16.13Zm-.51%201.89%206.97.15-8.38%204.97%201.4-5.13Z'/%3e%3cpath%20d='m224.92%2017.94-1.18-.04-6.92%207.07c-.16.17.08.43.26.27l7.85-7.3ZM230.74%2025.73l.21-1.85-16.16%209.48c-.2.12-.04.43.18.33l15.77-7.95Z'/%3e%3c/g%3e%3c/svg%3e)\n\n$106,334,000,000\n\n121,000\n\n1912\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='291'%20height='14'%3e%3cpath%20fill='%23f4f4e4'%20fill-rule='evenodd'%20d='M.22%206.87c0%203.21.65%207.04%205.6%207.04h12.11V5.32H8.45v3.55h5.82v1.66H6.62c-2.87%200-2.45-2.79-2.45-3.61%200-2.04.38-3.15%202.28-3.15h11.48V.08H6.5C1.99.08.22%202.75.22%206.87M21.36%2013.92h15.42v-3.38H25.22V8.88h11.56V5.53H25.22V4.06h11.56V.08H21.36zM53.23%2010.28%2045.47.08h-5.25v13.84h3.59V3.72l7.77%2010.2h5.25V.08h-3.6zM60.73%2013.92h15.41v-3.38H64.58V8.88h11.56V5.53H64.58V4.06h11.56V.08H60.73zM96.83%205.01c0-1.92-.04-4.93-4.62-4.93H79.59v13.83h3.71V9.87h5.77l3.23%204.04h4.8l-3.45-4.44c2.53-.38%203.2-2.17%203.2-4.47Zm-5.68%201.48H83.3V3.88h7.91c1.06%200%201.8.31%201.8%201.17s-.17%201.43-1.86%201.43ZM123.31.08h-3.85v13.84h13.87v-3.38h-10.02zM105.23.08l-7.77%2013.83h4.23l1.52-2.72h9.04l1.51%202.72h4.23L110.23.08zm-.11%207.7%202.61-4.65%202.61%204.65zM156.4.08h-11.42v13.83h12.11c4.64%200%205.59-2.92%205.59-7.04S160.91.08%20156.4.08m-.11%2010.46h-7.65V3.78h7.82c2.13%200%202.28%201.34%202.28%203.15%200%201.66.04%203.61-2.45%203.61M195.93%2010.28%20188.16.08h-5.25v13.84h3.6V3.72l7.76%2010.2h5.25V.08h-3.59zM208.96.08l-7.77%2013.83h4.23l1.52-2.72h9.04l1.51%202.72h4.23L213.96.08h-4.99Zm-.11%207.7%202.61-4.65%202.61%204.65zM172.07%206.04%20167.14.08h-5.03l7.94%209.05v4.79h3.94V9.13l7.94-9.05h-5.03zM233.65%209.72%20229.09.08h-5.94v13.84h3.6V3.36L232%2013.92h3.31l5.26-10.56v10.56h3.59V.08h-5.94zM248.32.08v13.84h3.89L252.18.08zM254.91%206.87c0%204.12.95%207.04%205.6%207.04h10.9v-3.36s-8.45-.02-10.11-.02c-2.49%200-2.45-1.95-2.45-3.61%200-1.81.15-3.15%202.28-3.15h10.28V.08h-10.22c-4.51%200-6.28%202.66-6.28%206.79M286.7%205.5h-8.34c-.6%200-1.27-.17-1.27-.83s.67-.83%201.27-.83c1.66%200%2011.96-.01%2011.96-.01V.46h-12.88c-3.28%200-4.08%201.69-4.08%204.21s.8%204.21%204.08%204.21h8.34c.6%200%201.27.17%201.27.83s-.67.83-1.27.83c-1.65%200-11.96.02-11.96.02v3.36h12.88c3.28%200%204.08-1.69%204.08-4.21s-.8-4.21-4.08-4.21'/%3e%3c/svg%3e)\n\n$86,534,000,000\n\n117,000\n\n1952\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='123'%20height='28'%3e%3cpath%20fill='%23f4f4e4'%20d='M.04.82h3.04l5.45%206.91V.82h3.04v11.66H8.44L3.08%205.52v6.96H.04zM21.85%209.08c.62-.64.94-1.48.94-2.5q0-1.41-.96-2.37c-.64-.64-1.45-.96-2.41-.96s-1.77.33-2.41.97c-.62.64-.94%201.46-.94%202.45s.31%201.8.93%202.44c.61.62%201.41.94%202.4.94s1.8-.32%202.44-.97m-7.02%202.04c-1.22-1.19-1.81-2.68-1.81-4.49s.63-3.33%201.89-4.52C16.13.97%2017.64.39%2019.45.39s3.35.59%204.58%201.78c1.23%201.17%201.84%202.63%201.84%204.35%200%201.86-.62%203.39-1.87%204.61-1.23%201.17-2.76%201.77-4.57%201.77s-3.41-.59-4.61-1.78M31.48%206.07c1.05%200%201.57-.49%201.57-1.46s-.5-1.46-1.54-1.46h-.95v2.92zM27.52.82h4.64c1.16%200%202.09.32%202.83.94.76.67%201.16%201.57%201.16%202.71%200%201.61-.67%202.68-2.01%203.18l3.12%204.82h-3.64l-2.45-4.11h-.61v4.11h-3.04zM40.12%203.86h-2.47V.82h7.98v3.04h-2.47v8.62h-3.04zM47.54.82h3.04v4.12h4.27V.82h3.04v11.66h-3.04v-4.5h-4.27v4.5h-3.04zM64.12%206.07c1.05%200%201.57-.49%201.57-1.46s-.5-1.46-1.54-1.46h-.95v2.92zM60.16.82h4.64c1.16%200%202.09.32%202.83.94.76.67%201.16%201.57%201.16%202.71%200%201.61-.67%202.68-2.01%203.18l3.12%204.82h-3.64l-2.45-4.11h-.61v4.11h-3.04zM79.19%209.08c.62-.64.94-1.48.94-2.5q0-1.41-.96-2.37c-.64-.64-1.45-.96-2.41-.96s-1.77.33-2.41.97c-.62.64-.94%201.46-.94%202.45s.3%201.8.93%202.44c.61.62%201.42.94%202.41.94s1.8-.32%202.44-.97m-7.03%202.04c-1.22-1.19-1.81-2.68-1.81-4.49s.63-3.33%201.89-4.52C73.47.97%2074.98.39%2076.79.39s3.35.59%204.58%201.78c1.23%201.17%201.84%202.63%201.84%204.35%200%201.86-.62%203.39-1.87%204.61-1.23%201.17-2.76%201.77-4.57%201.77s-3.41-.59-4.61-1.78M89.16%206.18c1.2%200%201.8-.52%201.8-1.57s-.58-1.49-1.77-1.49h-1.04v3.06zM85.11.82h5.21c1.13%200%202.04.36%202.69%201.13.66.7.97%201.64.97%202.79s-.32%201.98-.97%202.65c-.64.68-1.52%201.04-2.6%201.04h-2.26v4.06h-3.04zM14.71%2025.83c-1.13-1.19-1.7-2.68-1.7-4.46s.58-3.23%201.7-4.43c1.17-1.23%202.62-1.84%204.35-1.84%202.34%200%204.09.97%205.27%202.92l-2.43%201.34c-.06-.15-.18-.32-.37-.52-.65-.73-1.49-1.1-2.5-1.1s-1.75.4-2.25%201.17c-.43.65-.64%201.51-.64%202.57s.26%201.92.76%202.54c.55.68%201.36%201.02%202.41%201.02.61%200%201.17-.2%201.68-.58.55-.41.85-.9.91-1.49h-2.68v-2.44h5.84v.64c0%201.98-.49%203.53-1.48%204.66-1.04%201.17-2.53%201.77-4.49%201.77-1.78%200-3.24-.59-4.38-1.78M30.83%2020.77c1.05%200%201.57-.49%201.57-1.46s-.5-1.46-1.54-1.46h-.95v2.92zm-3.96-5.25h4.64c1.16%200%202.09.32%202.83.94.76.67%201.16%201.57%201.16%202.71%200%201.61-.67%202.68-2.01%203.18l3.12%204.82h-3.64l-2.45-4.11h-.61v4.11h-3.04V15.51ZM39.2%2026.59c-1.04-.78-1.57-1.84-1.57-3.18v-7.89h3.04v7.25q0%202.1%202.1%202.1c.62%200%201.16-.17%201.53-.5.38-.35.58-.84.58-1.45v-7.4h3.04v7.55c0%201.48-.5%202.62-1.52%203.44-.93.73-2.16%201.1-3.68%201.1-1.4%200-2.57-.33-3.51-1.02M56.97%2021.55l3.85-6.03h3.04v11.66h-3.04v-6.84l-3.03%204.76h-1.61l-3.05-4.76v6.84h-3.05V15.52h3.05zM73.26%2021.55l3.85-6.03h3.04v11.66h-3.04v-6.84l-3.03%204.76h-1.61l-3.05-4.76h-.01v6.84h-3.04V15.52h3.05l3.85%206.03ZM88.96%2022.68l-1.23-3.56-1.25%203.56zm-2.94-7.16h3.48l4.32%2011.66h-3.29l-.79-2.16h-4.03l-.78%202.16h-3.24zM95.5%2015.52h3.05l5.36%206.91v-6.91h3.04v11.66h-3.05l-5.36-6.96v6.96H95.5zM95.5.82v3.04h24.42v23.32h3.04V.82z'/%3e%3c/svg%3e)\n\n$84,910,000,000\n\n100,000\n\n1939\n\n* * *\n\n![](data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20142%2033'%3e%3cpath%20fill='%23f4f4e4'%20d='M21.021%2032.622h-9.673c-.09%200-.179%200-.269-.09L3.287%2026.71c-.09-.09-.179-.179-.179-.269L.062%2017.037v-.269l3.045-10.21c0-.09.09-.179.179-.269L11.258.467c.09-.09.179-.09.269-.09h9.315c.09%200%20.179%200%20.269.09l7.972%205.822c.09.09.179.179.179.269l3.045%2010.121v.269l-2.956%209.494c0%20.09-.09.179-.179.269l-7.792%205.822c-.179.09-.269.09-.358.09m-9.227-.986h7.972c-3.135-3.045-6.27-5.732-9.494-8.151.269%202.597.806%205.374%201.523%208.151m-1.165-9.136c3.493%202.508%206.718%205.374%2010.121%208.599a89%2089%200%200%200%201.433-12.36c-4.299.896-8.33%202.239-11.554%203.762m12.45-3.315c-.179%203.762-.627%207.703-1.344%2011.733l6.449-4.747q-2.15-4.3-5.105-6.986m-18.72%207.076%206.18%204.568a60.5%2060.5%200%200%201-1.344-7.703%2030%2030%200%200%200-4.837%203.135m-2.955-8.33%202.418%207.524a30%2030%200%200%201%204.837-3.135c-2.418-1.612-4.747-3.135-7.255-4.389m22.303.448c1.881%201.791%203.583%203.941%204.926%206.628l2.418-7.524c-2.329.09-4.837.448-7.345.896M9.914%2011.842a51%2051%200%200%200%20.09%209.763c3.314-1.523%207.255-2.866%2011.465-3.762-2.508-1.881-5.105-3.045-7.792-4.299-1.254-.537-2.508-1.075-3.762-1.702m-8.51%204.927a65%2065%200%200%201%207.524%204.568c-.269-3.224-.269-6.449-.09-9.494-2.866%201.344-5.374%203.045-7.434%204.926m21.318-8.241c.358%202.866.448%205.912.448%208.867a60%2060%200%200%201%207.613-1.075c-2.418-2.866-5.016-5.374-8.061-7.792M10.72%2011.036c1.075.537%202.15.985%203.404%201.523%202.687%201.164%205.374%202.418%208.061%204.389%200-3.045-.09-6.091-.537-9.046-4.031.806-7.703%201.791-10.927%203.135M3.824%207.633l-2.239%207.613c1.881-1.612%204.21-3.045%206.807-4.299a22.2%2022.2%200%200%201-4.568-3.314m19.525.089a48.2%2048.2%200%200%201%207.255%206.897l-2.15-7.434zm-11.554-6.09c-.806%202.777-1.433%205.643-1.791%208.599a47%2047%200%200%201%2010.748-3.045c-2.418-1.881-5.285-3.583-8.957-5.553M4.361%206.737c1.344%201.344%202.866%202.418%204.658%203.493.269-2.687.806-5.374%201.523-7.972l-6.18%204.478Zm17.287-4.658c.358%201.523.627%203.135.896%204.747a44%2044%200%200%201%204.837-.537l-5.732-4.21Zm-8.151-.716c3.045%201.702%205.643%203.314%207.882%204.926-.269-1.612-.537-3.314-.985-4.926zM83.719%208.528l-5.732%2015.854h3.224l.985-2.777h5.643l.896%202.777h3.224L86.137%208.528zm-.717%2010.48%201.971-5.732%201.971%205.732h-3.941Zm22.93-5.553c0-2.687-1.881-4.837-5.105-4.837h-6.18v15.854h3.135v-6.359h2.239l3.135%206.359h3.583l-3.583-6.807c1.433-.627%202.777-1.971%202.777-4.21Zm-5.374%202.06h-2.956v-4.21h2.956c1.344%200%202.239.896%202.239%202.06%200%201.254-.896%202.15-2.239%202.15m20.242-2.06c0-2.687-1.881-4.837-5.105-4.837h-6.18v15.854h3.135v-6.359h2.239l3.135%206.359h3.583l-3.583-6.807c1.433-.627%202.777-1.971%202.777-4.21Zm-5.284%202.06h-2.956v-4.21h2.956c1.344%200%202.239.896%202.239%202.06%200%201.254-.896%202.15-2.239%202.15m8.867-6.987h3.135v15.854h-3.135zm16.301%207.882c.806.806%201.254%201.971%201.254%203.404%200%203.045-2.597%204.837-5.912%204.837-2.418%200-4.21-.537-5.822-2.06l1.971-1.971c.985.985%202.329%201.344%203.851%201.344%201.791%200%202.777-.717%202.777-1.971%200-.537-.179-.985-.448-1.344-.269-.269-.627-.448-1.433-.537l-1.881-.269c-1.344-.179-2.329-.627-3.045-1.344-.717-.717-1.164-1.791-1.164-3.135%200-2.866%202.06-4.837%205.553-4.837%202.15%200%203.762.537%205.105%201.881l-1.971%201.971c-.985-.985-2.239-1.075-3.224-1.075-1.612%200-2.418.896-2.418%201.971%200%20.358.09.806.448%201.164.269.269.806.537%201.433.627l1.881.269c1.433%200%202.418.448%203.045%201.075m-80.253%203.404c0%203.135-2.329%204.747-5.016%204.747-2.239%200-4.389-1.075-4.926-3.493l2.777-1.164c0%201.433.985%202.06%202.15%202.06%201.254%200%202.15-.806%202.15-2.239%200-1.344-.806-2.15-2.239-2.15h-.09v-2.508h.09c1.433%200%201.971-.896%201.971-1.971%200-1.344-.896-2.06-1.971-2.06s-1.881.717-1.971%201.881l-2.777-1.164c.537-2.15%202.418-3.404%204.658-3.404%202.777%200%204.837%201.881%204.837%204.568%200%201.702-.806%202.687-1.791%203.224%201.254.717%202.15%201.791%202.15%203.672ZM72.164%208.528h3.135v15.854h-3.135v-6.628H66.79v6.628h-3.135V8.528h3.135v6.449h5.374zM43.502%2021.695h5.016v2.777h-8.061V8.529h3.135c-.09%200-.09%2013.167-.09%2013.167Z'/%3e%3c/svg%3e)\n\n$51,949,000,000\n\n50,000\n\n1926\n\n* * *\n\n![](https://18theses.com/assets/logo-8-DIc9zQH5.svg)\n\n$10,663,000,000\n\n44,000\n\n1886\n\nNote: Data as of August 2025 from public sources\n\nBut Palantir’s addition will not be the last. Because today the Founders are back — in the hundreds — and they are backed by hundreds of billions of dollars of private capital to build in the national interest. However, their effort and capital alone is not enough to resurrect the American Industrial Base. We need a defense Reformation to upend the Monopsony and transform the way the government does business. Here is my treatise on how to get that done.\n\n* * *\n\nSection 2\n\n## The Department’s Heresy\n\n* * *\n\nEveryone, including the Russians and the Chinese, have given up on communism except for Cuba and the DOD. The only problem is that we are bad commies.\n\nWe run a centrally unplanned process that neither has the supposed advantages of a planned economy nor the (far superior) advantages of a free market. Bill Greenwalt [explains](https://breakingdefense.com/2021/03/competing-in-time-how-dod-is-losing-the-innovation-race-to-china/) the sins of our poor attempts at copying the Communists:\n\n* * *\n\n### This \\[ideology and management\\] approach, now deeply engrained in defense management culture, process, law, and regulation, is based on the concepts of scientific management that were once fashionable in the Soviet Union and at the vanguard of the 1950s U.S. auto industry before it was outcompeted by Japan in the 1970s. Centralized, predictive program budgeting, management, and oversight were then thought to be superior to the trial and error and messiness of time-constrained, decentralized experimentation and the seemingly wastefulness of having multiple sources rapidly prototyping potential solutions.\n\nBill Greenwalt\n\n* * *\n\nThere is no process that can save us. Reform will be painful. We must be very careful not to conflate pain with error. As world champion cyclist Greg LeMond said, “It doesn’t get easier, you just go faster.” Just as there is no pain-free world class cycling performance, innovation will always be painful, messy, and subject to retrospective bureaucratic critiques from those not in the arena.\n\nOur centralized, predictive program budgeting, management, and oversight process values time spent, not time saved. It values costs and effort, not value and outcomes.\n\nThe Great Schism has created a religion in government that is unaware or dismissive of power-law outcomes from power-law talent. In Silicon Valley we call them 10x or 100x engineers, meaning they are 10x to 100x as valuable and productive as normal engineers. We once understood this in defense, too: Rickover, Kelly Johnson, Ed Hall and [countless legendary talents fought the bureaucracy](https://www.firstbreakfast.com/s/heretics-and-heros) and got stuff done. We seem to generally appreciate that Usain Bolt is more than a generational talent — even the gold medalist at Paris 2024 was not faster than him. But this is also true for Tom Mueller, Elon Musk, Palmer Luckey, Brian Schimpf, Ryan Tseng, and the Founders at the First Breakfast. Reforming the system means renouncing the communist conformity that’s slowing us down and unleashing the charismatic leaders who can drive outcomes — in the boardroom and on the battlefield.\n\n* * *\n\nSection 3\n\n## The Theses of the Defense Reformation\n\n* * *\n\n* * *\n\n1\n\n### Monopsony is the root of what ails us.\n\nThe root of our pathology is a lack of competition inside of Defense. Avoid a monopsonistic buyer at all costs by approximating market mechanisms and dynamics as a key principle of the design of the DOD (e.g., the newly created Space Force is a worthy competimate to the NRO). What looks like duplication is insurance against complacency and unpredictability — there is nothing more costly than losing. When only Monopsony persists, things will not work, they will be expensive, and they will make us weaker. The last great Monopsony was Walmart. In the 90s their TV advertisements promoted everyday, low prices. The strategy was to squeeze suppliers on prices rather than encourage innovation. They never saw Amazon coming, and are now ⅓ of the size. Will we let that happen to America?\n\n* * *\n\n2\n\n### Cost-plus contracting makes the nation dumber, slower, and poorer.\n\nMaybe it is the right way to buy an aircraft carrier, but it is the wrong way for 95% of things. It robs any reward for going faster or developing innovative approaches, institutionalizing a lack of incentive to compete on price by valuing time spent over time saved. SpaceX reduced launch costs by 85% — that simply isn’t possible in a cost-type domain. In fact, NASA estimated the cost of developing the SpaceX rocket at $4 billion when SpaceX did it for $400 million. Cost-plus is the reason that defense costs grow faster than inflation and don’t result in compounding price performance decreases. In the commercial world, people are viewed as expensive, and technology is considered cheap. In government, there is a perversion where people are viewed as abundant, and technology is viewed as unaffordable. Meanwhile, Starship will reduce launch costs 100x over Falcon 9 and 1,000x over the progeny of cost-plus approaches in a timeline that is well inside the development loop of the $2 trillion, 30% available F-35.\n\n* * *\n\n### Cost-plus launch kept costs in the stratosphere. Commercial drove costs into the ground.\n\n* * *\n\nFalcon 9 was 10% of the cost of legacy\n\nStarship Heavy will be 1% of the cost of Falcon 9 at $10-20 per kg (no, that’s not missing any zeros)\n\nIn short, commercial innovation made launch costs 1,000x cheaper\n\n* * *\n\nFig 04\n\n### Launch cost per kilogram\n\nSource: CSIS Aerospace Security Project, PayloadResearch estimates (2024)\n\n* * *\n\n3\n\n### A budget is a plan, and no plan survives first contact.\n\nMilitary doctrine states plans are useless, even if planning is invaluable. “I support the President’s budget” is an evasion. No company could survive if it took two years to POM budget for projects internally (DOD's Program Objective Memorandum, or POM, process). They would be outcompeted. And that is what our adversaries are doing to us now. We must invest in closing the Cash Chain to close the Kill Chain. The fiscal OODA loop to move money around is not survivable. We must be able to reprogram money inside of 2 months, not 2 years. Messy and imperfect discretion is required. We require DevSecOps for budgets.\n\n* * *\n\n4\n\n### The person is the program: the primacy of people.\n\nThe Defense Officer Personnel Management Act (the rules that apply to how military officer careers and promotions are governed) must be reformed. There is a reason that Rickover was the Director of Naval Reactors for over thirty years and that all great programs had a leader who saw them to completion (Schriever and Intercontinental Ballistic Missiles, Groves and the atomic bomb, Boyd and and the F-16, Bierbauer and the Predator). Talent is not fungible. Talent-Problem fit is rare and hard and determinative. Rotations for officers every 2-3 years only ensures they haven’t had enough time to learn anything beyond surface-level platitudes. Knowledge and know-how compound. We need to care more about winning than about providing experiences to fill out a bingo card. Additionally, Congressional oversight can’t end with Program Element numbers. Which heretical individuals are Congress protecting and holding in place against the will of their service?\n\n* * *\n\n5\n\n### The only requirement is winning.\n\nThe most important projects don’t come from requirements. America’s cultural strengths are fundamentally creative and improvisational. The requirements process ensures we play to our weaknesses. In a fight, no one cares about the requirements document. The only requirement is winning. And winning requires engaging in the messy, overlapping, seemingly wasteful but actually efficient process of being better. Validating requirements leads to solving yesterday’s problem without today’s context. We have countless validated problems.\n\n* * *\n\n6\n\n### Put the pebble in the right shoe.\n\nYou can’t separate the roles of creating requirements and delivering capabilities. All value accretes in the seams between teams — this is an unnecessary seam between requirement and solution. No company could compete commercially today under such a structure. Instead we need more competition inside of government across programs with overlapping mandates. Rickover built and operated the subs. He constructed many of the safety standards he would then enforce, and he was “often forced to send letters to himself to [request](https://ahf.nuclearmuseum.org/ahf/profile/hyman-g-rickover/#:~:text=In%201949%2C,request%20certain%20things) things.” Innovation is a consequence of productivity. If you don’t produce, you can’t innovate. The LLM revolution was inspired by Google’s attempt to improve Google Translate 3% — not by blue sky thinking disconnected from reality.\n\n* * *\n\n7\n\n### Conway’s Law: you ship your org chart.\n\nConway’s Law reveals the connection between an organization’s internal structure and the results it delivers to end users. The core idea is that the way members of an organization communicate and collaborate will shape the design and character of the systems and projects it produces. The problem with Goldwater Nichols is that it didn’t go far enough. You can’t have a joint Department if Services have monopolies on their Title 10 equipping responsibilities. We need more competition amongst the services or you can say “joint” until you are purple in the face — it won’t make you joint. Conway’s Law leads to the profane conclusion that CJADC2 (Combined Joint All Domain Command and Control, the Department’s vision for machine-to-machine connection across services and allies to close kill chains) isn’t possible inside the Military Departments as currently conceived, with each developing its own set of capabilities for its service, and must be delivered either by the Office of the Secretary of Defense (OSD), the combatant commands (CCMDs), or by all the services competing for COCOM and component adoption of their solution (approximating a market mechanism). This is how we built ICBMs — with Army, Air Force, and Navy all competing. No Joint Program Offices. No Monopoly. Creative, fast, and ultimately cheaper results.\n\n* * *\n\n8\n\n### CCMDs need budget to introduce strategic competition.\n\nEnabling CCMDs as the buyers approximates market forces. Programs will have to respond to the needs and feedback not of a captive service alone but also the folks that must employ these capabilities in anger. Even a budgetary reallocation of 5% would enable this market mechanism. With a modicum of economic power, CCMDs can harness the defiant and creative American spirit by creating situations for Service PEOs to respond to. This is how free markets work.\n\n* * *\n\n9\n\n### National security is economic prosperity.\n\nDJI should not exist. The drone was an American birthright. But bad policy from the FAA, which prohibited beyond line of sight operations, and DOD’s rigid ITAR restrictions deprived America of untold economic prosperity. We got it right with the Jeep, GPS, and semiconductors — technologies where the government was the initial customer but not the most important in the final calculus. We must counter the Monopsonist’s desire for control. RAND thought Lockheed would dominate integrated circuits because it had fifty PhDs and Intel only had two. But Bob Noyce understood that military and intelligence customers were just a pit stop on the way to Moore’s Law. For another example, there has never been a dominant naval power that was not also a dominant commercial shipping power. China understands this. Do we?\n\n* * *\n\n10\n\n### Make the primes business-worthy.\n\nAmerica should demand that its primes have commercial businesses to subsidize taxpayer R&D and to prove they are competitive. Most of the primes today do not have commercial businesses. When they do, we are reminded that they are not competitive (see: Boeing and Starliner). In the 1980s, Raytheon tried to diversify by entering the commercial construction industry. Harvey Sapolsky notes, “this proved to be an expensive mistake because defense is like no other business in its forgiveness of cost overruns and time slippages: Raytheon could not manage construction and environmental cleanup projects, even for government customers, the way it was used to managing defense projects.” If GDIT is so good, why don’t they serve the commercial IT market? Because they can’t compete, having developed a business as far from the commercial market as the Galapagos Islands are from the mainland. Chinese primes only earn 30-40% of their revenue from the PLA; the remainder is commercial. Those cheap products your neighbor is buying on Amazon are subsidizing lethality which could be used against our men and women in uniform, much the same way that during the Cold War your purchase of an American car, camera, and cereal subsidized America’s lethality against her enemies.\n\n* * *\n\nFig 05\n\n### Defense revenue as a percentage of total revenue for 2023\n\n* * *\n\nUS\n\nDefense Revenue\n\nTotal Revenue\n\n73.4% Average\n\n* * *\n\nChina\n\nDefense Revenue\n\nTotal Revenue\n\n27.2% Average\n\nSource: DefenseNews Top 100 Defense Companies (2024)\n\n* * *\n\n11\n\n### Risk capital, not taxpayer capital.\n\nCost-reimbursed independent research and development (IRAD) is an indulgence. It isn’t real R&D. Cost-type contracting enables contractors to play with house money (reimbursed by taxpayers). Private R&D in the commercial world far outstrips government R&D. The 1960s are gone. Companies must invest their own capital — their asses must be in the hot seat if we want innovation. Apple didn’t charge you for their failed self-driving car in your last iPhone purchase. Contractors shouldn’t be able to charge you when their lab experiments run amok, either.\n\n* * *\n\n12\n\n### Small business programs should not be welfare.\n\nThe goal of our founder-driven, creatively destructive market system is for small business to get big, not to remain indentured servants. The Department should judge its small business efforts through the lens of market cap creation: wealth for Americans. The point of national security is to underwrite freedom and economic prosperity. Small Business Innovation Research (SBIR) programs should measure how many of their small business got big, not how many programs received follow-on funding. We want to have a vibrant, dynamic group of companies with many new entrants. In the last 50 years, Europe has created zero companies worth more than $100 billion. America created all of her $1 trillion companies in that time period. Our Defense Industrial Base and the bureaucracy that demanded it is European.\n\n* * *\n\n13\n\n### DOD and its proxy forces must stop competing with industry.\n\nFederally funded research and development centers (FFRDCs) have the false moral certitude of being “non-profits,” which is about as believable as America’s hospitals being non-profits. FASA’s Commercial Item Preference is the most violated law in the land. Government often seeks to recreate products industry has already developed. This is not a pathology unique to government — it’s in the commercial world, too. But in the commercial world the market is a harsh and quick judge of custom development. No such feedback mechanism exists in government (yet another strong argument for increasing competition inside of government). No Program Manager will recreate the wheel if a competing Program Manager is going to move faster than them by adopting something that works today. Also, it’s the law.\n\n* * *\n\n14\n\n### Productivity is more lethal than weapon stockpiles.\n\nWe obsess about stockpiles, but stockpiles are irrelevant. Our munition deliveries to Ukraine were Cold War-era kit sitting on shelves collecting dust while decades of innovation occurred. The consumption of 10 years of production in 10 weeks of fighting in Ukraine demonstrated that the rate of production was the actual weapon all along. We must be able to produce everything at speed and scale, we must design requirements and incentives for manufacturability, and we must never stop producing. No more participation trophies for having a weapon sitting on a shelf — it only counts if you can make it. Pontiac didn’t have a stockpile of antiaircraft guns they sold to the government during World War II, but they became the leading manufacturer of the 20mm Oerlikon and dramatically decreased production time per gun.\n\n* * *\n\n15\n\n### Reference architectures can’t be created, they emerge.\n\nGovernment attempts to avoid pain and vendor lock-in upfront will fail in the most drawn-out ways possible. For any interesting class of problem (i.e. non-trivial innovation) it isn’t possible to deductively design a reference architecture. Instead you must build and let the architecture emerge. You maximize the chance of getting it right by having multiple competing companies and programs with interoperability requirements at inception. Government Reference Architectures are the 21st century equivalent of Robert McNamara’s notorious Total Package Procurement (TPP), which produced failures like the F-111 and C-5A. TPP fell into the trap of trying to eliminate uncertainty and predict the chaos of the universe by inflexibly defining every program requirement and dollar spent, from R&D through production, before any work had actually been done. Chaos won.\n\n* * *\n\n16\n\n### Rule of law works.\n\nContractual agreements enable the government to get the protections it wants. Fearmongering that companies will turn off their capabilities when war starts is a tired excuse to exclude commercial companies, protect the legacy Defense Industrial Base, and justify violating FASA. The only companies that have ever tried to own the government’s data are in fact the legacy platform providers whose R&D was financed by the government in the first place. Why does this concern not exist in the commercial market but does in government? Because it isn’t real — there are simple contractual mechanisms to ensure the government has continuity of operations and desired flexibility. Let’s remove the excuse for why Mass must be in Latin with only the Monopsony’s priests delivering the sermon.\n\n* * *\n\n17\n\n### Let the people speak to the mission.\n\nMartin Luther taught that the people could ascertain God’s truth directly from the Bible — they didn’t need priests to interpret His meaning. Today, we are told companies building for Defense cannot possibly understand the warfighter and that even the warfighter can’t understand what he really needs, that his needs must be intermediated through the Acquisition’s priestly class. The result is countless Kafkaesque causality dilemmas. You can’t get clearances unless you have a classified contract, but you can’t get clearance unless you are part of the existing class of cleared people. The same is true for SCIF sponsorship and access to classified networks. The priestly class alone decides the timeline and schedule to let a company access the top secret network from its offices (Palantir has been waiting twenty years). There are too many monopolies, and we have long since passed the point where they resembled legitimate security concerns. It is time the church holds itself to SLAs and creates a transparent process to enable the industrial base. The Cardinals from the legacy primes have enriched themselves because they are the only ones with access behind the SAP door. Private industry will pay its own way here for this enabler. It does not require the government to front these funds. Enable American capital to show up and purchase network, SCIF, classified cloud compute, and clearances — all governed by investor confidence that the company and team can credibly turn that investment into value.\n\n* * *\n\n18\n\n### Warriors fight with guns and git.\n\nWarfighters need to know how to code, not because they will build industrial strength platforms that industry is delivering (they won’t, not without $10 billion and the nation’s top computer scientists), but because software is the most important and malleable weapon system. Software is a unique American strength and our warriors must develop fluency to understand how to wield the software industrial base to maximize lethality. Knowing if your feature request will take 1 hour, 1 day, 1 week, or 1 year to implement is critical. Knowing how to bend the software to your will is how you bend the enemy to your will. Software and its malleability will define the clock speed of the OODA loop.\n\n* * *\n\nConclusion\n\n## The Resurrection of the American Industrial Base\n\n* * *\n\n* * *\n\n### I hold it that a little rebellion now and then is a good thing, and as necessary in the political world as storms in the physical.\n\nThomas Jeffersonin a letter to James Madison\n\n* * *\n\nI nail these theses to the Pentagon Metro entrance not because I hate the Department and my nation, but because I love them profoundly.\n\nWe are in a state of undeclared emergency. For more than three decades, we’ve accepted a stagnant Defense Industrial Base born from a complacent Monopsony with no great power competition. We have prayed at the altar of process for too long. Change is now possible because we all realize there is something worse than change: irrelevance and obsolescence. We have no time to waste in resurrecting the American Industrial Base we depended on in the depths of the Cold War.\n\nIt was the American Industrial Base that underwrote American victory and Pax Americana. It can once again if we embrace it as our savior.\n\nShyam Sankar / Palantir CTO","size_bytes":47820},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\n\ndeclare module 'http' {\n  interface IncomingMessage {\n    rawBody: unknown\n  }\n}\napp.use(express.json({\n  verify: (req, _res, buf) => {\n    req.rawBody = buf;\n  }\n}));\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2210},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ReadingProgressProvider } from \"@/contexts/reading-progress-context\";\nimport Home from \"@/pages/home\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ReadingProgressProvider>\n        <TooltipProvider>\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </ReadingProgressProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":851},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Core Colors - Professional Palette */\n  --background: hsl(0, 0%, 4%); /* #0a0a0a dark background */\n  --foreground: hsl(60, 25%, 94%); /* #f4f4e4 cream text */\n  --card: hsl(0, 0%, 7%);\n  --card-foreground: hsl(60, 25%, 94%);\n  --popover: hsl(0, 0%, 4%);\n  --popover-foreground: hsl(60, 25%, 94%);\n  --primary: hsl(60, 25%, 94%);\n  --primary-foreground: hsl(0, 0%, 4%);\n  --secondary: hsl(0, 0%, 15%);\n  --secondary-foreground: hsl(60, 25%, 94%);\n  --muted: hsl(0, 0%, 25%);\n  --muted-foreground: hsl(0, 0%, 55%);\n  --accent: hsl(88, 16%, 53%); /* #8AA97A sage accent */\n  --accent-foreground: hsl(60, 25%, 94%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(60, 25%, 94%);\n  --border: hsl(0, 0%, 18%);\n  --input: hsl(0, 0%, 18%);\n  --ring: hsl(88, 16%, 53%);\n  \n  /* Chart Colors with Sage Primary */\n  --chart-1: hsl(88, 16%, 53%); /* sage primary */\n  --chart-2: hsl(88, 16%, 43%); /* darker sage */\n  --chart-3: hsl(88, 16%, 63%); /* lighter sage */\n  --chart-4: hsl(0, 0%, 40%); /* neutral gray */\n  --chart-5: hsl(0, 84%, 60%); /* accent red for highlights */\n  \n  /* Sidebar */\n  --sidebar: hsl(0, 0%, 7%);\n  --sidebar-foreground: hsl(60, 25%, 94%);\n  --sidebar-primary: hsl(60, 25%, 94%);\n  --sidebar-primary-foreground: hsl(0, 0%, 4%);\n  --sidebar-accent: hsl(88, 16%, 53%);\n  --sidebar-accent-foreground: hsl(60, 25%, 94%);\n  --sidebar-border: hsl(0, 0%, 18%);\n  --sidebar-ring: hsl(88, 16%, 53%);\n  \n  /* Typography */\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'JetBrains Mono', monospace;\n  --font-display: 'Space Grotesk', sans-serif;\n  \n  /* Spacing System */\n  --space-1: 8px;\n  --space-2: 16px;\n  --space-3: 24px;\n  --space-4: 32px;\n  --space-6: 48px;\n  --space-8: 64px;\n  --space-12: 96px;\n  --space-16: 128px;\n  \n  /* Content Width */\n  --content-max-width: 1200px;\n  \n  /* Section Padding */\n  --section-padding-desktop: 120px;\n  --section-padding-tablet: 60px;\n  --section-padding-mobile: 40px;\n  \n  /* Border Radius */\n  --radius: 0.5rem;\n  \n  /* Transitions */\n  --transition-base: 200ms ease;\n  --transition-slow: 300ms ease;\n  \n  /* Additional Professional Colors */\n  --flag-green: hsl(79, 31%, 30%);\n  --sage-light: hsl(88, 16%, 63%);\n  --sage-dark: hsl(88, 16%, 43%);\n}\n\n.dark {\n  --background: hsl(0, 0%, 4%);\n  --foreground: hsl(60, 25%, 94%);\n  --card: hsl(0, 0%, 7%);\n  --card-foreground: hsl(60, 25%, 94%);\n  --popover: hsl(0, 0%, 4%);\n  --popover-foreground: hsl(60, 25%, 94%);\n  --primary: hsl(60, 25%, 94%);\n  --primary-foreground: hsl(0, 0%, 4%);\n  --secondary: hsl(0, 0%, 15%);\n  --secondary-foreground: hsl(60, 25%, 94%);\n  --muted: hsl(0, 0%, 25%);\n  --muted-foreground: hsl(0, 0%, 55%);\n  --accent: hsl(88, 16%, 53%);\n  --accent-foreground: hsl(60, 25%, 94%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(60, 25%, 94%);\n  --border: hsl(0, 0%, 18%);\n  --input: hsl(0, 0%, 18%);\n  --ring: hsl(88, 16%, 53%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  html {\n    scroll-behavior: smooth;\n    background-color: hsl(0, 0%, 4%);\n    scrollbar-gutter: stable;\n  }\n  \n  body {\n    @apply bg-background text-foreground;\n    font-family: var(--font-sans);\n    font-size: 16px;\n    line-height: 1.6;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  /* Dramatic Typography Scale */\n  h1, h2, h3, h4, h5, h6 {\n    font-family: var(--font-display);\n    font-weight: 600;\n    line-height: 1.2;\n    letter-spacing: -0.02em;\n  }\n  \n  h1 {\n    font-size: clamp(48px, 10vw, 96px);\n    line-height: 1.1;\n  }\n  \n  h2 {\n    font-size: clamp(36px, 7vw, 64px);\n    line-height: 1.15;\n  }\n  \n  h3 {\n    font-size: clamp(28px, 5vw, 48px);\n  }\n  \n  h4 {\n    font-size: clamp(24px, 4vw, 36px);\n  }\n  \n  h5 {\n    font-size: clamp(20px, 3vw, 28px);\n  }\n  \n  h6 {\n    font-size: clamp(18px, 2.5vw, 24px);\n  }\n  \n  p {\n    font-size: clamp(16px, 1.8vw, 18px);\n    line-height: 1.7;\n  }\n  \n  /* Selection Colors */\n  ::selection {\n    background-color: hsl(88 16% 53% / 0.3);\n    color: hsl(var(--foreground));\n  }\n  \n  ::-moz-selection {\n    background-color: hsl(88 16% 53% / 0.3);\n    color: hsl(var(--foreground));\n  }\n  \n  /* Focus Visible */\n  :focus-visible {\n    outline: 2px solid hsl(var(--accent));\n    outline-offset: 2px;\n  }\n  \n  /* Professional Scrollbar Styling */\n  ::-webkit-scrollbar {\n    width: 12px;\n    height: 12px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background: hsl(0, 0%, 4%);\n    border-radius: 6px;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background: hsl(88 16% 53% / 0.3);\n    border-radius: 6px;\n    border: 2px solid hsl(0, 0%, 4%);\n    transition: background var(--transition-base);\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    background: hsl(88 16% 53% / 0.5);\n  }\n  \n  /* Firefox Scrollbar */\n  * {\n    scrollbar-width: thin;\n    scrollbar-color: hsl(88 16% 53% / 0.3) hsl(0, 0%, 4%);\n  }\n}\n\n@layer components {\n  /* Container with max width */\n  .container-custom {\n    width: 100%;\n    max-width: var(--content-max-width);\n    margin: 0 auto;\n    padding-left: var(--space-3);\n    padding-right: var(--space-3);\n  }\n  \n  /* Section Padding */\n  .section-padding {\n    padding-top: var(--section-padding-mobile);\n    padding-bottom: var(--section-padding-mobile);\n  }\n  \n  @media (min-width: 768px) {\n    .section-padding {\n      padding-top: var(--section-padding-tablet);\n      padding-bottom: var(--section-padding-tablet);\n    }\n  }\n  \n  @media (min-width: 1024px) {\n    .section-padding {\n      padding-top: var(--section-padding-desktop);\n      padding-bottom: var(--section-padding-desktop);\n    }\n  }\n  \n  /* 12-Column Grid System */\n  .grid-12 {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    gap: var(--space-3);\n  }\n  \n  @media (min-width: 768px) {\n    .grid-12 {\n      gap: var(--space-4);\n    }\n  }\n  \n  /* Professional Transitions */\n  .transition-base {\n    transition: all var(--transition-base);\n  }\n  \n  .transition-slow {\n    transition: all var(--transition-slow);\n  }\n  \n  /* Hover Effects */\n  .hover-lift {\n    transition: transform var(--transition-base);\n  }\n  \n  .hover-lift:hover {\n    transform: translateY(-4px);\n  }\n  \n  .hover-scale {\n    transition: transform var(--transition-base);\n  }\n  \n  .hover-scale:hover {\n    transform: scale(1.02);\n  }\n  \n  /* Flag Gradient */\n  .flag-gradient {\n    background: linear-gradient(180deg, hsl(var(--flag-green)) 0%, hsl(79 31% 25%) 100%);\n  }\n\n  /* Section Divider */\n  .section-divider {\n    height: 1px;\n    background: linear-gradient(90deg, transparent, hsl(88 16% 53% / 0.4), transparent);\n  }\n\n  /* Thesis Number */\n  .thesis-number {\n    background: linear-gradient(135deg, hsl(0 0% 16%) 0%, hsl(0 0% 10%) 100%);\n    border: 1px solid hsl(88 16% 53% / 0.5);\n  }\n  \n  /* Section Reveal Animation */\n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  .animate-fade-in-up {\n    animation: fadeInUp 0.6s ease-out;\n  }\n  \n  /* Staggered Animation Delays */\n  .animation-delay-200 {\n    animation-delay: 200ms;\n  }\n  \n  .animation-delay-400 {\n    animation-delay: 400ms;\n  }\n  \n  .animation-delay-600 {\n    animation-delay: 600ms;\n  }\n  \n  /* Button Hover Effects */\n  .button-hover {\n    position: relative;\n    overflow: hidden;\n    transition: all var(--transition-base);\n  }\n  \n  .button-hover::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 0;\n    height: 0;\n    border-radius: 50%;\n    background: hsl(88 16% 53% / 0.2);\n    transform: translate(-50%, -50%);\n    transition: width var(--transition-slow), height var(--transition-slow);\n  }\n  \n  .button-hover:hover::before {\n    width: 300px;\n    height: 300px;\n  }\n  \n  /* Link Underline Animation */\n  .link-underline {\n    position: relative;\n    transition: color var(--transition-base);\n  }\n  \n  .link-underline::after {\n    content: '';\n    position: absolute;\n    bottom: -2px;\n    left: 0;\n    width: 0;\n    height: 2px;\n    background: hsl(88 16% 53%);\n    transition: width var(--transition-base);\n  }\n  \n  .link-underline:hover::after {\n    width: 100%;\n  }\n  \n  /* Card Hover */\n  .card-hover {\n    transition: all var(--transition-base);\n    border: 1px solid hsl(var(--border));\n  }\n  \n  .card-hover:hover {\n    border-color: hsl(88 16% 53% / 0.5);\n    box-shadow: 0 10px 30px -10px hsl(88 16% 53% / 0.2);\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  html {\n    scroll-behavior: auto;\n  }\n  \n  *, *::before, *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/* Animation Keyframes for Hero Section */\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px) rotate(12deg);\n  }\n  50% {\n    transform: translateY(-20px) rotate(15deg);\n  }\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 0.5;\n    transform: scale(1);\n  }\n  50% {\n    opacity: 0.8;\n    transform: scale(1.05);\n  }\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n@media print {\n  @page {\n    margin: 1.5cm;\n    size: A4;\n  }\n\n  html, body {\n    background: white !important;\n    color: black !important;\n  }\n\n  header, nav, footer {\n    display: none !important;\n  }\n\n  button, .hover-lift, .button-hover {\n    display: none !important;\n  }\n\n  .section-divider {\n    background: #e5e5e5 !important;\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    color: black !important;\n    page-break-after: avoid;\n  }\n\n  p, li {\n    color: black !important;\n  }\n\n  .thesis-number {\n    background: #f5f5f5 !important;\n    border: 1px solid #d5d5d5 !important;\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n\n  [data-state=\"closed\"],\n  [data-state=\"open\"] {\n    display: block !important;\n    height: auto !important;\n    overflow: visible !important;\n    animation: none !important;\n  }\n\n  .data-\\[state\\=closed\\]\\:animate-accordion-up,\n  .data-\\[state\\=open\\]\\:animate-accordion-down {\n    animation: none !important;\n  }\n\n  svg {\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n\n  a {\n    color: #0066cc !important;\n    text-decoration: underline;\n  }\n\n  table {\n    page-break-inside: avoid;\n  }\n\n  .bg-accent {\n    background: #f5f5f5 !important;\n    print-color-adjust: exact;\n    -webkit-print-color-adjust: exact;\n  }\n\n  .border-accent {\n    border-color: #d5d5d5 !important;\n  }\n\n  .text-muted, .text-muted-foreground {\n    color: #666 !important;\n  }\n}\n","size_bytes":10676},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/american-flag.tsx":{"content":"import { cn } from \"@/lib/utils\";\n\ninterface AmericanFlagProps {\n  className?: string;\n}\n\nexport default function AmericanFlag({ className }: AmericanFlagProps) {\n  return (\n    <svg \n      className={cn(\"inline-block\", className)} \n      viewBox=\"0 0 120 80\" \n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      {/* Flag stripes */}\n      <rect x=\"0\" y=\"0\" width=\"120\" height=\"80\" fill=\"#f4f4e4\"/>\n      <rect x=\"0\" y=\"6.15\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"18.46\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"30.77\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"43.08\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"55.38\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      <rect x=\"0\" y=\"67.69\" width=\"120\" height=\"6.15\" className=\"flag-gradient\"/>\n      \n      {/* Canton */}\n      <rect x=\"0\" y=\"0\" width=\"48\" height=\"43.08\" fill=\"#2a2a2a\"/>\n      \n      {/* Stars (simplified grid pattern) */}\n      <g fill=\"#f4f4e4\">\n        <circle cx=\"6\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"14\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"22\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"30\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"38\" cy=\"5\" r=\"1.5\"/>\n        <circle cx=\"10\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"18\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"26\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"34\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"42\" cy=\"11\" r=\"1.5\"/>\n        <circle cx=\"6\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"14\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"22\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"30\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"38\" cy=\"17\" r=\"1.5\"/>\n        <circle cx=\"10\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"18\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"26\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"34\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"42\" cy=\"23\" r=\"1.5\"/>\n        <circle cx=\"6\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"14\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"22\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"30\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"38\" cy=\"29\" r=\"1.5\"/>\n        <circle cx=\"10\" cy=\"35\" r=\"1.5\"/>\n        <circle cx=\"18\" cy=\"35\" r=\"1.5\"/>\n        <circle cx=\"26\" cy=\"35\" r=\"1.5\"/>\n        <circle cx=\"34\" cy=\"35\" r=\"1.5\"/>\n        <circle cx=\"42\" cy=\"35\" r=\"1.5\"/>\n      </g>\n    </svg>\n  );\n}\n","size_bytes":2345},"client/src/components/conclusion-section.tsx":{"content":"export default function ConclusionSection() {\n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\" data-testid=\"section-conclusion\">\n      <div className=\"max-w-3xl mx-auto space-y-12\">\n        <h2 className=\"font-display text-4xl sm:text-5xl font-bold leading-tight text-center\" data-testid=\"text-conclusion-heading\">\n          The Mathematical Proof of Professional Timeline\n        </h2>\n\n        <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n          <blockquote className=\"border-l-4 border-accent pl-6 italic text-xl\">\n            \"A little fact-checking now and then is a good thing, and as necessary in the professional world as audits in the financial.\"\n          </blockquote>\n\n          <div className=\"not-prose\">\n            <p className=\"text-muted uppercase tracking-wider text-sm font-mono mb-4\">Historical Verification</p>\n          </div>\n\n          <p>\n            I present these facts not because I hate the UX/UI profession, but because I love it profoundly.\n          </p>\n\n          <p>\n            We are in a state of <strong>undeclared resume inflation</strong>. For more than a decade, we've accepted <strong>chronologically impossible experience claims</strong> born from a <strong>complacent hiring process</strong> with no historical verification. We have <strong>believed inflated timelines for too long</strong>.\n          </p>\n\n          <p>\n            <strong>Change is now possible</strong> because we all realize there is something worse than correcting false claims: <strong>professional credibility collapse</strong>. We have no time to waste in <strong>establishing accurate professional standards</strong> we can depend on for reliable hiring.\n          </p>\n\n          <p className=\"text-xl font-medium text-foreground\">\n            It was accurate professional standards that underwrote industry credibility. They can once again if we embrace historical facts as our foundation.\n          </p>\n\n          <div className=\"mt-12 p-8 bg-accent/10 rounded-lg border border-accent\">\n            <h3 className=\"font-display text-2xl font-semibold mb-6\">Maximum Possible Experience Calculations</h3>\n            <p className=\"text-sm text-muted uppercase tracking-wider mb-4\">For 2025 Claims:</p>\n            <ul className=\"space-y-3 list-none\">\n              <li><strong>Don Norman (field creator):</strong> 32 years maximum (1993-2025)</li>\n              <li><strong>Early pioneers (1995 start):</strong> 30 years maximum</li>\n              <li><strong>Professional practice (2000 start):</strong> 25 years maximum</li>\n              <li><strong>Industry standards (2005 start):</strong> 20 years maximum</li>\n              <li><strong>Mainstream adoption (2010 start):</strong> 15 years maximum</li>\n            </ul>\n            <p className=\"mt-6 text-lg font-medium\">\n              <strong>REALITY CHECK:</strong> Anyone claiming 25+ years of dedicated UX/UI experience must be <strong>among the documented founders of the field</strong> with verifiable professional history.\n            </p>\n            <p className=\"mt-4 text-xl font-bold text-foreground\">\n              The evidence is definitive: Claims exceeding these mathematical limits are chronologically impossible and professionally misleading.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3377},"client/src/components/consolidation-chart.tsx":{"content":"import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  { year: '1993', companies: 51, label: 'Last Supper' },\n  { year: '2000', companies: 15 },\n  { year: '2010', companies: 8 },\n  { year: '2024', companies: 5, label: 'Today' }\n];\n\nexport default function ConsolidationChart() {\n  return (\n    <div className=\"w-full h-64\">\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 40 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--accent)\" opacity={0.3} />\n          <XAxis \n            dataKey=\"year\" \n            stroke=\"var(--muted-foreground)\"\n            tick={{ fill: 'var(--muted-foreground)', fontSize: 12 }}\n            label={{ value: 'Year', position: 'insideBottom', offset: -10, fill: 'var(--muted-foreground)' }}\n          />\n          <YAxis \n            stroke=\"var(--muted-foreground)\"\n            tick={{ fill: 'var(--muted-foreground)', fontSize: 12 }}\n            label={{ value: 'Number of Prime Contractors', angle: -90, position: 'insideLeft', fill: 'var(--muted-foreground)' }}\n          />\n          <Tooltip \n            contentStyle={{ \n              backgroundColor: 'hsl(0, 0%, 7%)', \n              border: '1px solid var(--accent)',\n              borderRadius: '8px',\n              color: 'var(--foreground)'\n            }}\n            labelStyle={{ color: 'var(--foreground)' }}\n            formatter={(value: number, name: string, props: any) => {\n              const label = props.payload.label;\n              return [`${value} companies${label ? ` (${label})` : ''}`, 'Prime Contractors'];\n            }}\n          />\n          <Bar \n            dataKey=\"companies\" \n            fill=\"var(--flag-green)\" \n            radius={[4, 4, 0, 0]}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n","size_bytes":1911},"client/src/components/defense-companies-table.tsx":{"content":"export default function DefenseCompaniesTable() {\n  const companies = [\n    {\n      name: \"Palantir\",\n      marketCap: \"$381,639,000,000\",\n      employees: \"4,164\",\n      founded: \"2003\",\n      logo: (\n        <svg viewBox=\"0 0 113 27\" className=\"w-full h-auto\" fill=\"#f4f4e4\">\n          <path d=\"M27.82 2.86h6.97c2.54 0 4.27.14 5.68 1.67C41.51 5.6 42 7.01 42 8.57s-.52 2.94-1.64 4.07c-1.1 1.09-2.54 1.79-6.29 1.79H30.7v9.25h-2.88zM30.7 12h3.43c1.91 0 4.82-.14 4.82-3.54S36.24 5.2 34.74 5.2h-4.03V12ZM51.35 23.68c-.2-.72-.26-1.41-.26-2.16-1.29 2.4-3.26 2.63-4.47 2.63-3.32 0-5.1-1.87-5.1-4.27 0-1.15.4-3 2.54-4.24 1.56-.86 3.86-.95 5.02-.95.69 0 1.13.03 1.96.09 0-1.79 0-2.57-.52-3.2-.55-.72-1.73-.95-2.51-.95-2.74 0-2.88 1.87-2.91 2.45h-2.71c.08-.75.17-1.76 1.01-2.74 1.1-1.21 3.14-1.56 4.67-1.56 2.11 0 4.35.66 5.13 2.13.46.87.49 1.56.49 2.22l-.12 6.92c0 .23.03 2.16.23 3.63zm-1.87-7.13c-1.1 0-5.22 0-5.22 2.94 0 .92.57 2.51 3 2.51 1.38 0 2.42-.55 3.09-1.56.61-.98.63-1.79.69-3.81-.49-.06-.89-.09-1.56-.09ZM56.08 2.86h2.71v20.82h-2.71zM70.44 23.68c-.2-.72-.26-1.41-.26-2.16-1.3 2.4-3.26 2.63-4.47 2.63-3.32 0-5.11-1.87-5.11-4.27 0-1.15.41-3 2.54-4.24 1.56-.86 3.86-.95 5.02-.95.69 0 1.12.03 1.96.09 0-1.79 0-2.57-.52-3.2-.55-.72-1.73-.95-2.51-.95-2.74 0-2.88 1.87-2.91 2.45h-2.71c.09-.75.17-1.76 1.01-2.74 1.09-1.21 3.14-1.56 4.67-1.56 2.11 0 4.35.66 5.13 2.13.46.87.49 1.56.49 2.22l-.11 6.92c0 .23.03 2.16.23 3.63zm-1.87-7.13c-1.1 0-5.22 0-5.22 2.94 0 .92.58 2.51 3 2.51 1.38 0 2.42-.55 3.09-1.56.6-.98.63-1.79.69-3.81-.49-.06-.89-.09-1.56-.09ZM75.21 10.88l-.03-1.67h2.71l.03 2.34c.32-.61 1.35-2.63 4.64-2.63 1.29 0 5.25.49 5.25 4.93v9.83h-2.77v-9.2c0-.95-.12-1.82-.78-2.48-.69-.66-1.64-.98-2.56-.98-1.96 0-3.78 1.41-3.78 4.32v8.33h-2.71v-12.8ZM88.65 9.2h2.57V6.12l2.68-.86v3.95h3.23v1.99H93.9v8.62c0 .72 0 1.93 1.93 1.93.55 0 1.06-.09 1.3-.15v2.11c-.49.09-1.27.17-2.25.17-2.48 0-3.66-.72-3.66-3.08v-9.6h-2.57V9.21ZM99.03 2.86h3.26v3.03h-3.26zm.29 6.34h2.71v14.47h-2.71zM104.53 12.14c0-.98-.06-1.99-.15-2.94h2.74l.06 2.8c.52-2.02 2.25-2.68 3.46-2.85a8.3 8.3 0 0 1 1.87-.06v2.65c-.14-.06-.32-.09-.52-.11-.2-.03-.46-.03-.78-.03-3.2 0-3.95 1.9-3.95 4.38v7.7h-2.74V12.15Z\"/>\n          <path d=\"M11.07.08C5.46.08.91 4.63.91 10.24S5.46 20.4 11.07 20.4s10.16-4.55 10.16-10.16S16.68.08 11.07.08m0 17.2c-3.88 0-7.02-3.15-7.02-7.02s3.14-7.02 7.02-7.02 7.02 3.14 7.02 7.02-3.14 7.02-7.02 7.02\"/>\n          <path d=\"m20.15 19.51-9.08 3.92-9.08-3.92L.48 22.4l10.59 4.52 10.59-4.52z\"/>\n        </svg>\n      )\n    },\n    {\n      name: \"RTX\",\n      marketCap: \"$213,591,000,000\",\n      employees: \"185,000\",\n      founded: \"1934\",\n      logo: <span className=\"text-sm font-bold tracking-wide\">RTX</span>\n    },\n    {\n      name: \"Boeing\",\n      marketCap: \"$177,569,000,000\",\n      employees: \"170,000\",\n      founded: \"1934\",\n      logo: <span className=\"text-xl font-bold tracking-wide\">BOEING</span>\n    },\n    {\n      name: \"Lockheed Martin\",\n      marketCap: \"$106,334,000,000\",\n      employees: \"121,000\",\n      founded: \"1912\",\n      logo: <span className=\"text-base font-bold tracking-wide\">LOCKHEED MARTIN</span>\n    },\n    {\n      name: \"General Dynamics\",\n      marketCap: \"$86,534,000,000\",\n      employees: \"117,000\",\n      founded: \"1952\",\n      logo: <span className=\"text-sm font-bold tracking-wide\">GENERAL DYNAMICS</span>\n    },\n    {\n      name: \"Northrop Grumman\",\n      marketCap: \"$84,910,000,000\",\n      employees: \"100,000\",\n      founded: \"1939\",\n      logo: <span className=\"text-sm font-bold tracking-wide\">NORTHROP GRUMMAN</span>\n    },\n    {\n      name: \"L3Harris\",\n      marketCap: \"$51,949,000,000\",\n      employees: \"50,000\",\n      founded: \"1926\",\n      logo: <span className=\"text-base font-bold tracking-wide\">L3HARRIS</span>\n    },\n    {\n      name: \"BAE Systems\",\n      marketCap: \"$10,663,000,000\",\n      employees: \"44,000\",\n      founded: \"1886\",\n      logo: <span className=\"text-base font-bold tracking-wide\">BAE</span>\n    }\n  ];\n\n  return (\n    <>\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <span className=\"text-muted uppercase tracking-wider text-xs font-mono\">Fig 03</span>\n              <h3 className=\"font-display text-2xl font-semibold\">Defense companies by market cap</h3>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full border-collapse\">\n                <thead>\n                  <tr className=\"border-b border-accent\">\n                    <th className=\"text-left py-4 px-4 text-sm font-mono text-muted uppercase tracking-wider\">Company</th>\n                    <th className=\"text-right py-4 px-4 text-sm font-mono text-muted uppercase tracking-wider\">Market Cap</th>\n                    <th className=\"text-right py-4 px-4 text-sm font-mono text-muted uppercase tracking-wider\">Employees</th>\n                    <th className=\"text-right py-4 px-4 text-sm font-mono text-muted uppercase tracking-wider\">Founded</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {companies.map((company, index) => (\n                    <tr \n                      key={company.name}\n                      className={`${index < companies.length - 1 ? 'border-b border-accent/50' : ''} hover:bg-accent/10 transition-colors`}\n                      data-testid={`row-company-${company.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                    >\n                      <td className=\"py-6 px-4\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-24 h-8 flex items-center justify-center\">\n                            {company.logo}\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"py-6 px-4 text-right font-mono text-lg\">{company.marketCap}</td>\n                      <td className=\"py-6 px-4 text-right font-mono text-muted\">{company.employees}</td>\n                      <td className=\"py-6 px-4 text-right font-mono text-muted\">{company.founded}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n\n            <p className=\"text-xs text-muted pt-4\">Note: Data as of August 2025 from public sources</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Continuation text after table */}\n      <section className=\"py-8 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-3xl mx-auto\">\n          <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p>\n              But Palantir's addition will not be the last. Because today the Founders are back — in the hundreds — and they are backed by hundreds of billions of dollars of private capital to build in the national interest. However, their effort and capital alone is not enough to resurrect the American Industrial Base. We need a defense Reformation to upend the Monopsony and transform the way the government does business. Here is my treatise on how to get that done.\n            </p>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n","size_bytes":7244},"client/src/components/defense-spending-chart.tsx":{"content":"import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\n\nconst data = [\n  { \n    year: '1977', \n    specialists: 6, \n    aerospace: 40, \n    commercial: 54 \n  },\n  { \n    year: '1989', \n    specialists: 20, \n    aerospace: 50, \n    commercial: 30 \n  },\n  { \n    year: '2001', \n    specialists: 45, \n    aerospace: 35, \n    commercial: 20 \n  },\n  { \n    year: '2013', \n    specialists: 70, \n    aerospace: 20, \n    commercial: 10 \n  },\n  { \n    year: '2025', \n    specialists: 86, \n    aerospace: 10, \n    commercial: 4 \n  }\n];\n\nexport default function DefenseSpendingChart() {\n  return (\n    <div className=\"w-full h-80\">\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 60 }}>\n          <defs>\n            <linearGradient id=\"specialists\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"hsl(0, 84%, 60%)\" stopOpacity={0.8}/>\n              <stop offset=\"95%\" stopColor=\"hsl(0, 84%, 60%)\" stopOpacity={0.1}/>\n            </linearGradient>\n            <linearGradient id=\"aerospace\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"hsl(220, 70%, 50%)\" stopOpacity={0.8}/>\n              <stop offset=\"95%\" stopColor=\"hsl(220, 70%, 50%)\" stopOpacity={0.1}/>\n            </linearGradient>\n            <linearGradient id=\"commercial\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"var(--flag-green)\" stopOpacity={0.8}/>\n              <stop offset=\"95%\" stopColor=\"var(--flag-green)\" stopOpacity={0.1}/>\n            </linearGradient>\n          </defs>\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--accent)\" opacity={0.3} />\n          <XAxis \n            dataKey=\"year\" \n            stroke=\"var(--muted-foreground)\"\n            tick={{ fill: 'var(--muted-foreground)', fontSize: 12 }}\n          />\n          <YAxis \n            stroke=\"var(--muted-foreground)\"\n            tick={{ fill: 'var(--muted-foreground)', fontSize: 12 }}\n            label={{ value: 'Budget Share (%)', angle: -90, position: 'insideLeft', fill: 'var(--muted-foreground)' }}\n          />\n          <Tooltip \n            contentStyle={{ \n              backgroundColor: 'hsl(0, 0%, 7%)', \n              border: '1px solid var(--accent)',\n              borderRadius: '8px',\n              color: 'var(--foreground)'\n            }}\n            labelStyle={{ color: 'var(--foreground)' }}\n            formatter={(value: number) => `${value}%`}\n          />\n          <Legend \n            wrapperStyle={{ paddingTop: '20px' }}\n            iconType=\"circle\"\n            formatter={(value: string) => {\n              const labels: Record<string, string> = {\n                specialists: 'Defense Specialists',\n                aerospace: 'Aerospace & Defense',\n                commercial: 'Commercial Companies'\n              };\n              return <span style={{ color: 'var(--muted-foreground)', fontSize: '12px' }}>{labels[value] || value}</span>;\n            }}\n          />\n          <Area \n            type=\"monotone\" \n            dataKey=\"commercial\" \n            stackId=\"1\"\n            stroke=\"var(--flag-green)\" \n            fill=\"url(#commercial)\" \n          />\n          <Area \n            type=\"monotone\" \n            dataKey=\"aerospace\" \n            stackId=\"1\"\n            stroke=\"hsl(220, 70%, 50%)\" \n            fill=\"url(#aerospace)\" \n          />\n          <Area \n            type=\"monotone\" \n            dataKey=\"specialists\" \n            stackId=\"1\"\n            stroke=\"hsl(0, 84%, 60%)\" \n            fill=\"url(#specialists)\" \n          />\n        </AreaChart>\n      </ResponsiveContainer>\n      <div className=\"text-center mt-4\">\n        <p className=\"text-xs text-muted\">\n          * Fall of Berlin Wall (1989) | Collapse of USSR (1989)\n        </p>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3888},"client/src/components/footer.tsx":{"content":"export default function Footer() {\n  return (\n    <footer className=\"border-t border-accent py-12 px-4 sm:px-6 lg:px-8 mt-24\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex flex-col md:flex-row justify-between items-center space-y-6 md:space-y-0\">\n          <div className=\"flex items-center space-x-2\">\n            <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12 2L2 7L12 12L22 7L12 2Z\" stroke=\"#f4f4e4\" strokeWidth=\"2\" strokeLinejoin=\"round\"/>\n              <path d=\"M2 17L12 22L22 17\" stroke=\"#f4f4e4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              <path d=\"M2 12L12 17L22 12\" stroke=\"#f4f4e4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n            <span className=\"font-display font-semibold\">UX/UI History Research</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-6 text-sm text-muted\">\n            <a href=\"#\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-privacy\">Privacy</a>\n            <a href=\"#\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-terms\">Terms</a>\n            <a href=\"#\" className=\"hover:text-foreground transition-colors\" data-testid=\"link-contact\">Contact</a>\n          </div>\n\n          <div className=\"text-sm text-muted\">\n            © 2025 UX/UI Professional Timeline Research\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":1525},"client/src/components/hero-section.tsx":{"content":"import { ArrowDown } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function HeroSection() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    setIsVisible(true);\n  }, []);\n\n  return (\n    <section className=\"relative min-h-screen flex flex-col items-center justify-center px-4 sm:px-6 lg:px-8 overflow-hidden\">\n      {/* Animated Design Element - Geometric Shapes */}\n      <div \n        className={`absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 transition-all duration-1000 ${\n          isVisible ? 'opacity-100 scale-100' : 'opacity-0 scale-95'\n        }`}\n        style={{ transitionDelay: '800ms' }}\n      >\n        <div className=\"relative\">\n          {/* Main geometric shape - design tool inspired */}\n          <div className=\"relative animate-float\">\n            <div \n              className=\"absolute w-32 h-32 sm:w-40 sm:h-40 md:w-48 md:h-48 rounded-lg bg-accent/10 rotate-12\"\n              style={{ animation: 'float 6s ease-in-out infinite' }}\n            />\n            <div \n              className=\"absolute w-32 h-32 sm:w-40 sm:h-40 md:w-48 md:h-48 rounded-lg bg-accent/5 rotate-6\"\n              style={{ animation: 'float 6s ease-in-out infinite 0.5s' }}\n            />\n            <div \n              className=\"absolute w-32 h-32 sm:w-40 sm:h-40 md:w-48 md:h-48 rounded-lg border border-accent/20\"\n              style={{ animation: 'pulse 3s ease-in-out infinite' }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"relative z-10 max-w-6xl w-full text-center space-y-16\">\n        {/* Title and Subtitle */}\n        <div className=\"space-y-8\">\n          <h1 \n            className={`font-display font-bold leading-[0.9] tracking-tighter transition-all duration-700 ${\n              isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n            }`}\n            style={{ \n              fontSize: 'clamp(3.5rem, 12vw, 9rem)',\n              transitionDelay: '100ms'\n            }}\n          >\n            <span className=\"block\">The History of</span>\n            <span className=\"block text-accent\">UX/UI Design</span>\n          </h1>\n          \n          <h2 \n            className={`font-display text-muted-foreground leading-tight transition-all duration-700 ${\n              isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n            }`}\n            style={{ \n              fontSize: 'clamp(1.5rem, 4vw, 3rem)',\n              transitionDelay: '300ms'\n            }}\n          >\n            A Comprehensive Analysis of\n            <br />\n            Professional Evolution & Claims\n          </h2>\n        </div>\n\n        {/* Author and Date */}\n        <div \n          className={`flex flex-col sm:flex-row items-center justify-center gap-4 sm:gap-8 text-sm font-mono text-muted transition-all duration-700 ${\n            isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n          }`}\n          style={{ transitionDelay: '500ms' }}\n        >\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-accent\">■</span>\n            <span data-testid=\"text-author\">Research by Design History Initiative</span>\n          </div>\n          <div className=\"hidden sm:block w-px h-4 bg-muted/30\" />\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-accent\">●</span>\n            <span data-testid=\"text-publish-date\">Published January 2025</span>\n          </div>\n          <div className=\"hidden sm:block w-px h-4 bg-muted/30\" />\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-accent\">▲</span>\n            <span data-testid=\"text-reading-length\">15 min read</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Scroll Indicator */}\n      <div \n        className={`absolute bottom-8 left-1/2 -translate-x-1/2 flex flex-col items-center gap-2 transition-all duration-700 ${\n          isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'\n        }`}\n        style={{ transitionDelay: '700ms' }}\n        data-testid=\"text-scroll-indicator\"\n      >\n        <span className=\"text-xs font-mono text-muted uppercase tracking-wider\">Scroll to read</span>\n        <ArrowDown \n          className=\"w-5 h-5 text-accent animate-bounce\"\n          style={{ animationDelay: '1s' }}\n        />\n      </div>\n\n    </section>\n  );\n}","size_bytes":4454},"client/src/components/introduction-section.tsx":{"content":"export default function IntroductionSection() {\n  return (\n    <section id=\"origins\" className=\"py-16 px-4 sm:px-6 lg:px-8\" data-testid=\"section-introduction\">\n      <div className=\"max-w-3xl mx-auto\">\n        <div className=\"space-y-8\">\n          <div>\n            <span className=\"text-muted uppercase tracking-wider text-sm font-mono\">Introduction</span>\n          </div>\n          \n          <h2 className=\"font-display text-4xl sm:text-5xl font-bold leading-tight\" data-testid=\"text-intro-heading\">\n            As professionals, we are in an undeclared state of confusion.\n          </h2>\n\n          <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p>\n              Around 2025, hiring managers in India claim 24 years of UX/UI experience, recruiters validate 20-year professional histories, and senior designers inflate their backgrounds by a decade. A decade later, we have interns with more authentic experience than self-proclaimed \"experts,\" 1,000+ false LinkedIn profiles claiming impossible timelines, and an unprecedented proliferation of fabricated UX credentials.\n            </p>\n\n            <p>\n              This is a hot war against professional integrity. The industry has empirically lost credibility. We must respond to this misinformation with facts.\n            </p>\n\n            <p>\n              We have a peer problem: <strong>Mathematical impossibility</strong>. \"Senior UX/UI Designer\" is a euphemism to avoid the embarrassment of acknowledging that the profession is younger than claimed. In 1993, Don Norman was the only person with \"User Experience\" in his job title. Today, thousands claim experience predating the field's existence. The UX/UI industry requires historical accuracy, or it will lose credibility and plunge hiring into darkness under fraudulent resumes.\n            </p>\n\n            <p className=\"text-xl font-medium text-foreground\">\n              Given the vast claims we have seen about experience in these decades of digital transformation, it would be reasonable to wonder: what went wrong?\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2172},"client/src/components/navigation-header.tsx":{"content":"import { Download } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport ShareButtons from \"./share-buttons\";\n\nexport default function NavigationHeader() {\n  const handlePdfDownload = () => {\n    window.print();\n  };\n\n  return (\n    <header className=\"fixed top-0 left-0 right-0 z-50 bg-background/95 backdrop-blur-sm border-b border-accent\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center space-x-2\">\n            <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12 2L2 7L12 12L22 7L12 2Z\" stroke=\"#f4f4e4\" strokeWidth=\"2\" strokeLinejoin=\"round\"/>\n              <path d=\"M2 17L12 22L22 17\" stroke=\"#f4f4e4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              <path d=\"M2 12L12 17L22 12\" stroke=\"#f4f4e4\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n            <span className=\"font-display font-semibold text-lg\">UX/UI Timeline</span>\n          </div>\n          \n          <div className=\"flex items-center space-x-3\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"hover-lift border-accent hover:bg-accent/50\"\n              onClick={handlePdfDownload}\n              data-testid=\"button-pdf-download\"\n            >\n              <span className=\"flex items-center space-x-2\">\n                <span>PDF</span>\n                <Download className=\"w-4 h-4\" />\n              </span>\n            </Button>\n            <ShareButtons />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":1734},"client/src/components/section1.tsx":{"content":"import UXToolEvolutionChart from \"./ux-tool-evolution-chart\";\nimport MaxExperienceChart from \"./max-experience-chart\";\n\nexport default function Section1() {\n  return (\n    <section id=\"revolution\" className=\"py-16 px-4 sm:px-6 lg:px-8\" data-testid=\"section-1\">\n      <div className=\"max-w-3xl mx-auto space-y-12\">\n        <div>\n          <span className=\"text-muted uppercase tracking-wider text-sm font-mono\">Section 1</span>\n        </div>\n\n        <h2 className=\"font-display text-4xl sm:text-5xl font-bold leading-tight\" data-testid=\"text-section1-heading\">\n          The Last Computer and Great Interface Revolution\n        </h2>\n\n        <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n          <p>\n            In 1973, after the mainframe era, Xerox wanted a <strong>Personal Computer Revolution</strong> and GUI development was pioneered by their PARC lab. The lab held demonstrations to show what computing could be—the so-called \"Alto Demo\"—to tell the industry that text-only interfaces would not survive. Today, we have modern UI.\n          </p>\n        </div>\n\n        <div id=\"tools\" className=\"space-y-6 py-8\">\n          <div className=\"space-y-2\">\n            <span className=\"text-muted uppercase tracking-wider text-xs font-mono\">Fig 01</span>\n            <h3 className=\"font-display text-2xl font-semibold\">UX Tool Evolution & User Growth</h3>\n          </div>\n\n          <div className=\"bg-accent/10 rounded-lg p-8 border border-accent\">\n            <UXToolEvolutionChart />\n          </div>\n        </div>\n\n        <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n          <p>\n            The most important consequence of the Alto wasn't just a better computer interface, but the <strong>coupling of human psychology to computing</strong> and the rise of <strong>Human-Computer Interaction</strong>. Innovation bred creativity and brought in the brilliant engineers and designers. This was the <strong>Great Interface Revolution</strong> of the computing industry.\n          </p>\n\n          <p>\n            Before the GUI revolution, only <strong>3% of computer users</strong> were non-technical. The vast majority of computing required programming skills and text commands. <strong>Xerox made computers visual. Apple made them friendly. Microsoft made them ubiquitous.</strong>\n          </p>\n        </div>\n\n        <div id=\"economics\" className=\"space-y-6 py-8\">\n          <div className=\"space-y-2\">\n            <span className=\"text-muted uppercase tracking-wider text-xs font-mono\">Fig 02</span>\n            <h3 className=\"font-display text-2xl font-semibold\">Max UX/UI Experience by Career Start</h3>\n          </div>\n\n          <div className=\"bg-accent/10 rounded-lg p-8 border border-accent\">\n            <MaxExperienceChart />\n          </div>\n\n          <div className=\"text-xs text-muted space-y-2\">\n            <p className=\"italic\">FIELD CREATORS → PIONEERS → PROFESSIONAL PRACTICE → INDUSTRY STANDARDS</p>\n            <p>Note: Only Field Creators (1993) and Early Pioneers (1995) can claim 24+ years of experience in 2025</p>\n          </div>\n        </div>\n\n        <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n          <p>\n            But today that 3% has ballooned to <strong>97% of computing users</strong> being non-technical. The revolution's fixation on <strong>user-centered design, intuitive interfaces, and accessible technology</strong> has made computing universally appealing, suitable not just for engineers but for everyone—a transformation only possible at the dawn of the personal computer age.\n          </p>\n\n          <p>\n            <strong>Working in UX/UI before 1990 meant you were essentially a computer scientist or industrial designer</strong>, not a dedicated user experience professional. That designation didn't exist.\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3960},"client/src/components/share-buttons.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Share2, Twitter, Linkedin, Facebook, Link as LinkIcon } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\ninterface ShareButtonsProps {\n  title?: string;\n  description?: string;\n  url?: string;\n}\n\nexport default function ShareButtons({ \n  title = \"The History of UX/UI Design | Professional Timeline Analysis\",\n  description = \"A comprehensive analysis of UX/UI professional evolution and chronologically impossible experience claims.\",\n  url\n}: ShareButtonsProps) {\n  const { toast } = useToast();\n  const [currentUrl, setCurrentUrl] = useState(url || '');\n\n  useEffect(() => {\n    if (!url && typeof window !== 'undefined') {\n      setCurrentUrl(window.location.href);\n    }\n  }, [url]);\n\n  const shareUrls = {\n    twitter: `https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(currentUrl)}`,\n    linkedin: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(currentUrl)}`,\n    facebook: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(currentUrl)}`,\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(currentUrl);\n      toast({\n        title: \"Link copied!\",\n        description: \"The link has been copied to your clipboard.\",\n      });\n    } catch (err) {\n      toast({\n        title: \"Failed to copy\",\n        description: \"Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleShare = (platform: string) => {\n    window.open(shareUrls[platform as keyof typeof shareUrls], '_blank', 'noopener,noreferrer,width=600,height=400');\n  };\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button \n          variant=\"outline\" \n          size=\"sm\" \n          className=\"gap-2\"\n          data-testid=\"button-share\"\n        >\n          <Share2 className=\"h-4 w-4\" />\n          Share\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-48\">\n        <DropdownMenuItem \n          onClick={() => handleShare('twitter')}\n          data-testid=\"button-share-twitter\"\n        >\n          <Twitter className=\"mr-2 h-4 w-4\" />\n          Share on Twitter\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => handleShare('linkedin')}\n          data-testid=\"button-share-linkedin\"\n        >\n          <Linkedin className=\"mr-2 h-4 w-4\" />\n          Share on LinkedIn\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => handleShare('facebook')}\n          data-testid=\"button-share-facebook\"\n        >\n          <Facebook className=\"mr-2 h-4 w-4\" />\n          Share on Facebook\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={copyToClipboard}\n          data-testid=\"button-copy-link\"\n        >\n          <LinkIcon className=\"mr-2 h-4 w-4\" />\n          Copy Link\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n","size_bytes":3194},"client/src/components/theses-section.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { useReadingProgress } from \"@/contexts/reading-progress-context\";\nimport { CheckCircle2, AlertTriangle, Calculator, Clock, TrendingUp, GraduationCap, MapPin, Smartphone, Search, Users, Globe, ArrowRight } from \"lucide-react\";\n\nexport default function ThesesSection() {\n  const { progress, markThesisAsRead } = useReadingProgress();\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const [hoveredThesis, setHoveredThesis] = useState<number | null>(null);\n\n  useEffect(() => {\n    observerRef.current = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting && entry.intersectionRatio >= 0.5) {\n            const thesisNumber = parseInt(\n              entry.target.getAttribute('data-thesis-number') || '0'\n            );\n            if (thesisNumber > 0) {\n              markThesisAsRead(thesisNumber);\n            }\n          }\n        });\n      },\n      { threshold: 0.5 }\n    );\n\n    const thesisElements = document.querySelectorAll('[data-thesis-number]');\n    thesisElements.forEach((el) => observerRef.current?.observe(el));\n\n    return () => {\n      observerRef.current?.disconnect();\n    };\n  }, [markThesisAsRead]);\n\n  const theses = [\n    {\n      number: 1,\n      title: \"Mathematical Timeline Impossibility: The 32-Year Maximum\",\n      icon: Calculator,\n      redFlags: [\"40+ years UX\", \"35 years UI design\", \"30 years mobile UX\"],\n      formula: \"Max_Experience = Current_Year - Field_Origin_Year\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            Don Norman coined \"User Experience\" in <span className=\"font-bold text-accent\">1993</span> at Apple. This establishes an absolute mathematical constraint:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4 font-mono text-sm\">\n            <p className=\"text-accent\">Max_UX_Experience = 2025 - 1993 = 32 years</p>\n            <p className=\"text-muted mt-2\">// Only Don Norman himself could claim this</p>\n          </div>\n          <div className=\"flex items-start space-x-3 bg-destructive/10 border border-destructive/30 rounded-lg p-4\">\n            <AlertTriangle className=\"w-5 h-5 text-destructive mt-0.5 flex-shrink-0\" />\n            <div>\n              <p className=\"font-semibold text-destructive\">Red Flag Claims:</p>\n              <ul className=\"mt-2 space-y-1 text-sm\">\n                <li>• \"40+ years of UX experience\" → Impossible by 8 years</li>\n                <li>• \"35 years designing user experiences\" → Predates the term by 3 years</li>\n                <li>• \"UX pioneer since the 1980s\" → Field didn't exist</li>\n              </ul>\n            </div>\n          </div>\n          <p className=\"text-sm text-muted italic\">\n            Reference: Our timeline chart shows only 100 professionals globally in 1993, rising to 800,000 in 2025.\n          </p>\n        </div>\n      )\n    },\n    {\n      number: 2,\n      title: \"Tool Availability Constraints: The Photoshop Fallacy\",\n      icon: TrendingUp,\n      redFlags: [\"Figma expert for 15 years\", \"Sketch veteran since 2005\", \"20 years with modern tools\"],\n      formula: \"Tool_Experience ≤ Min(Professional_Experience, Tool_Age)\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            Professional UI design tools have strict inception dates that create mathematical constraints on experience claims:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4\">\n            <table className=\"w-full text-sm\">\n              <thead>\n                <tr className=\"border-b border-accent/20\">\n                  <th className=\"text-left py-2 font-semibold\">Tool</th>\n                  <th className=\"text-left py-2 font-semibold\">Launch Year</th>\n                  <th className=\"text-left py-2 font-semibold\">Max Experience (2025)</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">Photoshop</td>\n                  <td className=\"py-2\">1988</td>\n                  <td className=\"py-2 text-accent\">37 years (not UI-specific)</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-bold\">Sketch</td>\n                  <td className=\"py-2 font-bold\">2010</td>\n                  <td className=\"py-2 font-bold text-accent\">15 years</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-bold\">Figma</td>\n                  <td className=\"py-2 font-bold\">2016</td>\n                  <td className=\"py-2 font-bold text-accent\">9 years</td>\n                </tr>\n                <tr>\n                  <td className=\"py-2\">Adobe XD</td>\n                  <td className=\"py-2\">2016</td>\n                  <td className=\"py-2 text-accent\">9 years</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4 font-mono text-sm\">\n            <p className=\"text-accent\">// Market share data (2024):</p>\n            <p className=\"text-muted\">Figma: 65% | Sketch: 10% | Photoshop: 8%</p>\n            <p className=\"text-muted mt-2\">// Figma overtook Sketch in 2020, just 4 years after launch</p>\n          </div>\n          <div className=\"flex items-start space-x-3 bg-destructive/10 border border-destructive/30 rounded-lg p-4\">\n            <AlertTriangle className=\"w-5 h-5 text-destructive mt-0.5 flex-shrink-0\" />\n            <div>\n              <p className=\"font-semibold text-destructive\">Impossible Claims:</p>\n              <ul className=\"mt-2 space-y-1 text-sm\">\n                <li>• \"15+ years Figma experience\" → Tool is only 9 years old</li>\n                <li>• \"Sketch user since 2005\" → Predates launch by 5 years</li>\n                <li>• \"20 years with collaborative design tools\" → Technology didn't exist</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      number: 3,\n      title: \"Role Non-Existence: When Jobs Weren't Even Imagined\",\n      icon: Users,\n      redFlags: [\"UX Designer in 1990\", \"UI Engineer before 2000\", \"Product Designer in 1995\"],\n      formula: \"Role_Experience ≤ Years_Since_Role_Creation\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            Specific UX/UI job titles emerged at documented points in history. Claims predating these points are mathematically impossible:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4\">\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center py-2 border-b border-accent/20\">\n                <span className=\"font-semibold\">Role Title</span>\n                <span className=\"font-semibold\">First Documented</span>\n              </div>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Interaction Designer</span>\n                  <span className=\"font-mono text-accent\">1990 (Bill Moggridge)</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Information Architect</span>\n                  <span className=\"font-mono text-accent\">1976 (Richard Saul Wurman)</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"font-bold\">UX Designer</span>\n                  <span className=\"font-mono text-accent font-bold\">1995 (post-Norman)</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"font-bold\">UI Designer</span>\n                  <span className=\"font-mono text-accent font-bold\">Late 1990s</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"font-bold\">Product Designer</span>\n                  <span className=\"font-mono text-accent font-bold\">2008 (Silicon Valley)</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>UX Researcher</span>\n                  <span className=\"font-mono text-accent\">2000s</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Design Systems Engineer</span>\n                  <span className=\"font-mono text-accent\">2014 (post-Material Design)</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4 font-mono text-sm\">\n            <p className=\"text-accent\">// Job market data shows:</p>\n            <p className=\"text-muted\">Pre-2000: &lt;100 UX roles globally</p>\n            <p className=\"text-muted\">2005: ~2,000 roles</p>\n            <p className=\"text-muted\">2010: 50,000 roles</p>\n            <p className=\"text-muted\">2025: 800,000+ roles</p>\n          </div>\n        </div>\n      )\n    },\n    {\n      number: 4,\n      title: \"Education Program Timeline: Academic Reality Check\",\n      icon: GraduationCap,\n      redFlags: [\"HCI degree from 1985\", \"UX certification before 2000\", \"Design bootcamp graduate 1990s\"],\n      formula: \"Education_Validity = Program_Exists(Year) ∧ Accredited(Institution)\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            Formal UX/UI education has a traceable history. Claims of degrees or certifications must align with institutional records:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4\">\n            <h4 className=\"font-semibold mb-3\">Academic Milestones</h4>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"font-mono text-accent\">1982:</span>\n                <span>First HCI conference (CHI) established</span>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"font-mono text-accent\">1990:</span>\n                <span>Carnegie Mellon launches first HCI Master's program</span>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"font-mono text-accent\">1994:</span>\n                <span>Stanford begins teaching Human-Computer Interaction</span>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"font-mono text-accent\">2003:</span>\n                <span>MIT Media Lab expands interaction design curriculum</span>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"font-mono text-accent\">2012:</span>\n                <span>First UX bootcamps appear (General Assembly)</span>\n              </div>\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"font-mono text-accent\">2015:</span>\n                <span>Industry certifications become widespread</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4 font-mono text-sm\">\n            <p className=\"text-accent\">// Maximum formal education timeline:</p>\n            <p className=\"text-muted\">HCI degree: 35 years (1990-2025)</p>\n            <p className=\"text-muted\">UX-specific degree: ~20 years</p>\n            <p className=\"text-muted\">Bootcamp certificate: 13 years max</p>\n          </div>\n        </div>\n      )\n    },\n    {\n      number: 5,\n      title: \"Industry Adoption Curves: The S-Curve Reality\",\n      icon: TrendingUp,\n      redFlags: [\"Enterprise UX in 1995\", \"Leading design systems in 2000\", \"Agile UX before 2005\"],\n      formula: \"Adoption_Rate = 1 / (1 + e^(-k(t-t₀)))\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            UX adoption followed a classic S-curve, with mathematically predictable inflection points:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4\">\n            <h4 className=\"font-semibold mb-3\">Industry Adoption Phases</h4>\n            <div className=\"space-y-3 text-sm\">\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"font-semibold\">Innovation Phase</span>\n                  <span className=\"font-mono text-accent\">1990-2000</span>\n                </div>\n                <p className=\"text-muted pl-4\">~100 companies experimenting, mostly tech giants</p>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"font-semibold\">Early Adoption</span>\n                  <span className=\"font-mono text-accent\">2000-2007</span>\n                </div>\n                <p className=\"text-muted pl-4\">2.5% of companies, Silicon Valley concentration</p>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"font-semibold\">Early Majority</span>\n                  <span className=\"font-mono text-accent\">2007-2015</span>\n                </div>\n                <p className=\"text-muted pl-4\">34% adoption, post-iPhone revolution</p>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"font-semibold\">Late Majority</span>\n                  <span className=\"font-mono text-accent\">2015-2020</span>\n                </div>\n                <p className=\"text-muted pl-4\">68% adoption, enterprise transformation</p>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"font-semibold\">Laggards</span>\n                  <span className=\"font-mono text-accent\">2020-present</span>\n                </div>\n                <p className=\"text-muted pl-4\">Final 16%, traditional industries</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4 font-mono text-sm\">\n            <p className=\"text-accent\">// S-curve formula for UX adoption:</p>\n            <p className=\"text-muted\">A(t) = 100% / (1 + e^(-0.35(t-2011)))</p>\n            <p className=\"text-muted mt-2\">// Where t = year, inflection at 2011</p>\n          </div>\n        </div>\n      )\n    },\n    {\n      number: 6,\n      title: \"Geographic Impossibilities: Location-Based Constraints\",\n      icon: MapPin,\n      redFlags: [\"UX lead in Mumbai 1995\", \"UI designer in Eastern Europe 1990s\", \"Remote UX before 2010\"],\n      formula: \"Local_Experience ≤ Min(Global_Experience, Regional_Adoption_Date)\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            UX/UI practices spread geographically over time. Regional adoption dates create location-specific experience limits:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4\">\n            <h4 className=\"font-semibold mb-3\">Regional UX Adoption Timeline</h4>\n            <table className=\"w-full text-sm\">\n              <thead>\n                <tr className=\"border-b border-accent/20\">\n                  <th className=\"text-left py-2\">Region</th>\n                  <th className=\"text-left py-2\">First Roles</th>\n                  <th className=\"text-left py-2\">Mainstream</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-semibold\">Silicon Valley</td>\n                  <td className=\"py-2 font-mono text-accent\">1995</td>\n                  <td className=\"py-2 font-mono\">2005</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">NYC/Boston</td>\n                  <td className=\"py-2 font-mono text-accent\">1998</td>\n                  <td className=\"py-2 font-mono\">2008</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">London</td>\n                  <td className=\"py-2 font-mono text-accent\">2000</td>\n                  <td className=\"py-2 font-mono\">2010</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">Western Europe</td>\n                  <td className=\"py-2 font-mono text-accent\">2003</td>\n                  <td className=\"py-2 font-mono\">2012</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">India</td>\n                  <td className=\"py-2 font-mono text-accent\">2005</td>\n                  <td className=\"py-2 font-mono\">2015</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">Eastern Europe</td>\n                  <td className=\"py-2 font-mono text-accent\">2008</td>\n                  <td className=\"py-2 font-mono\">2018</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">Latin America</td>\n                  <td className=\"py-2 font-mono text-accent\">2010</td>\n                  <td className=\"py-2 font-mono\">2020</td>\n                </tr>\n                <tr>\n                  <td className=\"py-2\">Africa/Middle East</td>\n                  <td className=\"py-2 font-mono text-accent\">2012</td>\n                  <td className=\"py-2 font-mono\">2022</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"flex items-start space-x-3 bg-destructive/10 border border-destructive/30 rounded-lg p-4\">\n            <AlertTriangle className=\"w-5 h-5 text-destructive mt-0.5 flex-shrink-0\" />\n            <div>\n              <p className=\"font-semibold text-destructive\">Geographic Red Flags:</p>\n              <ul className=\"mt-2 space-y-1 text-sm\">\n                <li>• \"UX designer in Bangalore since 1990\" → No roles until 2005</li>\n                <li>• \"Leading UX in Prague 1995\" → Region adopted 2008+</li>\n                <li>• \"Remote UX work since 2000\" → Infrastructure didn't exist</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      number: 7,\n      title: \"Technology Prerequisites: The Mobile UX Boundary\",\n      icon: Smartphone,\n      redFlags: [\"Mobile UX before 2007\", \"Touch interface expert 1990s\", \"Responsive design in 2005\"],\n      formula: \"Platform_Experience ≤ Platform_Age\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            Platform-specific UX experience is bounded by technology availability:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4\">\n            <h4 className=\"font-semibold mb-3\">Platform Launch Dates</h4>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span>Desktop GUI</span>\n                <span className=\"font-mono text-accent\">1973 (Xerox Alto)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Web Design</span>\n                <span className=\"font-mono text-accent\">1993 (Mosaic browser)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Flash/Interactive Web</span>\n                <span className=\"font-mono text-accent\">1996</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"font-bold\">Mobile Touch UX</span>\n                <span className=\"font-mono text-accent font-bold\">2007 (iPhone)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Tablet UX</span>\n                <span className=\"font-mono text-accent\">2010 (iPad)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Responsive Design</span>\n                <span className=\"font-mono text-accent\">2010 (Ethan Marcotte)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Voice UI</span>\n                <span className=\"font-mono text-accent\">2011 (Siri)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>AR/VR Design</span>\n                <span className=\"font-mono text-accent\">2016 (consumer VR)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>AI-assisted Design</span>\n                <span className=\"font-mono text-accent\">2022 (ChatGPT era)</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4 font-mono text-sm\">\n            <p className=\"text-accent\">// Maximum platform experience (2025):</p>\n            <p className=\"text-muted\">Mobile UX: 18 years (iPhone 2007)</p>\n            <p className=\"text-muted\">Responsive Design: 15 years</p>\n            <p className=\"text-muted\">AR/VR: 9 years</p>\n            <p className=\"text-muted\">AI Design: 3 years</p>\n          </div>\n        </div>\n      )\n    },\n    {\n      number: 8,\n      title: \"Methodology Evolution: Process Development Timeline\",\n      icon: Search,\n      redFlags: [\"Design thinking expert 1980s\", \"Agile UX since 1990\", \"Design sprints before 2010\"],\n      formula: \"Method_Experience ≤ Years_Since_Method_Formalized\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            UX methodologies were developed and formalized at specific points in history:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4\">\n            <h4 className=\"font-semibold mb-3\">Methodology Timeline</h4>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span>Usability Testing</span>\n                <span className=\"font-mono text-accent\">1981 (Xerox)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Heuristic Evaluation</span>\n                <span className=\"font-mono text-accent\">1990 (Nielsen)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Personas</span>\n                <span className=\"font-mono text-accent\">1998 (Alan Cooper)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Card Sorting</span>\n                <span className=\"font-mono text-accent\">1985 (formalized)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"font-bold\">Design Thinking</span>\n                <span className=\"font-mono text-accent font-bold\">2008 (IDEO popularized)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Lean UX</span>\n                <span className=\"font-mono text-accent\">2011 (Jeff Gothelf)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Design Sprints</span>\n                <span className=\"font-mono text-accent\">2016 (Google Ventures)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Jobs-to-be-Done</span>\n                <span className=\"font-mono text-accent\">2003 (Christensen)</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Atomic Design</span>\n                <span className=\"font-mono text-accent\">2013 (Brad Frost)</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4 font-mono text-sm\">\n            <p className=\"text-accent\">// Validation formula:</p>\n            <p className=\"text-muted\">If claim_date &lt; method_creation_date:</p>\n            <p className=\"text-muted pl-4\">return \"IMPOSSIBLE\"</p>\n            <p className=\"text-muted\">else:</p>\n            <p className=\"text-muted pl-4\">return min(current_year - method_date, claimed_years)</p>\n          </div>\n        </div>\n      )\n    },\n    {\n      number: 9,\n      title: \"Company Hiring Records: Corporate Timeline Verification\",\n      icon: Globe,\n      redFlags: [\"Google UX 1995\", \"Facebook designer 2000\", \"Apple UX team 1980s\"],\n      formula: \"Company_UX_Experience ≤ Years_Since_First_UX_Hire\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            Major companies began hiring UX professionals at documented dates. Claims must align with corporate records:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4\">\n            <h4 className=\"font-semibold mb-3\">First UX/UI Hires by Company</h4>\n            <table className=\"w-full text-sm\">\n              <thead>\n                <tr className=\"border-b border-accent/20\">\n                  <th className=\"text-left py-2\">Company</th>\n                  <th className=\"text-left py-2\">First UX Hire</th>\n                  <th className=\"text-left py-2\">Team Established</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-semibold\">Apple</td>\n                  <td className=\"py-2 font-mono text-accent\">1993 (Don Norman)</td>\n                  <td className=\"py-2 font-mono\">1995</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">Microsoft</td>\n                  <td className=\"py-2 font-mono text-accent\">1995</td>\n                  <td className=\"py-2 font-mono\">1998</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">Google</td>\n                  <td className=\"py-2 font-mono text-accent\">2001</td>\n                  <td className=\"py-2 font-mono\">2004</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">Amazon</td>\n                  <td className=\"py-2 font-mono text-accent\">1998</td>\n                  <td className=\"py-2 font-mono\">2002</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">Facebook</td>\n                  <td className=\"py-2 font-mono text-accent\">2006</td>\n                  <td className=\"py-2 font-mono\">2008</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">IBM</td>\n                  <td className=\"py-2 font-mono text-accent\">1997</td>\n                  <td className=\"py-2 font-mono\">2000</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2\">Airbnb</td>\n                  <td className=\"py-2 font-mono text-accent\">2009</td>\n                  <td className=\"py-2 font-mono\">2012</td>\n                </tr>\n                <tr>\n                  <td className=\"py-2\">Uber</td>\n                  <td className=\"py-2 font-mono text-accent\">2010</td>\n                  <td className=\"py-2 font-mono\">2013</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4 font-mono text-sm\">\n            <p className=\"text-accent\">// Example validation:</p>\n            <p className=\"text-muted\">\"20 years at Google UX\" → Google UX exists 24 years ✓</p>\n            <p className=\"text-muted\">\"Facebook design lead since 2003\" → Pre-company founding ✗</p>\n          </div>\n        </div>\n      )\n    },\n    {\n      number: 10,\n      title: \"Professional Community Size: The Numbers Don't Lie\",\n      icon: Users,\n      redFlags: [\"One of first 100 UX designers\", \"UX pioneer status\", \"Founded UX in my country\"],\n      formula: \"Community_Size(Year) = 100 × e^(0.35(Year-1993))\",\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-foreground/80 leading-relaxed\">\n            The global UX community grew exponentially. Historical size constraints make certain claims statistically impossible:\n          </p>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4\">\n            <h4 className=\"font-semibold mb-3\">Global UX Professional Count</h4>\n            <table className=\"w-full text-sm\">\n              <thead>\n                <tr className=\"border-b border-accent/20\">\n                  <th className=\"text-left py-2\">Year</th>\n                  <th className=\"text-left py-2\">Estimated Count</th>\n                  <th className=\"text-left py-2\">Growth Rate</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-mono\">1993</td>\n                  <td className=\"py-2 text-accent\">~100</td>\n                  <td className=\"py-2\">Founding</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-mono\">1995</td>\n                  <td className=\"py-2 text-accent\">~500</td>\n                  <td className=\"py-2\">400% growth</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-mono\">2000</td>\n                  <td className=\"py-2 text-accent\">~2,000</td>\n                  <td className=\"py-2\">300% over 5 years</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-mono\">2005</td>\n                  <td className=\"py-2 text-accent\">~10,000</td>\n                  <td className=\"py-2\">400% over 5 years</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-mono\">2010</td>\n                  <td className=\"py-2 text-accent\">~50,000</td>\n                  <td className=\"py-2\">400% over 5 years</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-mono\">2015</td>\n                  <td className=\"py-2 text-accent\">~150,000</td>\n                  <td className=\"py-2\">200% over 5 years</td>\n                </tr>\n                <tr className=\"border-b border-accent/10\">\n                  <td className=\"py-2 font-mono\">2020</td>\n                  <td className=\"py-2 text-accent\">~500,000</td>\n                  <td className=\"py-2\">230% over 5 years</td>\n                </tr>\n                <tr>\n                  <td className=\"py-2 font-mono font-bold\">2025</td>\n                  <td className=\"py-2 text-accent font-bold\">~800,000</td>\n                  <td className=\"py-2\">60% over 5 years</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"bg-background/50 border border-accent/30 rounded-lg p-4 font-mono text-sm\">\n            <p className=\"text-accent\">// Statistical reality check:</p>\n            <p className=\"text-muted\">P(Being in first 100) = 100/800,000 = 0.0125%</p>\n            <p className=\"text-muted\">P(Being in first 1,000) = 0.125%</p>\n            <p className=\"text-muted mt-2\">// Yet 5% of LinkedIn profiles claim \"UX pioneer\" status</p>\n          </div>\n          <div className=\"flex items-start space-x-3 bg-destructive/10 border border-destructive/30 rounded-lg p-4\">\n            <AlertTriangle className=\"w-5 h-5 text-destructive mt-0.5 flex-shrink-0\" />\n            <div>\n              <p className=\"font-semibold text-destructive\">Statistical Impossibilities:</p>\n              <ul className=\"mt-2 space-y-1 text-sm\">\n                <li>• If everyone claiming \"UX pioneer\" was real, we'd have 40,000 pioneers</li>\n                <li>• That's 400× more than actually existed in 1993</li>\n                <li>• Mathematically equivalent to 400% of people claiming to be astronauts</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  return (\n    <section id=\"claims\" className=\"py-16 px-4 sm:px-6 lg:px-8\" data-testid=\"section-theses\">\n      <div className=\"max-w-4xl mx-auto space-y-12\">\n        {/* Header */}\n        <div className=\"space-y-4\">\n          <span className=\"text-muted uppercase tracking-wider text-sm font-mono\">Part 6</span>\n          <h2 className=\"font-display text-4xl sm:text-5xl font-bold leading-tight\" data-testid=\"text-theses-heading\">\n            Professional Claims Treatise: Mathematical Proofs of Timeline Impossibilities\n          </h2>\n          <p className=\"text-lg text-foreground/70 max-w-3xl\">\n            Ten irrefutable mathematical proofs demonstrating the impossibility of inflated experience claims in UX/UI design. Each thesis is backed by historical data, launch dates, and verifiable records.\n          </p>\n        </div>\n\n        {/* Timeline Warning Banner */}\n        <div className=\"bg-accent/10 border-2 border-accent/30 rounded-xl p-6\">\n          <div className=\"flex items-start space-x-4\">\n            <AlertTriangle className=\"w-6 h-6 text-accent mt-1 flex-shrink-0\" />\n            <div>\n              <h3 className=\"font-semibold text-lg mb-2\">The 32-Year Maximum Rule</h3>\n              <p className=\"text-sm text-foreground/80\">\n                No one can have more than 32 years of UX experience (1993-2025). Any claim exceeding this is mathematically impossible. \n                Each thesis below provides specific constraints and validation formulas for experience verification.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Theses Accordion */}\n        <Accordion type=\"multiple\" className=\"space-y-6\">\n          {theses.map((thesis) => {\n            const isRead = progress.readTheses.includes(thesis.number);\n            const Icon = thesis.icon;\n            \n            return (\n              <AccordionItem \n                key={thesis.number} \n                value={`thesis-${thesis.number}`}\n                className=\"thesis-number rounded-lg border-2 border-accent/30 overflow-hidden hover:border-accent/50 transition-all duration-300\"\n                data-testid={`thesis-card-${thesis.number}`}\n                data-thesis-number={thesis.number}\n                onMouseEnter={() => setHoveredThesis(thesis.number)}\n                onMouseLeave={() => setHoveredThesis(null)}\n              >\n                <AccordionTrigger \n                  className=\"px-8 py-6 hover:no-underline hover:bg-accent/5 transition-all duration-300 [&[data-state=open]]:bg-accent/10\"\n                  data-testid={`button-thesis-${thesis.number}`}\n                >\n                  <div className=\"flex items-center space-x-6 w-full text-left\">\n                    <div className=\"flex-shrink-0 relative\">\n                      <div className={`w-16 h-16 rounded-full flex items-center justify-center border-2 transition-all duration-300 ${\n                        hoveredThesis === thesis.number \n                          ? 'bg-accent/20 border-accent scale-110' \n                          : 'bg-foreground/10 border-foreground/20'\n                      }`}>\n                        <Icon className=\"w-8 h-8 text-accent\" />\n                      </div>\n                      {isRead && (\n                        <div className=\"absolute -top-1 -right-1\">\n                          <CheckCircle2 \n                            className=\"w-6 h-6 text-green-500 bg-background rounded-full\" \n                            data-testid={`icon-read-${thesis.number}`}\n                          />\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"flex-1\">\n                      <h3 className=\"font-display text-xl sm:text-2xl font-semibold leading-tight mb-2\">\n                        {thesis.title}\n                      </h3>\n                      {thesis.formula && (\n                        <code className=\"text-xs font-mono text-accent/70 bg-accent/5 px-2 py-1 rounded\">\n                          {thesis.formula}\n                        </code>\n                      )}\n                    </div>\n                  </div>\n                </AccordionTrigger>\n                <AccordionContent className=\"px-8 pb-8 pt-2\">\n                  <div className=\"pl-22\">\n                    {thesis.content}\n                  </div>\n                </AccordionContent>\n              </AccordionItem>\n            );\n          })}\n        </Accordion>\n\n        {/* Conclusion Section */}\n        <div className=\"mt-16 space-y-8 border-t border-accent/20 pt-12\">\n          <h3 className=\"font-display text-3xl font-bold\">Conclusion: The Mathematical Case for Honesty</h3>\n          \n          <div className=\"space-y-6\">\n            <div className=\"bg-background/50 border border-accent/30 rounded-lg p-6\">\n              <h4 className=\"font-semibold mb-4\">The Proof is Complete</h4>\n              <p className=\"text-foreground/80 leading-relaxed mb-4\">\n                Through these ten theses, we've established mathematically verifiable constraints on UX/UI experience claims:\n              </p>\n              <ul className=\"space-y-2 text-sm text-foreground/70\">\n                <li className=\"flex items-start space-x-2\">\n                  <span className=\"text-accent\">•</span>\n                  <span>Maximum UX experience: 32 years (1993-2025)</span>\n                </li>\n                <li className=\"flex items-start space-x-2\">\n                  <span className=\"text-accent\">•</span>\n                  <span>Maximum mobile UX: 18 years (iPhone 2007)</span>\n                </li>\n                <li className=\"flex items-start space-x-2\">\n                  <span className=\"text-accent\">•</span>\n                  <span>Maximum Figma experience: 9 years (2016)</span>\n                </li>\n                <li className=\"flex items-start space-x-2\">\n                  <span className=\"text-accent\">•</span>\n                  <span>Design thinking practice: 17 years max (2008)</span>\n                </li>\n              </ul>\n            </div>\n\n            <div className=\"bg-background/50 border border-accent/30 rounded-lg p-6\">\n              <h4 className=\"font-semibold mb-4\">Guidelines for Experience Evaluation</h4>\n              <div className=\"space-y-3 text-sm\">\n                <div className=\"flex items-start space-x-3\">\n                  <span className=\"font-mono text-accent\">1.</span>\n                  <span>Verify claimed years against field origin dates</span>\n                </div>\n                <div className=\"flex items-start space-x-3\">\n                  <span className=\"font-mono text-accent\">2.</span>\n                  <span>Check tool experience against launch dates</span>\n                </div>\n                <div className=\"flex items-start space-x-3\">\n                  <span className=\"font-mono text-accent\">3.</span>\n                  <span>Validate geographic claims against regional adoption</span>\n                </div>\n                <div className=\"flex items-start space-x-3\">\n                  <span className=\"font-mono text-accent\">4.</span>\n                  <span>Cross-reference education claims with program existence</span>\n                </div>\n                <div className=\"flex items-start space-x-3\">\n                  <span className=\"font-mono text-accent\">5.</span>\n                  <span>Apply the formula: Experience ≤ Min(Field_Age, Tool_Age, Regional_Adoption)</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-accent/5 border-2 border-accent/30 rounded-xl p-8 text-center\">\n              <h4 className=\"font-display text-2xl font-bold mb-4\">A Call for Industry Honesty</h4>\n              <p className=\"text-foreground/80 leading-relaxed mb-6 max-w-2xl mx-auto\">\n                The UX/UI industry's credibility depends on accurate representation of experience. \n                When we inflate our years, we devalue genuine expertise and create unrealistic expectations. \n                The mathematics don't lie—let's ensure our resumes don't either.\n              </p>\n              <div className=\"flex items-center justify-center space-x-2 text-accent\">\n                <span className=\"font-semibold\">Truth in timelines. Integrity in experience.</span>\n                <ArrowRight className=\"w-5 h-5\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":41838},"client/src/components/video-section.tsx":{"content":"export default function VideoSection() {\n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\" data-testid=\"section-video\">\n      <div className=\"max-w-5xl mx-auto\">\n        <div className=\"space-y-6\">\n          <div className=\"space-y-2 text-center\">\n            <p className=\"text-muted uppercase tracking-wider text-sm font-mono\">Section 2</p>\n            <h3 className=\"font-display text-4xl sm:text-5xl font-bold leading-tight\" data-testid=\"text-video-heading\">The Profession's Genesis</h3>\n          </div>\n\n          <div className=\"max-w-3xl mx-auto prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p>\n              Everyone, including the marketing departments and business analysts, wanted to design interfaces except there was no profession called UX/UI. The only problem is that <strong>we are bad historians</strong>.\n            </p>\n\n            <p>\n              We run a <strong>chronologically impossible claim process</strong> that neither acknowledges the actual timeline of professional development nor the documented history of the field. <strong>Historical evidence explains the impossibility of extended experience claims:</strong>\n            </p>\n\n            <blockquote className=\"border-l-4 border-accent pl-6 italic text-lg\">\n              \"The field of UX/UI design as a distinct profession is based on the concepts of human-centered design that were revolutionary in the 1990s and at the forefront of the technology industry before it was systematized by pioneers like Don Norman and Alan Cooper. Centralized, predictive interface design and user research were then thought to be superior to the trial and error engineering approaches that dominated early computing.\"\n            </blockquote>\n\n            <div className=\"not-prose\">\n              <p className=\"text-muted uppercase tracking-wider text-sm font-mono mb-4\">Historical Evidence</p>\n            </div>\n\n            <p>\n              There is no resume that can claim 25+ years of UX/UI experience without being anachronistic. <strong>The mathematics are unforgiving</strong>. We must be very careful not to conflate <strong>graphic design experience with UX/UI professional practice</strong>. As Don Norman said, <strong>\"UX encompasses all aspects of the person's experience with a system.\"</strong> This holistic approach didn't exist before the 1990s.\n            </p>\n\n            <p>\n              Our <strong>human-centered design methodology</strong> values <strong>user research, not just visual design</strong>. It values <strong>usability testing and iterative improvement</strong>, not just aesthetic appeal.\n            </p>\n\n            <p>\n              The GUI revolution created a new discipline that was <strong>unaware of or separate from traditional graphic design</strong>. In Silicon Valley, we call them <strong>interaction designers and user researchers</strong>—distinct from visual designers. We once had generalist \"computer programmers,\" but UX/UI required <strong>specialized knowledge of human psychology, information architecture, and usability principles</strong>.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3213},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import NavigationHeader from \"@/components/navigation-header\";\nimport HeroSection from \"@/components/hero-section\";\nimport IntroductionSection from \"@/components/introduction-section\";\nimport OriginsSection from \"@/components/origins-section\";\nimport GuiRevolutionSection from \"@/components/gui-revolution-section\";\nimport ToolsMethodologySection from \"@/components/tools-methodology-section\";\nimport ProfessionalFormalizationSection from \"@/components/professional-formalization-section\";\nimport SalaryHeatmap from \"@/components/salary-heatmap\";\nimport JobMarketChart from \"@/components/job-market-chart\";\nimport ThesesSection from \"@/components/theses-section\";\nimport IndustryEconomicsSection from \"@/components/industry-economics-section\";\nimport Footer from \"@/components/footer\";\nimport ProgressIndicator from \"@/components/progress-indicator\";\nimport StickyNavigation from \"@/components/sticky-navigation\";\nimport ScrollProgress from \"@/components/scroll-progress\";\nimport SectionDivider from \"@/components/section-divider\";\n\nexport default function Home() {\n  return (\n    <div className=\"font-sans antialiased\">\n      <ScrollProgress />\n      <NavigationHeader />\n      <HeroSection />\n      <StickyNavigation />\n      <ProgressIndicator />\n      \n      {/* Section 01: Origins */}\n      <SectionDivider number=\"01\" label=\"Origins\" />\n      \n      <div id=\"origins\">\n        <IntroductionSection />\n        <OriginsSection />\n      </div>\n      \n      {/* Section 02: Revolution */}\n      <SectionDivider number=\"02\" label=\"Revolution\" />\n      \n      <div id=\"revolution\">\n        <GuiRevolutionSection />\n      </div>\n      \n      {/* Section 03: Formalization */}\n      <SectionDivider number=\"03\" label=\"Formalization\" />\n      \n      <div id=\"formalization\">\n        <ProfessionalFormalizationSection />\n      </div>\n      \n      {/* Section 04: Tools & Methods */}\n      <SectionDivider number=\"04\" label=\"Tools & Methods\" />\n      \n      <div id=\"tools\">\n        <ToolsMethodologySection />\n      </div>\n      \n      {/* Section 05: Industry & Economics */}\n      <SectionDivider number=\"05\" label=\"Industry & Economics\" />\n      \n      <div id=\"economics\">\n        <IndustryEconomicsSection />\n        <SalaryHeatmap />\n        <JobMarketChart />\n      </div>\n      \n      {/* Section 06: Professional Claims */}\n      <SectionDivider number=\"06\" label=\"Professional Claims\" />\n      \n      <div id=\"claims\">\n        <ThesesSection />\n      </div>\n      \n      <Footer />\n    </div>\n  );\n}\n","size_bytes":2507},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"attached_assets/chart_script_1759698157803.py":{"content":"import pandas as pd\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# Load the data\ndf = pd.read_csv('ux_ui_timeline_milestones.csv')\n\n# Create the timeline chart\nfig = go.Figure()\n\n# Add the main line showing professional roles growth\nfig.add_trace(go.Scatter(\n    x=df['year'],\n    y=df['professional_roles_estimate'],\n    mode='lines+markers',\n    line=dict(color='#1FB8CD', width=3),\n    marker=dict(size=8, color='#1FB8CD'),\n    name='UX/UI Roles',\n    hovertemplate='Year: %{x}<br>Roles: %{y:,}<extra></extra>'\n))\n\n# Add milestone markers with annotations\nmilestone_colors = ['#DB4545', '#2E8B57', '#5D878F', '#D2BA4C', '#B4413C']\nfor i, row in df.iterrows():\n    if row['professional_roles_estimate'] > 0:  # Only show milestones where there are roles\n        color = milestone_colors[i % len(milestone_colors)]\n        \n        # Add milestone marker\n        fig.add_trace(go.Scatter(\n            x=[row['year']],\n            y=[row['professional_roles_estimate']],\n            mode='markers',\n            marker=dict(size=12, color=color, symbol='diamond'),\n            name=row['milestone'][:15] + '...' if len(row['milestone']) > 15 else row['milestone'],\n            hovertemplate=f\"{row['milestone']}<br>Year: {row['year']}<br>Roles: {row['professional_roles_estimate']:,}<extra></extra>\",\n            showlegend=True\n        ))\n\n# Update layout with logarithmic y-axis\nfig.update_layout(\n    title='UX/UI Professional Roles Evolution',\n    xaxis_title='Year',\n    yaxis_title='Prof. Roles',\n    yaxis_type='log',\n    legend=dict(\n        orientation='v',\n        yanchor='top',\n        y=1,\n        xanchor='left',\n        x=1.02\n    )\n)\n\n# Update axes\nfig.update_xaxes(\n    range=[1970, 2025],\n    dtick=10\n)\n\nfig.update_yaxes(\n    range=[0, 6],  # log scale: 10^0 to 10^6\n    dtick=1\n)\n\n# Update traces to prevent clipping\nfig.update_traces(cliponaxis=False)\n\n# Save as both PNG and SVG\nfig.write_image('timeline_chart.png')\nfig.write_image('timeline_chart.svg', format='svg')\n\nprint(\"Chart created successfully!\")\nprint(\"Final data preview:\")\nprint(df[['year', 'milestone', 'professional_roles_estimate']])","size_bytes":2138},"attached_assets/chart_script_1_1759698157802.py":{"content":"import pandas as pd\nimport plotly.graph_objects as go\nimport plotly.express as px\n\n# Load the data\ndf = pd.read_csv('ux_ui_experience_calculations.csv')\n\n# Create shortened role type labels for better readability\ndf['short_role'] = df['role_type'].str.replace('Field Creator (Don Norman)', 'Field Creator')\ndf['short_role'] = df['short_role'].str.replace('Professional Practice', 'Prof Practice')\ndf['short_role'] = df['short_role'].str.replace('Industry Standards', 'Industry Std')\ndf['short_role'] = df['short_role'].str.replace('Mainstream Adoption', 'Mainstream')\n\n# Define colors - emphasize first two categories that can legitimately claim 24+ years\ncolors = ['#1FB8CD', '#DB4545', '#2E8B57', '#5D878F', '#D2BA4C', '#B4413C', '#964325']\n\n# Create the bar chart\nfig = go.Figure()\n\nfig.add_trace(go.Bar(\n    x=df['short_role'],\n    y=df['max_experience_2025'],\n    marker_color=colors[:len(df)],\n    text=df['max_experience_2025'],\n    textposition='outside',\n    name='Max Experience'\n))\n\n# Add horizontal line at 24 years\nfig.add_hline(y=24, line_dash=\"dash\", line_color=\"red\", \n              annotation_text=\"24 years\", annotation_position=\"bottom right\")\n\n# Update layout\nfig.update_layout(\n    title=\"Max UX/UI Experience by Career Start\",\n    xaxis_title=\"Role Type\",\n    yaxis_title=\"Max Exp (Years)\",\n    showlegend=False\n)\n\n# Update traces for better appearance\nfig.update_traces(cliponaxis=False)\n\n# Update y-axis to show proper range\nfig.update_yaxes(range=[0, max(df['max_experience_2025']) + 3])\n\n# Save the chart\nfig.write_image(\"chart.png\")\nfig.write_image(\"chart.svg\", format=\"svg\")\n\nprint(\"Chart created successfully!\")\nprint(\"Data summary:\")\nprint(df[['short_role', 'max_experience_2025']])","size_bytes":1712},"attached_assets/chart_script_2_1759698157802.py":{"content":"import pandas as pd\nimport plotly.graph_objects as go\n\n# Load the data\ndf = pd.read_csv(\"ux_ui_tools_evolution.csv\")\n\n# Create figure with secondary y-axis\nfig = go.Figure()\n\n# Add bar chart for UX professionals using each tool\nfig.add_trace(\n    go.Bar(\n        x=df['period'],\n        y=df['ux_professionals_using'],\n        name='Users',\n        marker_color='#1FB8CD',\n        yaxis='y',\n        hovertemplate='<b>%{x}</b><br>Users: %{y:,.0f}<extra></extra>'\n    )\n)\n\n# Add line chart for collaboration capability\nfig.add_trace(\n    go.Scatter(\n        x=df['period'],\n        y=df['collaboration_capability'],\n        mode='lines+markers',\n        name='Collab %',\n        line=dict(color='#DB4545', width=3),\n        marker=dict(size=8, color='#DB4545'),\n        yaxis='y2',\n        hovertemplate='<b>%{x}</b><br>Collaboration: %{y}%<extra></extra>'\n    )\n)\n\n# Update layout with dual y-axes\nfig.update_layout(\n    title='UX Tool Evolution & User Growth',\n    xaxis_title='Era',\n    yaxis=dict(\n        title='Users',\n        side='left',\n        tickformat='.0s'  # This will show 600k instead of 600000\n    ),\n    yaxis2=dict(\n        title='Collab %',\n        side='right',\n        overlaying='y',\n        ticksuffix='%'\n    ),\n    legend=dict(\n        orientation='h',\n        yanchor='bottom',\n        y=1.05,\n        xanchor='center',\n        x=0.5\n    )\n)\n\n# Update traces for better visual appeal\nfig.update_traces(cliponaxis=False)\n\n# Save the chart as both PNG and SVG\nfig.write_image(\"chart.png\")\nfig.write_image(\"chart.svg\", format=\"svg\")\n\nprint(\"Chart saved successfully as chart.png and chart.svg\")","size_bytes":1618},"attached_assets/script_1759698157803.py":{"content":"# Create comprehensive data for charts and metrics that would support the UX/UI timeline argument\n\nimport pandas as pd\nimport json\n\n# Timeline data for key milestones\ntimeline_data = {\n    \"year\": [1973, 1984, 1988, 1990, 1993, 1995, 2000, 2007, 2010, 2014, 2016, 2020, 2025],\n    \"milestone\": [\n        \"Xerox Alto GUI\",\n        \"Apple Macintosh\",\n        \"Don Norman's Book\",\n        \"Nielsen Heuristics\", \n        \"UX Term Coined\",\n        \"First UX Consultancy\",\n        \"UX Job Roles Emerge\",\n        \"iPhone/Mobile UX\",\n        \"Sketch Tool Launch\",\n        \"Google Material Design\",\n        \"Figma Collaboration\",\n        \"UX Industry Maturity\",\n        \"Current Year\"\n    ],\n    \"professional_roles_estimate\": [0, 5, 20, 50, 100, 500, 2000, 10000, 50000, 100000, 200000, 500000, 800000],\n    \"tools_available\": [0, 1, 1, 2, 3, 5, 10, 15, 25, 40, 60, 100, 150],\n    \"experience_claims_validity\": [0, 0, 0, 5, 15, 25, 35, 45, 55, 65, 75, 85, 95]\n}\n\n# Maximum possible experience by start year\nexperience_calculation = {\n    \"start_year\": [1993, 1995, 2000, 2005, 2010, 2015, 2020],\n    \"role_type\": [\n        \"Field Creator (Don Norman)\",\n        \"Early Pioneer\", \n        \"Professional Practice\",\n        \"Industry Standards\",\n        \"Mainstream Adoption\",\n        \"Modern Tools Era\",\n        \"Recent Graduate\"\n    ],\n    \"max_experience_2025\": [32, 30, 25, 20, 15, 10, 5],\n    \"global_professionals_estimate\": [1, 10, 100, 1000, 10000, 50000, 100000]\n}\n\n# Tools evolution timeline\ntools_evolution = {\n    \"period\": [\"1988-2010\", \"2010-2016\", \"2016-2020\", \"2020-2025\"],\n    \"primary_tool\": [\"Photoshop\", \"Sketch\", \"Figma\", \"Advanced Figma\"],\n    \"tool_type\": [\"Photo Editor Adapted\", \"First Dedicated UI Tool\", \"Collaborative Design\", \"AI-Enhanced Design\"],\n    \"ux_professionals_using\": [50000, 150000, 400000, 600000],\n    \"collaboration_capability\": [10, 30, 90, 95]\n}\n\n# Company design system timeline\ndesign_systems = {\n    \"year\": [1987, 2006, 2014, 2016, 2018, 2020],\n    \"company\": [\"Apple\", \"Yahoo!\", \"Google\", \"IBM\", \"Microsoft\", \"Shopify\"],\n    \"system_name\": [\"Human Interface Guidelines\", \"Design Pattern Library\", \"Material Design\", \"Carbon Design System\", \"Fluent Design\", \"Polaris\"],\n    \"adoption_scale\": [10000, 50000, 1000000, 100000, 500000, 50000],\n    \"maturity_level\": [60, 70, 95, 85, 80, 75]\n}\n\n# Create DataFrames\ntimeline_df = pd.DataFrame(timeline_data)\nexperience_df = pd.DataFrame(experience_calculation)\ntools_df = pd.DataFrame(tools_evolution)\nsystems_df = pd.DataFrame(design_systems)\n\n# Save to CSV files for chart creation\ntimeline_df.to_csv('ux_ui_timeline_milestones.csv', index=False)\nexperience_df.to_csv('ux_ui_experience_calculations.csv', index=False)\ntools_df.to_csv('ux_ui_tools_evolution.csv', index=False)\nsystems_df.to_csv('ux_ui_design_systems.csv', index=False)\n\nprint(\"UX/UI HISTORICAL DATA ANALYSIS\")\nprint(\"=\" * 50)\n\nprint(\"\\n1. TIMELINE MILESTONES:\")\nprint(timeline_df.to_string(index=False))\n\nprint(\"\\n2. MAXIMUM POSSIBLE EXPERIENCE CALCULATIONS:\")\nprint(experience_df.to_string(index=False))\n\nprint(\"\\n3. TOOLS EVOLUTION:\")\nprint(tools_df.to_string(index=False))\n\nprint(\"\\n4. DESIGN SYSTEMS TIMELINE:\")\nprint(systems_df.to_string(index=False))\n\n# Key statistics for the argument\nprint(\"\\n\" + \"=\" * 50)\nprint(\"KEY STATISTICS FOR DEBUNKING 24+ YEAR CLAIMS:\")\nprint(\"=\" * 50)\n\nprint(f\"• UX term coined in: {timeline_df[timeline_df['milestone'] == 'UX Term Coined']['year'].values[0]}\")\nprint(f\"• Maximum possible experience in 2025: {experience_df['max_experience_2025'].max()} years\")\nprint(f\"• Professional roles before 2000: {timeline_df[timeline_df['year'] <= 2000]['professional_roles_estimate'].sum():,}\")\nprint(f\"• First dedicated UI tool launched: {tools_df['period'].iloc[1]}\")\nprint(f\"• First major design system: {systems_df['year'].min()} ({systems_df[systems_df['year'] == systems_df['year'].min()]['system_name'].values[0]})\")\n\nprint(\"\\n\" + \"=\" * 50)\nprint(\"MATHEMATICAL PROOF:\")\nprint(\"=\" * 50)\nprint(\"For 24 years of experience in 2025:\")\nprint(\"• Start year would be: 2025 - 24 = 2001\")\nprint(\"• UX roles in 2001: ~2,000 globally\")  \nprint(\"• Dedicated UX tools in 2001: None (Sketch launched 2010)\")\nprint(\"• Formal UX education in 2001: Minimal\")\nprint(\"• Conclusion: 24+ year claims are statistically implausible\")","size_bytes":4314},"attached_assets/ux-ui-history-18theses-style_1759698157803.md":{"content":"# The History of UX/UI Design: A Treatise on Professional Claims\n\n## As professionals, we are in an undeclared state of confusion.\n\n---\n\nAround 2025, hiring managers in India claim 24 years of UX/UI experience, recruiters validate 20-year professional histories, and senior designers inflate their backgrounds by a decade. A decade later, we have interns with more authentic experience than self-proclaimed \"experts,\" 1,000+ false LinkedIn profiles claiming impossible timelines, and an unprecedented proliferation of fabricated UX credentials.\n\nThis is a hot war against professional integrity. The industry has empirically lost credibility. We must respond to this misinformation with facts.\n\nWe have a peer problem: **Mathematical impossibility**. \"Senior UX/UI Designer\" is a euphemism to avoid the embarrassment of acknowledging that the profession is younger than claimed. In 1993, Don Norman was the only person with \"User Experience\" in his job title. Today, thousands claim experience predating the field's existence. The UX/UI industry requires historical accuracy, or it will lose credibility and plunge hiring into darkness under fraudulent resumes.\n\nGiven the vast claims we have seen about experience in these decades of digital transformation, it would be reasonable to wonder: **what went wrong?**\n\n---\n\n## SECTION 1\n\n### The Last Computer and Great Interface Revolution\n\nIn 1973, after the mainframe era, Xerox wanted a **Personal Computer Revolution** and GUI development was pioneered by their PARC lab. The lab held demonstrations to show what computing could be—the so-called \"Alto Demo\"—to tell the industry that text-only interfaces would not survive. Today, we have modern UI.\n\n**FIG 01: Corporate Evolution in the Tech Sector**\n\nThe most important consequence of the Alto wasn't just a better computer interface, but the **coupling of human psychology to computing** and the rise of **Human-Computer Interaction**. Innovation bred creativity and brought in the brilliant engineers and designers. This was the **Great Interface Revolution** of the computing industry.\n\nBefore the GUI revolution, only **3% of computer users** were non-technical. The vast majority of computing required programming skills and text commands. **Xerox made computers visual. Apple made them friendly. Microsoft made them ubiquitous.**\n\n**FIG 02: Major Computing Paradigm Budget: Share by Interface Type**\n\n*TEXT-ONLY INTERFACES*\n*GRAPHICAL USER INTERFACES*  \n*WEB INTERFACES*\n*MOBILE INTERFACES*\n\n1970 → 1984 → Apple Macintosh Launch → 1995 → 2007 → 2025\n\nBut today that 3% has ballooned to **97% of computing users** being non-technical. The revolution's fixation on **user-centered design, intuitive interfaces, and accessible technology** has made computing universally appealing, suitable not just for engineers but for everyone—a transformation only possible at the dawn of the personal computer age.\n\n**Working in UX/UI before 1990 meant you were essentially a computer scientist or industrial designer**, not a dedicated user experience professional. That designation didn't exist.\n\n---\n\n## SECTION 2\n\n### The Profession's Genesis\n\nEveryone, including the marketing departments and business analysts, wanted to design interfaces except there was no profession called UX/UI. The only problem is that **we are bad historians**.\n\nWe run a **chronologically impossible claim process** that neither acknowledges the actual timeline of professional development nor the documented history of the field. **Historical evidence explains the impossibility of extended experience claims:**\n\n### \"The field of UX/UI design as a distinct profession is based on the concepts of human-centered design that were revolutionary in the 1990s and at the forefront of the technology industry before it was systematized by pioneers like Don Norman and Alan Cooper. Centralized, predictive interface design and user research were then thought to be superior to the trial and error engineering approaches that dominated early computing.\"\n\n**HISTORICAL EVIDENCE**\n\nThere is no resume that can claim 25+ years of UX/UI experience without being anachronistic. **The mathematics are unforgiving**. We must be very careful not to conflate **graphic design experience with UX/UI professional practice**. As Don Norman said, **\"UX encompasses all aspects of the person's experience with a system.\"** This holistic approach didn't exist before the 1990s.\n\nOur **human-centered design methodology** values **user research, not just visual design**. It values **usability testing and iterative improvement**, not just aesthetic appeal.\n\nThe GUI revolution created a new discipline that was **unaware of or separate from traditional graphic design**. In Silicon Valley, we call them **interaction designers and user researchers**—distinct from visual designers. We once had generalist \"computer programmers,\" but UX/UI required **specialized knowledge of human psychology, information architecture, and usability principles**.\n\n---\n\n## SECTION 3\n\n### The Theses of Professional Timeline Accuracy\n\n**1. Mathematical impossibility is the root of false claims.**\n\nThe root of resume inflation is a **lack of historical awareness**. Avoid chronologically impossible experience claims at all costs by **understanding documented professional milestones**. **Don Norman coined \"User Experience\" in 1993**—maximum possible experience is 32 years, and that's only for the field's creator.\n\n**2. \"20+ years UX/UI experience\" makes claims statistically impossible.**\n\nMaybe someone has 20 years of \"design experience,\" but it's mathematically wrong for **dedicated UX/UI practice**. This robs credibility from the profession and **institutionalizes resume inflation** by valuing **years claimed over actual expertise**. The iPhone launched in 2007—mobile UX design is maximum 18 years old.\n\n**3. Professional roles emerged in phases, not decades.**\n\nHistorical documentation shows **clear professional development phases**:\n- **1973-1990**: GUI research and development\n- **1990-1995**: Academic HCI establishment  \n- **1995-2005**: Professional practice emergence\n- **2005-2015**: Industry standardization\n- **2015-present**: Mature profession\n\n**4. The timeline is documented: career claims must align.**\n\n**Key Historical Milestones:**\n- **1973**: Xerox Alto (first GUI)\n- **1984**: Apple Macintosh (consumer GUI)\n- **1990**: Nielsen-Molich heuristics published\n- **1993**: Don Norman coins \"User Experience\"\n- **1995**: First UX consultancies founded\n- **2000s**: Dedicated UX/UI job roles emerge\n\n**5. Tools evolution proves recent professionalization.**\n\n**Design Tools Timeline:**\n- **1988-2010**: Photoshop era (image editing adapted for web)\n- **2010-2016**: Sketch era (first dedicated UI tool)\n- **2016-present**: Figma era (collaborative design)\n\nProfessional UX/UI tools didn't exist before 2010. **Photoshop was photo editing software adapted for web design**.\n\n**6. Company design system history validates timeline.**\n\n**Corporate Design System Timeline:**\n- **1987**: Apple Human Interface Guidelines established\n- **2006**: Yahoo! Design Pattern Library released\n- **2014**: Google Material Design launched\n- **2016**: IBM Carbon Design System created\n\n**Design systems as systematic UX practice emerged in the 2000s, matured in the 2010s**.\n\n**7. Education and certification prove recent formalization.**\n\n**UX/UI Education Timeline:**\n- **1990s**: First HCI academic programs\n- **2000s**: Design schools add interaction design\n- **2010s**: Dedicated UX/UI bootcamps emerge\n- **2015+**: Industry-wide certification programs\n\n**Formal UX/UI education is less than 25 years old**.\n\n**8. Research methodology validates professional timeline.**\n\n**UX Research Methods Development:**\n- **1990**: Jakob Nielsen's usability heuristics\n- **1994**: Usability testing standardization\n- **1998**: ISO usability standards established\n- **2000s**: User research methodologies systematized\n\n**Professional UX research practices are maximum 30 years old**.\n\n**9. Job market data confirms recent profession emergence.**\n\n**Employment Data Timeline:**\n- **Pre-2000**: Fewer than 100 dedicated UX roles globally\n- **2000-2005**: Hundreds of UX positions emerge\n- **2005-2010**: Thousands of UX/UI roles created\n- **2010+**: Mainstream professional adoption\n\n**10. Technology constraints limited early practice.**\n\n**Technical Limitations Timeline:**\n- **Pre-1995**: Limited GUI development tools\n- **1995-2005**: Basic web design capabilities\n- **2005-2015**: Advanced interaction possibilities\n- **2015+**: Modern UX/UI tool ecosystem\n\n**Technical constraints made modern UX/UI practice impossible before 2000**.\n\n---\n\n## CONCLUSION\n\n### The Mathematical Proof of Professional Timeline\n\n#### \"A little fact-checking now and then is a good thing, and as necessary in the professional world as audits in the financial.\"\n\n**HISTORICAL VERIFICATION**\n\nI present these facts not because I hate the UX/UI profession, but because I love it profoundly.\n\nWe are in a state of **undeclared resume inflation**. For more than a decade, we've accepted **chronologically impossible experience claims** born from a **complacent hiring process** with no historical verification. We have **believed inflated timelines for too long**.\n\n**Change is now possible** because we all realize there is something worse than correcting false claims: **professional credibility collapse**. We have no time to waste in **establishing accurate professional standards** we can depend on for reliable hiring.\n\n**It was accurate professional standards that underwrote industry credibility**. They can once again if we embrace historical facts as our foundation.\n\n---\n\n## THE DEFINITIVE TIMELINE\n\n### **Pre-History Era (Before 1970)**\n- **4000 BC**: Feng Shui spatial optimization\n- **500 BC**: Greek ergonomic principles  \n- **1900s**: Industrial design emergence\n- **1955**: Henry Dreyfuss \"Designing for People\"\n\n### **Foundation Era (1970-1990)**\n- **1973**: Xerox Alto (first complete GUI)\n- **1975**: \"Human-Computer Interaction\" term coined\n- **1984**: Apple Macintosh mass-market GUI\n- **1988**: Don Norman's \"Design of Everyday Things\"\n\n### **Professional Genesis (1990-2000)**  \n- **1990**: Nielsen-Molich usability heuristics\n- **1992**: Cooper Interaction Design founded\n- **1993**: **Don Norman coins \"User Experience\"**\n- **1995**: Professional UX consultancies emerge\n- **1998**: ISO usability standards established\n\n### **Industry Formation (2000-2010)**\n- **2000s**: Dedicated UX/UI job roles created\n- **2006**: Yahoo! Design Pattern Library  \n- **2007**: iPhone launches mobile UX era\n- **2010**: Sketch (first dedicated UI tool)\n\n### **Professional Maturation (2010-Present)**\n- **2014**: Google Material Design System\n- **2016**: Figma collaborative design era\n- **2020s**: Industry-wide standardization\n\n---\n\n## MAXIMUM POSSIBLE EXPERIENCE CALCULATIONS\n\n**For 2025 Claims:**\n\n- **Don Norman (field creator)**: 32 years maximum (1993-2025)\n- **Early pioneers (1995 start)**: 30 years maximum  \n- **Professional practice (2000 start)**: 25 years maximum\n- **Industry standards (2005 start)**: 20 years maximum\n- **Mainstream adoption (2010 start)**: 15 years maximum\n\n**REALITY CHECK:** Anyone claiming 25+ years of dedicated UX/UI experience must be **among the documented founders of the field** with verifiable professional history.\n\n**The evidence is definitive: Claims exceeding these mathematical limits are chronologically impossible and professionally misleading.**\n\n---\n\n*Compiled from extensive historical research, industry documentation, and mathematical verification*\n\n*Sources: Don Norman writings, Apple archives, Xerox PARC documentation, Nielsen Norman Group publications, industry timeline analysis*","size_bytes":11790},"client/src/components/max-experience-chart.tsx":{"content":"import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ReferenceLine, Label, Cell } from 'recharts';\n\nconst data = [\n  { role: 'Field Creator', experience: 32, highlight: true },\n  { role: 'Early Pioneer', experience: 30, highlight: true },\n  { role: 'Prof Practice', experience: 25, highlight: false },\n  { role: 'Industry Std', experience: 20, highlight: false },\n  { role: 'Mainstream', experience: 15, highlight: false },\n  { role: 'Modern Tools', experience: 10, highlight: false },\n  { role: 'Recent Graduate', experience: 5, highlight: false }\n];\n\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    const entry = data.find(d => d.role === label);\n    return (\n      <div className=\"bg-[#121212] border border-[#8AA97A]/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200\">\n        <p className=\"font-semibold text-[#f4f4e4] mb-2\">{label}</p>\n        <p className=\"text-sm text-[#f4f4e4]/90\">\n          Max Experience: \n          <span className=\"ml-2 font-mono font-semibold text-[#8AA97A]\">\n            {payload[0].value} years\n          </span>\n        </p>\n        {entry?.highlight && (\n          <p className=\"text-xs text-[#DB4545] mt-2 font-semibold\">\n            Above 24-year threshold\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default function MaxExperienceChart() {\n  return (\n    <div className=\"w-full\">\n      <div className=\"bg-[#8AA97A]/[0.02] rounded-xl border border-[#8AA97A]/10 p-6 transition-all duration-300 hover:border-[#8AA97A]/20\">\n        <div className=\"mb-4\">\n          <span className=\"text-[#f4f4e4]/50 uppercase tracking-wider text-xs font-mono\">Fig 02</span>\n          <h3 className=\"text-2xl font-semibold font-display text-[#f4f4e4] mt-1\">Maximum UX/UI Experience by Professional Category</h3>\n          <p className=\"text-sm text-[#f4f4e4]/70 mt-2\">\n            Years of potential experience across different generations of UX professionals in 2025\n          </p>\n        </div>\n        \n        <div className=\"h-96 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={data} margin={{ top: 30, right: 30, left: 80, bottom: 80 }}>\n              <CartesianGrid \n                strokeDasharray=\"3 3\" \n                stroke=\"#8AA97A\" \n                opacity={0.05}\n                verticalPoints={[0]}\n              />\n              <XAxis \n                dataKey=\"role\" \n                stroke=\"transparent\"\n                tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                angle={-45}\n                textAnchor=\"end\"\n                height={100}\n                axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                tickLine={false}\n              />\n              <YAxis \n                stroke=\"transparent\"\n                tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                tickLine={false}\n                label={{ \n                  value: 'Maximum Years of Experience', \n                  angle: -90, \n                  position: 'insideLeft',\n                  style: { fill: '#f4f4e4', opacity: 0.7, fontSize: 12 }\n                }}\n                domain={[0, 35]}\n              />\n              <Tooltip \n                content={<CustomTooltip />}\n                cursor={{ fill: '#8AA97A', opacity: 0.05 }}\n                animationDuration={200}\n              />\n              <ReferenceLine \n                y={24} \n                stroke=\"#DB4545\" \n                strokeDasharray=\"5 5\"\n                strokeWidth={2}\n                opacity={0.7}\n              >\n                <Label \n                  value=\"24-year experience threshold\" \n                  position=\"insideTopRight\" \n                  fill=\"#DB4545\"\n                  fontSize={11}\n                  offset={10}\n                  style={{ fontWeight: 600 }}\n                />\n              </ReferenceLine>\n              <Bar \n                dataKey=\"experience\" \n                radius={[6, 6, 0, 0]}\n                animationDuration={800}\n                animationBegin={0}\n              >\n                {data.map((entry, index) => (\n                  <Cell \n                    key={`cell-${index}`}\n                    fill={entry.highlight ? (index === 0 ? '#8AA97A' : '#DB4545') : '#6B8261'}\n                  />\n                ))}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        \n        <p className=\"text-xs text-[#f4f4e4]/50 mt-4 font-mono\">\n          Source: Career timeline analysis of UX/UI professional roles (1993-2025)\n        </p>\n      </div>\n    </div>\n  );\n}","size_bytes":4758},"client/src/components/progress-indicator.tsx":{"content":"import { useReadingProgress } from \"@/contexts/reading-progress-context\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { BookmarkCheck } from \"lucide-react\";\n\nexport default function ProgressIndicator() {\n  const { progress, getProgressPercentage } = useReadingProgress();\n  const percentage = getProgressPercentage();\n\n  if (percentage === 0) {\n    return null;\n  }\n\n  return (\n    <div \n      className=\"fixed bottom-6 right-6 z-40 bg-background/95 backdrop-blur-sm border border-accent rounded-lg p-4 shadow-lg w-64\"\n      data-testid=\"progress-indicator\"\n    >\n      <div className=\"flex items-center gap-2 mb-2\">\n        <BookmarkCheck className=\"h-4 w-4 text-foreground\" />\n        <span className=\"text-sm font-medium\">Reading Progress</span>\n      </div>\n      <Progress value={percentage} className=\"h-2\" data-testid=\"progress-bar\" />\n      <div className=\"flex justify-between items-center mt-2\">\n        <span className=\"text-xs text-muted-foreground\">\n          {progress.readTheses.length} of 18 theses read\n        </span>\n        <span className=\"text-xs font-medium\" data-testid=\"text-progress-percentage\">\n          {percentage}%\n        </span>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1209},"client/src/components/salary-heatmap.tsx":{"content":"import { ResponsiveContainer, Tooltip } from 'recharts';\n\n// Define types for the data structure\ninterface SalaryRange {\n  min: number;\n  max: number;\n}\n\ninterface RegionData {\n  region: string;\n  junior: SalaryRange;\n  mid: SalaryRange;\n  senior: SalaryRange;\n  lead: SalaryRange;\n}\n\n// Realistic salary data for 2024\nconst salaryData: RegionData[] = [\n  {\n    region: 'US West Coast',\n    junior: { min: 75, max: 95 },\n    mid: { min: 110, max: 140 },\n    senior: { min: 150, max: 180 },\n    lead: { min: 180, max: 250 }\n  },\n  {\n    region: 'US East Coast',\n    junior: { min: 70, max: 85 },\n    mid: { min: 95, max: 120 },\n    senior: { min: 130, max: 160 },\n    lead: { min: 160, max: 220 }\n  },\n  {\n    region: 'Europe',\n    junior: { min: 45, max: 60 },\n    mid: { min: 65, max: 85 },\n    senior: { min: 90, max: 120 },\n    lead: { min: 120, max: 160 }\n  },\n  {\n    region: 'Asia',\n    junior: { min: 25, max: 40 },\n    mid: { min: 45, max: 65 },\n    senior: { min: 70, max: 95 },\n    lead: { min: 95, max: 130 }\n  },\n  {\n    region: 'Canada',\n    junior: { min: 55, max: 70 },\n    mid: { min: 75, max: 95 },\n    senior: { min: 100, max: 130 },\n    lead: { min: 130, max: 170 }\n  },\n  {\n    region: 'Australia',\n    junior: { min: 60, max: 75 },\n    mid: { min: 80, max: 100 },\n    senior: { min: 110, max: 140 },\n    lead: { min: 140, max: 180 }\n  }\n];\n\nconst seniorityLevels = [\n  { key: 'junior', label: 'Junior (0-2 years)' },\n  { key: 'mid', label: 'Mid (3-5 years)' },\n  { key: 'senior', label: 'Senior (6-10 years)' },\n  { key: 'lead', label: 'Lead (10+ years)' }\n];\n\n// Function to get color based on salary average\nconst getSalaryColor = (min: number, max: number): string => {\n  const avg = (min + max) / 2;\n  const maxSalary = 250;\n  const intensity = avg / maxSalary;\n  \n  // Create gradient from dark gray to sage (#8AA97A)\n  if (intensity < 0.2) {\n    return '#2a2a2a'; // Very dark gray\n  } else if (intensity < 0.3) {\n    return '#3a3a3a';\n  } else if (intensity < 0.4) {\n    return '#4a4a4a';\n  } else if (intensity < 0.5) {\n    return '#5a5a5a';\n  } else if (intensity < 0.6) {\n    return '#6B8261'; // Starting to add sage tint\n  } else if (intensity < 0.7) {\n    return '#7A9170';\n  } else if (intensity < 0.8) {\n    return '#8AA97A'; // Full sage\n  } else {\n    return '#9BB88B'; // Lighter sage for highest values\n  }\n};\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload }: any) => {\n  if (active && payload && payload.length) {\n    const { region, level, min, max, levelLabel } = payload[0].payload;\n    return (\n      <div className=\"bg-[#121212] border border-[#8AA97A]/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200\">\n        <p className=\"font-semibold text-[#f4f4e4] mb-1\">{region}</p>\n        <p className=\"text-sm text-[#f4f4e4]/90 mb-2\">{levelLabel}</p>\n        <p className=\"text-sm text-[#f4f4e4]/90\">\n          Salary Range:\n          <span className=\"ml-2 font-mono font-semibold text-[#8AA97A]\">\n            ${min}k - ${max}k\n          </span>\n        </p>\n        <p className=\"text-xs text-[#f4f4e4]/60 mt-2\">\n          Average: ${Math.round((min + max) / 2)}k USD\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default function SalaryHeatmap() {\n  // Transform data into heatmap cells\n  const heatmapCells = salaryData.flatMap((region) =>\n    seniorityLevels.map((level) => {\n      const salaryRange = region[level.key as keyof RegionData] as SalaryRange;\n      return {\n        region: region.region,\n        level: level.key,\n        levelLabel: level.label,\n        min: salaryRange.min,\n        max: salaryRange.max,\n        color: getSalaryColor(salaryRange.min, salaryRange.max)\n      };\n    })\n  );\n\n  return (\n    <div className=\"w-full py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-[#8AA97A]/[0.02] rounded-xl border border-[#8AA97A]/10 p-6 transition-all duration-300 hover:border-[#8AA97A]/20\">\n          <div className=\"mb-6\">\n            <span className=\"text-[#f4f4e4]/50 uppercase tracking-wider text-xs font-mono\">Fig 03</span>\n            <h3 className=\"text-2xl font-semibold font-display text-[#f4f4e4] mt-1\">\n              UX/UI Designer Salaries by Region and Experience\n            </h3>\n            <p className=\"text-sm text-[#f4f4e4]/70 mt-2\">\n              Annual compensation in USD (2024 market data)\n            </p>\n          </div>\n          \n          {/* Heatmap Grid */}\n          <div className=\"overflow-x-auto\">\n            <div className=\"min-w-[600px]\">\n              {/* Column Headers */}\n              <div className=\"grid grid-cols-5 gap-2 mb-3\">\n                <div className=\"text-xs text-[#f4f4e4]/70 font-mono\"></div>\n                {seniorityLevels.map((level) => (\n                  <div key={level.key} className=\"text-xs text-[#f4f4e4]/70 font-mono text-center\">\n                    {level.label}\n                  </div>\n                ))}\n              </div>\n              \n              {/* Heatmap Rows */}\n              {salaryData.map((region) => (\n                <div key={region.region} className=\"grid grid-cols-5 gap-2 mb-2\">\n                  {/* Row Label */}\n                  <div className=\"text-sm text-[#f4f4e4]/90 flex items-center pr-2 font-medium\">\n                    {region.region}\n                  </div>\n                  \n                  {/* Cells */}\n                  {seniorityLevels.map((level) => {\n                    const salaryRange = region[level.key as keyof RegionData] as SalaryRange;\n                    const color = getSalaryColor(salaryRange.min, salaryRange.max);\n                    const avg = Math.round((salaryRange.min + salaryRange.max) / 2);\n                    \n                    return (\n                      <div\n                        key={`${region.region}-${level.key}`}\n                        className=\"relative group cursor-pointer transition-all duration-200 hover:scale-105\"\n                        style={{ backgroundColor: color }}\n                      >\n                        <div className=\"p-3 rounded text-center\">\n                          <div className=\"text-xs font-mono text-[#f4f4e4]/90 font-semibold\">\n                            ${avg}k\n                          </div>\n                          <div className=\"text-[10px] text-[#f4f4e4]/60 mt-1\">\n                            ${salaryRange.min}-${salaryRange.max}k\n                          </div>\n                        </div>\n                        \n                        {/* Hover Tooltip */}\n                        <div className=\"absolute z-10 hidden group-hover:block bottom-full left-1/2 -translate-x-1/2 mb-2 w-48\">\n                          <div className=\"bg-[#121212] border border-[#8AA97A]/40 rounded-lg px-3 py-2 shadow-xl\">\n                            <p className=\"text-xs font-semibold text-[#f4f4e4]\">{region.region}</p>\n                            <p className=\"text-xs text-[#f4f4e4]/80 mt-1\">{level.label}</p>\n                            <p className=\"text-xs text-[#8AA97A] font-mono mt-1\">\n                              ${salaryRange.min}k - ${salaryRange.max}k USD\n                            </p>\n                          </div>\n                          <div className=\"absolute top-full left-1/2 -translate-x-1/2 -mt-1\">\n                            <div className=\"w-0 h-0 border-l-[6px] border-l-transparent border-r-[6px] border-r-transparent border-t-[6px] border-t-[#121212]\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Legend */}\n          <div className=\"mt-8 flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-xs text-[#f4f4e4]/60\">Lower Salaries</span>\n              <div className=\"flex\">\n                {['#2a2a2a', '#3a3a3a', '#4a4a4a', '#5a5a5a', '#6B8261', '#7A9170', '#8AA97A', '#9BB88B'].map((color, index) => (\n                  <div\n                    key={index}\n                    className=\"w-8 h-4\"\n                    style={{ backgroundColor: color }}\n                  />\n                ))}\n              </div>\n              <span className=\"text-xs text-[#f4f4e4]/60\">Higher Salaries</span>\n            </div>\n          </div>\n          \n          <p className=\"text-xs text-[#f4f4e4]/50 mt-6 font-mono\">\n            Source: Industry salary surveys and recruitment data (2024). All values in USD thousands.\n          </p>\n          \n          {/* Additional Insights */}\n          <div className=\"mt-6 pt-6 border-t border-[#8AA97A]/10\">\n            <h4 className=\"text-sm font-semibold text-[#f4f4e4]/90 mb-3\">Key Insights:</h4>\n            <ul className=\"space-y-2 text-xs text-[#f4f4e4]/70\">\n              <li className=\"flex items-start\">\n                <span className=\"text-[#8AA97A] mr-2\">•</span>\n                US West Coast leads in compensation across all experience levels, with Lead roles reaching up to $250k\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-[#8AA97A] mr-2\">•</span>\n                Asia shows the lowest compensation ranges, reflecting cost of living and market differences\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-[#8AA97A] mr-2\">•</span>\n                Experience significantly impacts compensation, with Lead roles earning 2-3x Junior salaries in most regions\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-[#8AA97A] mr-2\">•</span>\n                Europe and Canada show similar mid-level compensation despite geographic differences\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":9943},"client/src/components/scroll-progress.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function ScrollProgress() {\n  const [scrollProgress, setScrollProgress] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      // Calculate scroll progress\n      const windowHeight = window.innerHeight;\n      const documentHeight = document.documentElement.scrollHeight;\n      const scrollTop = window.scrollY;\n      const scrollDistance = documentHeight - windowHeight;\n      const progress = scrollDistance > 0 ? (scrollTop / scrollDistance) * 100 : 0;\n      \n      setScrollProgress(Math.min(100, Math.max(0, progress)));\n    };\n\n    // Initial check\n    handleScroll();\n\n    // Add event listener with throttling\n    let ticking = false;\n    const updateScrollProgress = () => {\n      if (!ticking) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n        });\n        ticking = true;\n      }\n    };\n\n    window.addEventListener(\"scroll\", updateScrollProgress);\n    window.addEventListener(\"resize\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", updateScrollProgress);\n      window.removeEventListener(\"resize\", handleScroll);\n    };\n  }, []);\n\n  return (\n    <>\n      {/* Progress bar container - fixed at very top */}\n      <div \n        className=\"fixed top-0 left-0 right-0 z-[60] h-[3px] bg-background/50\"\n        data-testid=\"scroll-progress-container\"\n        aria-hidden=\"true\"\n      >\n        {/* Progress bar fill */}\n        <div\n          className={cn(\n            \"h-full transition-all duration-150 ease-out\",\n            \"bg-[#8AA97A]\",\n            \"shadow-[0_0_10px_rgba(138,153,122,0.5)]\"\n          )}\n          style={{\n            width: `${scrollProgress}%`,\n            transformOrigin: \"left\",\n          }}\n          data-testid=\"scroll-progress-bar\"\n        />\n        \n        {/* Subtle glow effect at the end of the progress bar */}\n        <div\n          className={cn(\n            \"absolute top-0 h-full w-8 bg-gradient-to-r from-[#8AA97A] to-transparent opacity-60\",\n            \"blur-sm transition-all duration-150\"\n          )}\n          style={{\n            left: `calc(${scrollProgress}% - 8px)`,\n            opacity: scrollProgress > 0 && scrollProgress < 100 ? 0.6 : 0,\n          }}\n        />\n      </div>\n\n      {/* Optional percentage indicator (hidden by default, can be shown on hover/focus) */}\n      <div\n        className={cn(\n          \"fixed top-3 right-4 z-[60] text-xs font-mono text-accent opacity-0\",\n          \"transition-opacity duration-300\",\n          \"pointer-events-none select-none\",\n          // Uncomment to show on scroll\n          // scrollProgress > 0 && scrollProgress < 100 && \"opacity-50\"\n        )}\n        data-testid=\"scroll-progress-percentage\"\n      >\n        {Math.round(scrollProgress)}%\n      </div>\n    </>\n  );\n}","size_bytes":2881},"client/src/components/section-divider.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface SectionDividerProps {\n  number: string;\n  label: string;\n  className?: string;\n}\n\nexport default function SectionDivider({ number, label, className }: SectionDividerProps) {\n  const dividerRef = useRef<HTMLDivElement>(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const [hasAnimated, setHasAnimated] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        // Only animate once when first entering viewport\n        if (entry.isIntersecting && !hasAnimated) {\n          setIsVisible(true);\n          setHasAnimated(true);\n        }\n      },\n      {\n        threshold: 0.2, // Trigger when 20% visible\n        rootMargin: \"0px 0px -50px 0px\", // Slightly before element is fully in view\n      }\n    );\n\n    if (dividerRef.current) {\n      observer.observe(dividerRef.current);\n    }\n\n    return () => {\n      if (dividerRef.current) {\n        observer.unobserve(dividerRef.current);\n      }\n    };\n  }, [hasAnimated]);\n\n  return (\n    <div\n      ref={dividerRef}\n      className={cn(\n        \"relative w-full overflow-hidden py-16 md:py-20\",\n        className\n      )}\n      data-testid={`section-divider-${number}`}\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"relative flex items-center\">\n          {/* Large watermark number - positioned to the left */}\n          <div\n            className={cn(\n              \"absolute -left-4 md:-left-8 lg:-left-12\",\n              \"transition-all duration-1000 ease-out\",\n              isVisible ? \"opacity-100 translate-x-0\" : \"opacity-0 -translate-x-10\"\n            )}\n            style={{\n              transitionDelay: \"100ms\",\n            }}\n          >\n            <span\n              className={cn(\n                \"font-display font-bold\",\n                \"text-[80px] sm:text-[100px] md:text-[120px] lg:text-[140px]\",\n                \"leading-none select-none\",\n                \"text-[#8AA97A]\",\n                \"opacity-[0.12]\"\n              )}\n              aria-hidden=\"true\"\n            >\n              {number}\n            </span>\n          </div>\n\n          {/* Section content container */}\n          <div className=\"relative z-10 flex-1 pl-20 sm:pl-32 md:pl-40 lg:pl-48\">\n            <div className=\"flex items-center gap-6\">\n              {/* Decorative line */}\n              <div\n                className={cn(\n                  \"h-[2px] bg-gradient-to-r from-[#8AA97A]/60 to-transparent\",\n                  \"transition-all duration-1000 ease-out\",\n                  isVisible ? \"opacity-100 w-24 sm:w-32 md:w-40\" : \"opacity-0 w-0\"\n                )}\n                style={{\n                  transitionDelay: \"300ms\",\n                }}\n              />\n\n              {/* Section label */}\n              <h2\n                className={cn(\n                  \"font-display text-2xl sm:text-3xl md:text-4xl font-semibold\",\n                  \"text-foreground tracking-tight\",\n                  \"transition-all duration-1000 ease-out\",\n                  isVisible ? \"opacity-100 translate-x-0\" : \"opacity-0 translate-x-10\"\n                )}\n                style={{\n                  transitionDelay: \"400ms\",\n                }}\n              >\n                {label}\n              </h2>\n\n              {/* Additional decorative element - geometric shape */}\n              <div\n                className={cn(\n                  \"hidden md:block\",\n                  \"transition-all duration-1000 ease-out\",\n                  isVisible ? \"opacity-100 rotate-0 scale-100\" : \"opacity-0 rotate-45 scale-0\"\n                )}\n                style={{\n                  transitionDelay: \"500ms\",\n                }}\n              >\n                <svg\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  className=\"text-[#8AA97A]/40\"\n                >\n                  <rect\n                    x=\"3\"\n                    y=\"3\"\n                    width=\"18\"\n                    height=\"18\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    transform=\"rotate(45 12 12)\"\n                    style={{\n                      transformOrigin: \"center\",\n                      transform: \"rotate(45deg)\",\n                    }}\n                  />\n                </svg>\n              </div>\n            </div>\n\n            {/* Subtle underline */}\n            <div\n              className={cn(\n                \"mt-4 h-[1px] bg-gradient-to-r from-[#8AA97A]/30 via-[#8AA97A]/10 to-transparent\",\n                \"transition-all duration-1200 ease-out\",\n                isVisible ? \"opacity-100 w-full\" : \"opacity-0 w-0\"\n              )}\n              style={{\n                transitionDelay: \"600ms\",\n              }}\n            />\n          </div>\n\n          {/* Right decorative dots pattern */}\n          <div\n            className={cn(\n              \"absolute right-4 md:right-8 lg:right-12 top-1/2 -translate-y-1/2\",\n              \"grid grid-cols-3 gap-1.5\",\n              \"transition-all duration-1000 ease-out\",\n              isVisible ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"\n            )}\n            style={{\n              transitionDelay: \"700ms\",\n            }}\n            aria-hidden=\"true\"\n          >\n            {[...Array(9)].map((_, i) => (\n              <div\n                key={i}\n                className={cn(\n                  \"w-1.5 h-1.5 rounded-full bg-[#8AA97A]/20\",\n                  \"transition-all duration-300\",\n                  i === 4 && \"bg-[#8AA97A]/40\" // Center dot slightly brighter\n                )}\n                style={{\n                  transitionDelay: `${700 + i * 50}ms`,\n                  opacity: isVisible ? 1 : 0,\n                  transform: isVisible ? \"scale(1)\" : \"scale(0)\",\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":6063},"client/src/components/sticky-navigation.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { Download, Menu, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport ShareButtons from \"./share-buttons\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function StickyNavigation() {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isScrollingUp, setIsScrollingUp] = useState(false);\n  const [activeSection, setActiveSection] = useState<string>(\"\");\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const lastScrollY = useRef(0);\n  const scrollTimeout = useRef<NodeJS.Timeout>();\n\n  const sections = [\n    { id: \"origins\", label: \"Origins\" },\n    { id: \"revolution\", label: \"Revolution\" },\n    { id: \"formalization\", label: \"Formalization\" },\n    { id: \"tools\", label: \"Tools\" },\n    { id: \"economics\", label: \"Economics\" },\n    { id: \"claims\", label: \"Claims\" },\n  ];\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      const heroHeight = window.innerHeight;\n      \n      // Show navigation after scrolling past hero section\n      const shouldBeVisible = currentScrollY > heroHeight;\n      setIsVisible(shouldBeVisible);\n      \n      // Detect scroll direction for show/hide behavior\n      if (shouldBeVisible) {\n        if (currentScrollY < lastScrollY.current) {\n          setIsScrollingUp(true);\n        } else if (currentScrollY > lastScrollY.current) {\n          setIsScrollingUp(false);\n        }\n      }\n      \n      lastScrollY.current = currentScrollY;\n\n      // Update active section based on scroll position\n      const sectionElements = sections.map(section => ({\n        id: section.id,\n        element: document.getElementById(section.id)\n      })).filter(item => item.element);\n\n      const currentSection = sectionElements.find(section => {\n        const rect = section.element!.getBoundingClientRect();\n        return rect.top <= 100 && rect.bottom >= 100;\n      });\n\n      if (currentSection) {\n        setActiveSection(currentSection.id);\n      }\n    };\n\n    const throttledHandleScroll = () => {\n      if (scrollTimeout.current) {\n        clearTimeout(scrollTimeout.current);\n      }\n      scrollTimeout.current = setTimeout(handleScroll, 10);\n    };\n\n    window.addEventListener(\"scroll\", throttledHandleScroll);\n    handleScroll(); // Initial check\n    \n    return () => {\n      window.removeEventListener(\"scroll\", throttledHandleScroll);\n      if (scrollTimeout.current) {\n        clearTimeout(scrollTimeout.current);\n      }\n    };\n  }, []);\n\n  const handlePdfDownload = () => {\n    window.print();\n  };\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      const offset = 80; // Height of sticky nav\n      const elementPosition = element.getBoundingClientRect().top + window.scrollY;\n      const offsetPosition = elementPosition - offset;\n\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: \"smooth\"\n      });\n      \n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {/* Sticky Navigation Bar */}\n      <nav\n        className={cn(\n          \"fixed top-0 left-0 right-0 z-40 transition-all duration-300\",\n          \"bg-background/90 backdrop-blur-md border-b border-accent/20\",\n          isVisible && isScrollingUp ? \"translate-y-0\" : \"-translate-y-full\",\n          isVisible ? \"opacity-100\" : \"opacity-0\"\n        )}\n        data-testid=\"sticky-navigation\"\n      >\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            {/* Left: Branding */}\n            <div className=\"flex items-center space-x-2 flex-shrink-0\">\n              <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12 2L2 7L12 12L22 7L12 2Z\" stroke=\"#8AA97A\" strokeWidth=\"2\" strokeLinejoin=\"round\"/>\n                <path d=\"M2 17L12 22L22 17\" stroke=\"#8AA97A\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M2 12L12 17L22 12\" stroke=\"#8AA97A\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              </svg>\n              <span className=\"font-display font-semibold text-sm sm:text-base\">UX/UI Timeline</span>\n            </div>\n\n            {/* Center: Section Navigation - Desktop */}\n            <nav className=\"hidden lg:flex items-center space-x-1 xl:space-x-2\">\n              {sections.map((section) => (\n                <button\n                  key={section.id}\n                  onClick={() => scrollToSection(section.id)}\n                  className={cn(\n                    \"px-3 py-2 text-sm font-medium transition-all duration-200\",\n                    \"hover:text-accent\",\n                    activeSection === section.id\n                      ? \"text-accent border-b-2 border-accent\"\n                      : \"text-muted-foreground hover:text-foreground\"\n                  )}\n                  data-testid={`nav-anchor-${section.id}`}\n                >\n                  {section.label}\n                </button>\n              ))}\n            </nav>\n\n            {/* Right: Actions - Desktop */}\n            <div className=\"hidden sm:flex items-center space-x-3\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                className=\"hover-lift border-accent/30 hover:border-accent hover:bg-accent/10 transition-all\"\n                onClick={handlePdfDownload}\n                data-testid=\"button-sticky-pdf-download\"\n              >\n                <span className=\"flex items-center space-x-2\">\n                  <span>PDF</span>\n                  <Download className=\"w-4 h-4\" />\n                </span>\n              </Button>\n              <ShareButtons />\n            </div>\n\n            {/* Mobile Menu Button */}\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"sm:hidden p-2 rounded-lg hover:bg-accent/10 transition-colors\"\n              data-testid=\"button-mobile-menu\"\n              aria-label={isMobileMenuOpen ? \"Close menu\" : \"Open menu\"}\n            >\n              {isMobileMenuOpen ? (\n                <X className=\"w-5 h-5\" />\n              ) : (\n                <Menu className=\"w-5 h-5\" />\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        <div\n          className={cn(\n            \"sm:hidden overflow-hidden transition-all duration-300\",\n            \"bg-background/95 backdrop-blur-md border-t border-accent/20\",\n            isMobileMenuOpen ? \"max-h-96\" : \"max-h-0\"\n          )}\n        >\n          <div className=\"px-4 py-4 space-y-3\">\n            {/* Mobile Navigation Links */}\n            {sections.map((section) => (\n              <button\n                key={section.id}\n                onClick={() => scrollToSection(section.id)}\n                className={cn(\n                  \"block w-full text-left px-3 py-2 rounded-lg text-sm font-medium transition-all\",\n                  \"hover:bg-accent/10\",\n                  activeSection === section.id\n                    ? \"text-accent bg-accent/10\"\n                    : \"text-muted-foreground hover:text-foreground\"\n                )}\n                data-testid={`nav-mobile-anchor-${section.id}`}\n              >\n                {section.label}\n              </button>\n            ))}\n            \n            {/* Mobile Actions */}\n            <div className=\"flex gap-3 pt-3 border-t border-accent/20\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\" \n                className=\"flex-1 border-accent/30 hover:border-accent hover:bg-accent/10\"\n                onClick={handlePdfDownload}\n                data-testid=\"button-mobile-pdf-download\"\n              >\n                <span className=\"flex items-center justify-center space-x-2\">\n                  <span>PDF</span>\n                  <Download className=\"w-4 h-4\" />\n                </span>\n              </Button>\n              <div className=\"flex-1\">\n                <ShareButtons />\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Spacer to prevent content jump when nav becomes sticky */}\n      {isVisible && <div className=\"h-16\" />}\n    </>\n  );\n}","size_bytes":8363},"client/src/components/ux-timeline-chart.tsx":{"content":"import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Dot } from 'recharts';\n\nconst data = [\n  { year: 1973, professionals: 1, milestone: 'Xerox Alto GUI' },\n  { year: 1984, professionals: 5, milestone: 'Apple Macintosh' },\n  { year: 1988, professionals: 20, milestone: \"Don Norman's Book\" },\n  { year: 1990, professionals: 50, milestone: 'Nielsen Heuristics' },\n  { year: 1993, professionals: 100, milestone: 'UX Term Coined' },\n  { year: 1995, professionals: 500, milestone: 'First UX Consultancy' },\n  { year: 2000, professionals: 2000, milestone: 'UX Job Roles Emerge' },\n  { year: 2007, professionals: 10000, milestone: 'iPhone/Mobile UX' },\n  { year: 2010, professionals: 50000, milestone: 'Sketch Tool Launch' },\n  { year: 2014, professionals: 100000, milestone: 'Google Material Design' },\n  { year: 2016, professionals: 200000, milestone: 'Figma Collaboration' },\n  { year: 2020, professionals: 500000, milestone: 'UX Industry Maturity' },\n  { year: 2025, professionals: 800000, milestone: 'Current Year' }\n];\n\nconst CustomDot = (props: any) => {\n  const { cx, cy, payload } = props;\n  \n  if (payload.milestone && typeof cx === 'number' && typeof cy === 'number' && !isNaN(cx) && !isNaN(cy)) {\n    return (\n      <g>\n        <circle \n          cx={cx} \n          cy={cy} \n          r={5} \n          fill=\"#8AA97A\" \n          stroke=\"#8AA97A\" \n          strokeWidth={2}\n          className=\"transition-all duration-200\"\n        />\n      </g>\n    );\n  }\n  return null;\n};\n\nconst CustomTooltip = ({ active, payload }: any) => {\n  if (active && payload && payload.length) {\n    const data = payload[0].payload;\n    return (\n      <div className=\"bg-[#121212] border border-[#8AA97A]/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200\">\n        <p className=\"font-semibold text-[#f4f4e4] mb-2\">{data.year}</p>\n        <p className=\"text-sm text-[#f4f4e4]/90\">\n          Professionals: \n          <span className=\"ml-2 font-mono font-semibold text-[#8AA97A]\">\n            {data.professionals.toLocaleString()}\n          </span>\n        </p>\n        {data.milestone && (\n          <p className=\"text-xs text-[#f4f4e4]/60 mt-2\">\n            {data.milestone}\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default function UXTimelineChart() {\n  return (\n    <>\n      <section id=\"formalization\" className=\"py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"space-y-6\">\n            <div className=\"bg-[#8AA97A]/[0.02] rounded-xl border border-[#8AA97A]/10 p-6 transition-all duration-300 hover:border-[#8AA97A]/20\">\n              <div className=\"mb-4\">\n                <span className=\"text-[#f4f4e4]/50 uppercase tracking-wider text-xs font-mono\">Fig 03</span>\n                <h3 className=\"text-2xl font-semibold font-display text-[#f4f4e4] mt-1\">\n                  UX/UI Professional Roles Evolution Timeline\n                </h3>\n                <p className=\"text-sm text-[#f4f4e4]/70 mt-2\">\n                  Exponential growth of UX professionals from GUI inception to industry maturity\n                </p>\n              </div>\n              \n              <div className=\"w-full h-96\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart data={data} margin={{ top: 20, right: 30, left: 60, bottom: 60 }}>\n                    <CartesianGrid \n                      strokeDasharray=\"3 3\" \n                      stroke=\"#8AA97A\" \n                      opacity={0.05}\n                      verticalPoints={[0]}\n                    />\n                    <XAxis \n                      dataKey=\"year\" \n                      stroke=\"transparent\"\n                      tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                      axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                      tickLine={false}\n                      label={{ \n                        value: 'Year', \n                        position: 'insideBottom', \n                        offset: -10,\n                        style: { fill: '#f4f4e4', opacity: 0.7, fontSize: 12 }\n                      }}\n                      domain={[1970, 2025]}\n                    />\n                    <YAxis \n                      stroke=\"transparent\"\n                      tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                      axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                      tickLine={false}\n                      label={{ \n                        value: 'Professional Roles (log scale)', \n                        angle: -90, \n                        position: 'insideLeft',\n                        style: { fill: '#f4f4e4', opacity: 0.7, fontSize: 12 }\n                      }}\n                      scale=\"log\"\n                      domain={[1, 1000000]}\n                      ticks={[1, 10, 100, 1000, 10000, 100000, 1000000]}\n                      tickFormatter={(value) => {\n                        if (value >= 1000000) return '1M';\n                        if (value >= 100000) return '100K';\n                        if (value >= 10000) return '10K';\n                        if (value >= 1000) return '1K';\n                        if (value >= 100) return '100';\n                        if (value >= 10) return '10';\n                        return '1';\n                      }}\n                    />\n                    <Tooltip \n                      content={<CustomTooltip />}\n                      cursor={{ stroke: '#8AA97A', strokeWidth: 1, opacity: 0.2 }}\n                      animationDuration={200}\n                    />\n                    <Line \n                      type=\"monotone\" \n                      dataKey=\"professionals\" \n                      stroke=\"#8AA97A\"\n                      strokeWidth={3}\n                      dot={<CustomDot />}\n                      activeDot={{ \n                        r: 7, \n                        fill: '#DB4545',\n                        strokeWidth: 2,\n                        stroke: '#DB4545'\n                      }}\n                      animationDuration={1500}\n                      animationBegin={0}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n              \n              <p className=\"text-xs text-[#f4f4e4]/50 mt-4 font-mono\">\n                Source: Industry research on UX/UI professional growth patterns (1973-2025)\n              </p>\n            </div>\n\n            <div className=\"space-y-4 pt-4\">\n              <h4 className=\"font-semibold text-sm uppercase tracking-wider text-[#f4f4e4]/70\">Key Milestones</h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {data.filter(d => d.milestone).map((item, index) => (\n                  <div \n                    key={item.year}\n                    className=\"flex items-start space-x-3 p-3 bg-[#8AA97A]/[0.02] rounded-lg border border-[#8AA97A]/10 transition-all duration-200 hover:border-[#8AA97A]/20\"\n                    data-testid={`milestone-${item.year}`}\n                  >\n                    <div className=\"w-2 h-2 rounded-full bg-[#8AA97A] mt-1.5 flex-shrink-0 animate-pulse\" />\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-baseline justify-between\">\n                        <span className=\"font-mono text-sm font-semibold text-[#f4f4e4]\">{item.year}</span>\n                        <span className=\"text-xs text-[#f4f4e4]/60\">{item.professionals.toLocaleString()} roles</span>\n                      </div>\n                      <p className=\"text-sm text-[#f4f4e4]/80 mt-0.5\">{item.milestone}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <p className=\"text-xs text-[#f4f4e4]/50 pt-4 font-mono\">\n              Note: Professional roles estimates based on industry growth and tool adoption data\n            </p>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"py-8 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-3xl mx-auto\">\n          <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p>\n              But the rapid growth won't be the last. Because today the Designers are back — in the hundreds of thousands — and they are backed by billions of dollars in design tools and resources to build user-centered experiences. However, their effort and tools alone are not enough to transform every digital experience. We need a UX Renaissance to democratize design and transform the way teams build products. Here is my treatise on how to get that done.\n            </p>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}","size_bytes":8785},"client/src/components/ux-tool-evolution-chart.tsx":{"content":"import { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\n\nconst data = [\n  { period: '1988-2010', tool: 'Photoshop', users: 50, collab: 10 },\n  { period: '2010-2016', tool: 'Sketch', users: 150, collab: 30 },\n  { period: '2016-2020', tool: 'Figma', users: 400, collab: 90 },\n  { period: '2020-2025', tool: 'Advanced Figma', users: 600, collab: 95 }\n];\n\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"bg-[#121212] border border-[#8AA97A]/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200\">\n        <p className=\"font-semibold text-[#f4f4e4] mb-2\">{label}</p>\n        {payload.map((entry: any, index: number) => (\n          <p key={index} className=\"text-sm text-[#f4f4e4]/90\">\n            {entry.name === 'users' ? 'UX Professionals' : 'Collaboration'}:\n            <span className=\"ml-2 font-mono font-semibold\" style={{ color: entry.color }}>\n              {entry.name === 'users' ? `${entry.value}k` : `${entry.value}%`}\n            </span>\n          </p>\n        ))}\n        {data.find(d => d.period === label)?.tool && (\n          <p className=\"text-xs text-[#f4f4e4]/60 mt-2\">\n            Primary Tool: {data.find(d => d.period === label)?.tool}\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default function UXToolEvolutionChart() {\n  return (\n    <div className=\"w-full\">\n      <div className=\"bg-[#8AA97A]/[0.02] rounded-xl border border-[#8AA97A]/10 p-6 transition-all duration-300 hover:border-[#8AA97A]/20\">\n        <div className=\"mb-4\">\n          <span className=\"text-[#f4f4e4]/50 uppercase tracking-wider text-xs font-mono\">Fig 01</span>\n          <h3 className=\"text-2xl font-semibold font-display text-[#f4f4e4] mt-1\">Design Tool Evolution & Professional Growth</h3>\n          <p className=\"text-sm text-[#f4f4e4]/70 mt-2\">\n            Tracking the correlation between tool capabilities and industry expansion over four decades\n          </p>\n        </div>\n        \n        <div className=\"h-80 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <ComposedChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 60 }}>\n              <CartesianGrid \n                strokeDasharray=\"3 3\" \n                stroke=\"#8AA97A\" \n                opacity={0.05}\n                verticalPoints={[0]}\n              />\n              <XAxis \n                dataKey=\"period\" \n                stroke=\"transparent\"\n                tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                tickLine={false}\n              />\n              <YAxis \n                yAxisId=\"left\"\n                stroke=\"transparent\"\n                tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                tickLine={false}\n                label={{ \n                  value: 'UX Professionals (thousands)', \n                  angle: -90, \n                  position: 'insideLeft',\n                  style: { fill: '#f4f4e4', opacity: 0.7, fontSize: 12 }\n                }}\n              />\n              <YAxis \n                yAxisId=\"right\"\n                orientation=\"right\"\n                stroke=\"transparent\"\n                tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                tickLine={false}\n                label={{ \n                  value: 'Collaboration Capability (%)', \n                  angle: 90, \n                  position: 'insideRight',\n                  style: { fill: '#f4f4e4', opacity: 0.7, fontSize: 12 }\n                }}\n                domain={[0, 100]}\n              />\n              <Tooltip \n                content={<CustomTooltip />}\n                cursor={{ fill: '#8AA97A', opacity: 0.05 }}\n                animationDuration={200}\n              />\n              <Legend \n                wrapperStyle={{ paddingTop: '24px' }}\n                iconType=\"rect\"\n                iconSize={12}\n                formatter={(value: string) => {\n                  const labels: Record<string, string> = {\n                    users: 'UX Professionals',\n                    collab: 'Collaboration Capability'\n                  };\n                  return <span className=\"text-xs text-[#f4f4e4]/80\">{labels[value] || value}</span>;\n                }}\n              />\n              <Bar \n                yAxisId=\"left\"\n                dataKey=\"users\" \n                fill=\"#8AA97A\"\n                radius={[6, 6, 0, 0]}\n                animationDuration={800}\n                animationBegin={0}\n              />\n              <Line \n                yAxisId=\"right\"\n                type=\"monotone\" \n                dataKey=\"collab\" \n                stroke=\"#DB4545\"\n                strokeWidth={3}\n                dot={{ fill: '#DB4545', r: 5, strokeWidth: 0 }}\n                activeDot={{ r: 7, strokeWidth: 2, stroke: '#DB4545', fill: '#121212' }}\n                animationDuration={1000}\n                animationBegin={200}\n              />\n            </ComposedChart>\n          </ResponsiveContainer>\n        </div>\n        \n        <p className=\"text-xs text-[#f4f4e4]/50 mt-4 font-mono\">\n          Source: Industry surveys and tool adoption metrics (1988-2025)\n        </p>\n      </div>\n    </div>\n  );\n}","size_bytes":5493},"client/src/contexts/reading-progress-context.tsx":{"content":"import { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\n\ninterface ReadingProgress {\n  scrollPosition: number;\n  readTheses: number[];\n  lastVisited: string;\n}\n\ninterface ReadingProgressContextType {\n  progress: ReadingProgress;\n  saveProgress: (updates: Partial<ReadingProgress>) => void;\n  markThesisAsRead: (thesisNumber: number) => void;\n  updateScrollPosition: (position: number) => void;\n  clearProgress: () => void;\n  getProgressPercentage: () => number;\n}\n\nconst ReadingProgressContext = createContext<ReadingProgressContextType | null>(null);\n\nconst STORAGE_KEY = 'defense-reformation-reading-progress';\n\nexport function ReadingProgressProvider({ children }: { children: ReactNode }) {\n  const [progress, setProgress] = useState<ReadingProgress>({\n    scrollPosition: 0,\n    readTheses: [],\n    lastVisited: new Date().toISOString(),\n  });\n\n  useEffect(() => {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        setProgress(parsed);\n      } catch (error) {\n        console.error('Failed to parse reading progress:', error);\n      }\n    }\n  }, []);\n\n  const saveProgress = useCallback((updates: Partial<ReadingProgress>) => {\n    setProgress((prev) => {\n      const newProgress = { \n        ...prev, \n        ...updates,\n        lastVisited: new Date().toISOString() \n      };\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newProgress));\n      return newProgress;\n    });\n  }, []);\n\n  const markThesisAsRead = useCallback((thesisNumber: number) => {\n    setProgress((prev) => {\n      if (prev.readTheses.includes(thesisNumber)) {\n        return prev;\n      }\n      const newProgress = {\n        ...prev,\n        readTheses: [...prev.readTheses, thesisNumber].sort((a, b) => a - b),\n        lastVisited: new Date().toISOString(),\n      };\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newProgress));\n      return newProgress;\n    });\n  }, []);\n\n  const updateScrollPosition = useCallback((position: number) => {\n    saveProgress({ scrollPosition: position });\n  }, [saveProgress]);\n\n  const clearProgress = useCallback(() => {\n    localStorage.removeItem(STORAGE_KEY);\n    setProgress({\n      scrollPosition: 0,\n      readTheses: [],\n      lastVisited: new Date().toISOString(),\n    });\n  }, []);\n\n  const getProgressPercentage = useCallback(() => {\n    return Math.round((progress.readTheses.length / 18) * 100);\n  }, [progress.readTheses.length]);\n\n  return (\n    <ReadingProgressContext.Provider\n      value={{\n        progress,\n        saveProgress,\n        markThesisAsRead,\n        updateScrollPosition,\n        clearProgress,\n        getProgressPercentage,\n      }}\n    >\n      {children}\n    </ReadingProgressContext.Provider>\n  );\n}\n\nexport function useReadingProgress() {\n  const context = useContext(ReadingProgressContext);\n  if (!context) {\n    throw new Error('useReadingProgress must be used within ReadingProgressProvider');\n  }\n  return context;\n}\n","size_bytes":3011},"client/src/hooks/use-reading-progress.ts":{"content":"import { useState, useEffect, useCallback } from 'react';\n\ninterface ReadingProgress {\n  scrollPosition: number;\n  readTheses: number[];\n  lastVisited: string;\n}\n\nconst STORAGE_KEY = 'defense-reformation-reading-progress';\n\nexport function useReadingProgress() {\n  const [progress, setProgress] = useState<ReadingProgress>({\n    scrollPosition: 0,\n    readTheses: [],\n    lastVisited: new Date().toISOString(),\n  });\n\n  useEffect(() => {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        setProgress(parsed);\n      } catch (error) {\n        console.error('Failed to parse reading progress:', error);\n      }\n    }\n  }, []);\n\n  const saveProgress = useCallback((updates: Partial<ReadingProgress>) => {\n    setProgress((prev) => {\n      const newProgress = { \n        ...prev, \n        ...updates,\n        lastVisited: new Date().toISOString() \n      };\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newProgress));\n      return newProgress;\n    });\n  }, []);\n\n  const markThesisAsRead = useCallback((thesisNumber: number) => {\n    setProgress((prev) => {\n      if (prev.readTheses.includes(thesisNumber)) {\n        return prev;\n      }\n      const newProgress = {\n        ...prev,\n        readTheses: [...prev.readTheses, thesisNumber].sort((a, b) => a - b),\n        lastVisited: new Date().toISOString(),\n      };\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newProgress));\n      return newProgress;\n    });\n  }, []);\n\n  const updateScrollPosition = useCallback((position: number) => {\n    saveProgress({ scrollPosition: position });\n  }, [saveProgress]);\n\n  const clearProgress = useCallback(() => {\n    localStorage.removeItem(STORAGE_KEY);\n    setProgress({\n      scrollPosition: 0,\n      readTheses: [],\n      lastVisited: new Date().toISOString(),\n    });\n  }, []);\n\n  const getProgressPercentage = useCallback(() => {\n    return Math.round((progress.readTheses.length / 18) * 100);\n  }, [progress.readTheses.length]);\n\n  return {\n    progress,\n    saveProgress,\n    markThesisAsRead,\n    updateScrollPosition,\n    clearProgress,\n    getProgressPercentage,\n  };\n}\n","size_bytes":2169},"client/src/components/market-share-chart.tsx":{"content":"import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { useState } from 'react';\n\n// Comprehensive market share data from 2010-2024\nconst marketData = [\n  {\n    year: 2010,\n    Photoshop: 85,\n    Sketch: 0,\n    'Adobe XD': 0,\n    Figma: 0,\n    InVision: 0,\n    Framer: 0,\n    Others: 15,\n    milestone: 'Sketch launches'\n  },\n  {\n    year: 2012,\n    Photoshop: 70,\n    Sketch: 20,\n    'Adobe XD': 0,\n    Figma: 0,\n    InVision: 0,\n    Framer: 0,\n    Others: 10,\n  },\n  {\n    year: 2014,\n    Photoshop: 50,\n    Sketch: 35,\n    'Adobe XD': 0,\n    Figma: 0,\n    InVision: 10,\n    Framer: 0,\n    Others: 5,\n  },\n  {\n    year: 2016,\n    Photoshop: 35,\n    Sketch: 40,\n    'Adobe XD': 5,\n    Figma: 0,\n    InVision: 15,\n    Framer: 0,\n    Others: 5,\n    milestone: 'Figma launches'\n  },\n  {\n    year: 2018,\n    Photoshop: 25,\n    Sketch: 35,\n    'Adobe XD': 10,\n    Figma: 15,\n    InVision: 10,\n    Framer: 5,\n    Others: 0,\n  },\n  {\n    year: 2020,\n    Photoshop: 15,\n    Sketch: 25,\n    'Adobe XD': 10,\n    Figma: 35,\n    InVision: 5,\n    Framer: 10,\n    Others: 0,\n    milestone: 'Figma overtakes Sketch'\n  },\n  {\n    year: 2022,\n    Photoshop: 10,\n    Sketch: 15,\n    'Adobe XD': 8,\n    Figma: 55,\n    InVision: 0,\n    Framer: 7,\n    Others: 5,\n    milestone: 'Adobe acquires Figma'\n  },\n  {\n    year: 2024,\n    Photoshop: 8,\n    Sketch: 10,\n    'Adobe XD': 5,\n    Figma: 65,\n    InVision: 0,\n    Framer: 7,\n    Others: 5,\n    milestone: 'Figma dominance'\n  },\n];\n\n// Color palette - sage for Figma (leading tool), complementary colors for others\nconst toolColors: Record<string, string> = {\n  Figma: '#8AA97A',      // Sage - primary accent\n  Sketch: '#FFA500',     // Orange\n  Photoshop: '#31A8FF',  // Adobe blue\n  'Adobe XD': '#FF61F6', // Magenta\n  InVision: '#FF3366',   // Pink\n  Framer: '#05F',        // Bright blue\n  Others: '#666666',     // Gray\n};\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    const data = marketData.find(d => d.year === label);\n    const sortedPayload = [...payload].sort((a, b) => b.value - a.value);\n    \n    return (\n      <div className=\"bg-[#121212] border border-[#8AA97A]/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200 min-w-[200px]\">\n        <p className=\"font-semibold text-[#f4f4e4] mb-2\">{label}</p>\n        {sortedPayload.map((entry: any) => {\n          if (entry.value > 0) {\n            return (\n              <div key={entry.name} className=\"flex justify-between items-center py-1\">\n                <div className=\"flex items-center gap-2\">\n                  <div \n                    className=\"w-3 h-3 rounded-sm\" \n                    style={{ backgroundColor: entry.color }}\n                  />\n                  <span className=\"text-sm text-[#f4f4e4]/90\">{entry.name}</span>\n                </div>\n                <span className=\"text-sm font-mono font-semibold text-[#f4f4e4]\">\n                  {entry.value}%\n                </span>\n              </div>\n            );\n          }\n          return null;\n        })}\n        {data?.milestone && (\n          <p className=\"text-xs text-[#8AA97A] mt-3 pt-2 border-t border-[#8AA97A]/20 italic\">\n            ✦ {data.milestone}\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Custom legend component with interactivity\nconst CustomLegend = ({ payload, onToggle, hiddenTools }: any) => {\n  return (\n    <div className=\"flex flex-wrap justify-center gap-3 mt-6\">\n      {payload.map((entry: any) => {\n        const isHidden = hiddenTools.includes(entry.value);\n        return (\n          <button\n            key={entry.value}\n            onClick={() => onToggle(entry.value)}\n            className={`flex items-center gap-2 px-3 py-1.5 rounded-lg transition-all duration-200 \n              ${isHidden \n                ? 'opacity-40 bg-[#1a1a1a] hover:opacity-60' \n                : 'bg-[#8AA97A]/10 hover:bg-[#8AA97A]/20'\n              }`}\n          >\n            <div \n              className=\"w-3 h-3 rounded-sm transition-all duration-200\"\n              style={{ \n                backgroundColor: isHidden ? '#666' : entry.color,\n              }}\n            />\n            <span className=\"text-xs text-[#f4f4e4]/90 font-medium\">\n              {entry.value}\n            </span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default function MarketShareChart() {\n  const [hiddenTools, setHiddenTools] = useState<string[]>([]);\n  \n  const toggleTool = (tool: string) => {\n    setHiddenTools(prev => \n      prev.includes(tool) \n        ? prev.filter(t => t !== tool)\n        : [...prev, tool]\n    );\n  };\n  \n  // Filter data based on hidden tools\n  const displayData = marketData.map(entry => {\n    const newEntry = { ...entry };\n    hiddenTools.forEach(tool => {\n      if (tool in newEntry) {\n        (newEntry as any)[tool] = 0;\n      }\n    });\n    return newEntry;\n  });\n  \n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-[#8AA97A]/[0.02] rounded-xl border border-[#8AA97A]/10 p-6 transition-all duration-300 hover:border-[#8AA97A]/20\">\n          <div className=\"mb-6\">\n            <span className=\"text-[#f4f4e4]/50 uppercase tracking-wider text-xs font-mono\">Fig 02</span>\n            <h3 className=\"text-2xl font-semibold font-display text-[#f4f4e4] mt-1\">\n              Design Tool Market Share Evolution\n            </h3>\n            <p className=\"text-sm text-[#f4f4e4]/70 mt-2\">\n              Percentage of professional designers using each tool as primary (2010-2024)\n            </p>\n          </div>\n          \n          <div className=\"h-96 w-full\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <AreaChart \n                data={displayData} \n                margin={{ top: 10, right: 30, left: 20, bottom: 60 }}\n              >\n                <CartesianGrid \n                  strokeDasharray=\"3 3\" \n                  stroke=\"#8AA97A\" \n                  opacity={0.05}\n                  verticalPoints={[0]}\n                />\n                <XAxis \n                  dataKey=\"year\" \n                  stroke=\"transparent\"\n                  tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                  axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                  tickLine={false}\n                  interval={0}\n                />\n                <YAxis \n                  stroke=\"transparent\"\n                  tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                  axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                  tickLine={false}\n                  domain={[0, 100]}\n                  tickFormatter={(value) => `${value}%`}\n                  label={{ \n                    value: 'Market Share (%)', \n                    angle: -90, \n                    position: 'insideLeft',\n                    style: { fill: '#f4f4e4', opacity: 0.7, fontSize: 12 }\n                  }}\n                />\n                <Tooltip \n                  content={<CustomTooltip />}\n                  cursor={{ fill: '#8AA97A', opacity: 0.05 }}\n                  animationDuration={200}\n                />\n                <Legend \n                  content={(props) => \n                    <CustomLegend \n                      {...props} \n                      onToggle={toggleTool} \n                      hiddenTools={hiddenTools} \n                    />\n                  }\n                />\n                \n                {/* Areas stacked from bottom to top */}\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Others\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Others}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={0}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Framer\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Framer}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={100}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"InVision\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.InVision}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={200}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Adobe XD\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors['Adobe XD']}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={300}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Photoshop\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Photoshop}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={400}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Sketch\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Sketch}\n                  fillOpacity={0.8}\n                  animationDuration={1000}\n                  animationBegin={500}\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"Figma\"\n                  stackId=\"1\"\n                  stroke=\"transparent\"\n                  fill={toolColors.Figma}\n                  fillOpacity={0.9}\n                  animationDuration={1200}\n                  animationBegin={600}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n          \n          {/* Key Milestones */}\n          <div className=\"mt-8 pt-6 border-t border-[#8AA97A]/10\">\n            <h4 className=\"text-sm font-semibold text-[#f4f4e4]/90 mb-3\">Key Milestones:</h4>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#8AA97A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2010</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">Sketch launches, challenges Photoshop</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#8AA97A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2016</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">Figma introduces real-time collaboration</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#8AA97A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2020</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">Figma becomes market leader</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#8AA97A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2022</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">Adobe acquires Figma for $20B</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <p className=\"text-xs text-[#f4f4e4]/50 mt-6 font-mono\">\n            Source: Designer Tools Survey, State of Design Reports (2010-2024)\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":12124},"client/src/components/gui-revolution-section.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Monitor, MousePointer, Package, Trophy, Zap, DollarSign, TrendingUp, Users, Briefcase, BarChart2 } from \"lucide-react\";\n\nexport default function GuiRevolutionSection() {\n  const timelineEvents = [\n    {\n      year: \"1983\",\n      company: \"Apple\",\n      product: \"Lisa\",\n      price: \"$9,995\",\n      adjustedPrice: \"$31,000 (2025)\",\n      description: \"First mass-marketed personal computer with a GUI and mouse\",\n      impact: \"Commercial failure, only 10,000 units sold\",\n      milestone: \"Proved GUI was possible for personal computers\"\n    },\n    {\n      year: \"1984\",\n      company: \"Apple\", \n      product: \"Macintosh\",\n      price: \"$2,495\",\n      adjustedPrice: \"$7,500 (2025)\",\n      description: \"The computer for the rest of us - affordable GUI computing\",\n      impact: \"Sold 70,000 units in first 100 days\",\n      milestone: \"Made GUI accessible to creative professionals\"\n    },\n    {\n      year: \"1985\",\n      company: \"Microsoft\",\n      product: \"Windows 1.0\",\n      price: \"$99\",\n      adjustedPrice: \"$280 (2025)\",\n      description: \"Microsoft's first graphical operating environment for MS-DOS\",\n      impact: \"Initially poor reception, limited functionality\",\n      milestone: \"Microsoft's entry into GUI market\"\n    },\n    {\n      year: \"1990\",\n      company: \"Microsoft\",\n      product: \"Windows 3.0\",\n      price: \"$149\",\n      adjustedPrice: \"$350 (2025)\",\n      description: \"First commercially successful version of Windows\",\n      impact: \"Sold 10 million copies in 2 years\",\n      milestone: \"GUI becomes mainstream on PCs\"\n    },\n    {\n      year: \"1995\",\n      company: \"Microsoft\",\n      product: \"Windows 95\",\n      price: \"$209\",\n      adjustedPrice: \"$420 (2025)\",\n      description: \"Revolutionary OS with Start menu and taskbar\",\n      impact: \"40 million copies in first year\",\n      milestone: \"GUI becomes essential for all computer users\"\n    }\n  ];\n\n  const designPrinciples = [\n    {\n      name: \"WYSIWYG\",\n      fullName: \"What You See Is What You Get\",\n      description: \"Documents appear on screen exactly as they will when printed, eliminating the guesswork of command-line formatting.\",\n      icon: <Monitor className=\"w-6 h-6\" />,\n      example: \"MacWrite and MacPaint pioneered this principle in 1984\",\n      modernUsage: \"Foundation of all modern document editors and design tools\"\n    },\n    {\n      name: \"Direct Manipulation\",\n      fullName: \"Interact with objects, not commands\",\n      description: \"Users can click, drag, and manipulate visual representations of data directly, rather than typing abstract commands.\",\n      icon: <MousePointer className=\"w-6 h-6\" />,\n      example: \"Drag-and-drop file management introduced with Macintosh\",\n      modernUsage: \"Touch interfaces extend this principle to smartphones and tablets\"\n    },\n    {\n      name: \"Desktop Metaphor\",\n      fullName: \"Digital workspace mimics physical office\",\n      description: \"Files, folders, trash cans, and desktops provide familiar mental models for organizing digital information.\",\n      icon: <Package className=\"w-6 h-6\" />,\n      example: \"Xerox Star's office metaphor adopted by both Apple and Microsoft\",\n      modernUsage: \"Still the dominant paradigm for file management systems\"\n    },\n    {\n      name: \"Visual Consistency\",\n      fullName: \"Unified design language across applications\",\n      description: \"Standardized UI elements and behaviors create predictable, learnable interfaces across different programs.\",\n      icon: <Zap className=\"w-6 h-6\" />,\n      example: \"Apple's Human Interface Guidelines (1987) set the standard\",\n      modernUsage: \"Design systems like Material Design and iOS HIG continue this tradition\"\n    },\n    {\n      name: \"Menu Systems\",\n      fullName: \"Hierarchical organization of commands\",\n      description: \"Pull-down menus, context menus, and toolbars organize complex functionality into discoverable, accessible structures.\",\n      icon: <BarChart2 className=\"w-6 h-6\" />,\n      example: \"Lisa's menu bar became the standard for decades\",\n      modernUsage: \"Evolved into ribbons, hamburger menus, and command palettes\"\n    }\n  ];\n\n  const companyProfiles = [\n    {\n      company: \"Apple\",\n      leader: \"Steve Jobs\",\n      philosophy: \"Design-First Innovation\",\n      approach: \"Premium experience for creative professionals\",\n      keyMoments: [\n        {\n          year: \"1979\",\n          event: \"Steve Jobs visits Xerox PARC\",\n          impact: \"Sees Alto demo, immediately understands GUI's potential\"\n        },\n        {\n          year: \"1983\",\n          event: \"Lisa launch\",\n          impact: \"Over-engineered and overpriced, but proves the concept\"\n        },\n        {\n          year: \"1984\",\n          event: \"Macintosh Super Bowl ad\",\n          impact: \"Positions Apple as revolutionary alternative to IBM\"\n        },\n        {\n          year: \"1985\",\n          event: \"Jobs forced out of Apple\",\n          impact: \"GUI innovation stagnates until his return in 1997\"\n        }\n      ],\n      quote: \"Design is not just what it looks like and feels like. Design is how it works.\",\n      marketStrategy: \"Target creative professionals and education markets with premium, integrated experiences\",\n      revenue1990: \"$5.5 billion\",\n      marketShare1990: \"15% of personal computers\"\n    },\n    {\n      company: \"Microsoft\",\n      leader: \"Bill Gates\",\n      philosophy: \"Pragmatic Ubiquity\",\n      approach: \"Affordable software for every PC\",\n      keyMoments: [\n        {\n          year: \"1981\",\n          event: \"MS-DOS becomes IBM PC standard\",\n          impact: \"Establishes Microsoft as OS leader before GUI era\"\n        },\n        {\n          year: \"1985\",\n          event: \"Windows 1.0 ships late\",\n          impact: \"Poor initial reception, seen as Mac copycat\"\n        },\n        {\n          year: \"1990\",\n          event: \"Windows 3.0 breakthrough\",\n          impact: \"Finally delivers usable GUI for PC masses\"\n        },\n        {\n          year: \"1995\",\n          event: \"Windows 95 launch\",\n          impact: \"$700 million marketing campaign, computing goes mainstream\"\n        }\n      ],\n      quote: \"Your most unhappy customers are your greatest source of learning.\",\n      marketStrategy: \"License to all PC manufacturers, iterate rapidly based on market feedback\",\n      revenue1990: \"$1.8 billion\",\n      marketShare1990: \"90% of PC operating systems\"\n    }\n  ];\n\n  const marketMilestones = [\n    { year: \"1984\", macs: 0.07, windows: 0, total: 0.07, label: \"Mac launches\" },\n    { year: \"1985\", macs: 0.2, windows: 0.02, total: 0.22, label: \"Windows 1.0\" },\n    { year: \"1990\", macs: 1.5, windows: 10, total: 11.5, label: \"Windows 3.0\" },\n    { year: \"1995\", macs: 4.5, windows: 60, total: 64.5, label: \"Windows 95\" },\n    { year: \"2000\", macs: 3.5, windows: 300, total: 303.5, label: \"Peak dominance\" }\n  ];\n\n  return (\n    <section className=\"py-24 px-4 sm:px-6 lg:px-8\" data-testid=\"section-gui-revolution\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Opening Narrative */}\n        <div className=\"max-w-4xl mx-auto mb-20\">\n          <h2 className=\"font-display text-5xl sm:text-6xl font-bold mb-8 leading-tight\" data-testid=\"text-revolution-heading\">\n            The GUI Wars: When Computing Became Personal\n          </h2>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p className=\"text-xl\">\n              In 1979, a young Steve Jobs walked into Xerox PARC and witnessed the future. What he saw — a computer controlled by pointing and clicking rather than typing commands — would spark a revolution that transformed computers from corporate tools into personal creative instruments. This is the story of how two companies, Apple and Microsoft, took an academic research project and turned it into the foundation of modern computing.\n            </p>\n            \n            <p>\n              The commercialization of the graphical user interface wasn't just a business competition; it was a battle for the soul of computing. Would computers be beautiful, intuitive tools for creative expression, as Apple envisioned? Or practical, affordable utilities for every desk, as Microsoft pursued? The answer, ultimately, was both — but the journey there reshaped entire industries and established design principles we still follow today.\n            </p>\n          </div>\n        </div>\n\n        {/* Historical Timeline */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <TrendingUp className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-3xl font-semibold\">The Race to Democratize Computing</h3>\n          </div>\n          \n          <div className=\"relative\">\n            {/* Timeline Line */}\n            <div className=\"absolute left-8 top-0 bottom-0 w-0.5 bg-gradient-to-b from-accent/50 via-accent/30 to-transparent\" />\n            \n            <div className=\"space-y-8\">\n              {timelineEvents.map((event, index) => (\n                <div key={event.year} className=\"relative pl-20\" data-testid={`timeline-${event.year}`}>\n                  {/* Year Badge */}\n                  <div className=\"absolute left-0 top-0 w-16 h-16 rounded-full bg-background border-2 border-accent/50 flex items-center justify-center\">\n                    <span className=\"text-sm font-bold\">{event.year}</span>\n                  </div>\n                  \n                  {/* Content Card */}\n                  <Card className={`p-6 ${event.company === 'Apple' ? 'bg-gradient-to-r from-accent/10 to-transparent' : 'bg-gradient-to-r from-blue-500/10 to-transparent'} border-accent/30`}>\n                    <div className=\"flex flex-wrap items-center gap-4 mb-3\">\n                      <div className={`px-3 py-1 rounded-full text-xs font-semibold ${event.company === 'Apple' ? 'bg-accent/20 text-accent' : 'bg-blue-500/20 text-blue-400'}`}>\n                        {event.company}\n                      </div>\n                      <h4 className=\"text-2xl font-bold\">{event.product}</h4>\n                      <div className=\"flex items-center gap-2 text-sm\">\n                        <DollarSign className=\"w-4 h-4\" />\n                        <span className=\"font-mono\">{event.price}</span>\n                        <span className=\"text-muted-foreground\">({event.adjustedPrice})</span>\n                      </div>\n                    </div>\n                    \n                    <p className=\"text-foreground/80 mb-3\">{event.description}</p>\n                    \n                    <div className=\"flex flex-col sm:flex-row gap-4 pt-3 border-t border-accent/20\">\n                      <div className=\"flex items-start gap-2\">\n                        <Trophy className=\"w-4 h-4 text-accent mt-0.5\" />\n                        <div>\n                          <p className=\"text-xs text-muted-foreground\">Market Impact</p>\n                          <p className=\"text-sm font-medium\">{event.impact}</p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-start gap-2\">\n                        <Zap className=\"w-4 h-4 text-accent mt-0.5\" />\n                        <div>\n                          <p className=\"text-xs text-muted-foreground\">Historical Significance</p>\n                          <p className=\"text-sm font-medium\">{event.milestone}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Design Wars Callout */}\n        <Card className=\"p-8 mb-20 bg-gradient-to-br from-red-500/10 to-transparent border-red-500/30\">\n          <div className=\"flex items-start gap-4\">\n            <Briefcase className=\"w-6 h-6 text-red-400 mt-1\" />\n            <div>\n              <h4 className=\"text-xl font-semibold mb-3 text-red-400\">The Look and Feel Lawsuits</h4>\n              <div className=\"space-y-3 text-foreground/80\">\n                <p>\n                  <span className=\"font-semibold\">1988:</span> Apple sues Microsoft for copyright infringement over Windows 2.0, claiming it copies the \"look and feel\" of Macintosh.\n                </p>\n                <p>\n                  <span className=\"font-semibold\">1989:</span> Apple extends lawsuit to HP's NewWave, seeking to establish GUI elements as copyrightable expression.\n                </p>\n                <p>\n                  <span className=\"font-semibold\">1994:</span> Courts rule that GUI elements are functional, not artistic expression. Microsoft wins, establishing that interface concepts cannot be monopolized.\n                </p>\n                <p className=\"font-medium text-accent\">\n                  Impact: This ruling allowed GUI innovation to flourish across the industry, preventing any single company from owning fundamental interface concepts.\n                </p>\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Company Profiles */}\n        <div className=\"mb-24\">\n          <h3 className=\"font-display text-3xl font-semibold mb-12\">Two Visions, One Revolution</h3>\n          \n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            {companyProfiles.map((profile) => (\n              <Card key={profile.company} className=\"p-8 bg-card/50 backdrop-blur border-accent/30\" data-testid={`profile-${profile.company.toLowerCase()}`}>\n                <div className=\"mb-6\">\n                  <h4 className=\"text-3xl font-bold mb-2\">{profile.company}</h4>\n                  <p className=\"text-lg text-accent\">{profile.philosophy}</p>\n                  <p className=\"text-sm text-muted-foreground mt-1\">Led by {profile.leader}</p>\n                </div>\n                \n                <blockquote className=\"border-l-4 border-accent/50 pl-4 mb-6 italic text-foreground/70\">\n                  \"{profile.quote}\"\n                  <footer className=\"text-sm mt-2 not-italic\">— {profile.leader}</footer>\n                </blockquote>\n                \n                <div className=\"space-y-4 mb-6\">\n                  <p className=\"text-sm font-medium text-accent\">Strategy:</p>\n                  <p className=\"text-sm text-foreground/80\">{profile.marketStrategy}</p>\n                  \n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm font-medium text-accent\">Key Moments:</p>\n                    {profile.keyMoments.map((moment) => (\n                      <div key={moment.year} className=\"flex gap-3 text-sm\">\n                        <span className=\"font-mono text-accent/70\">{moment.year}</span>\n                        <div className=\"flex-1\">\n                          <p className=\"font-medium\">{moment.event}</p>\n                          <p className=\"text-muted-foreground text-xs\">{moment.impact}</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-4 pt-4 border-t border-accent/20\">\n                  <div>\n                    <p className=\"text-2xl font-bold text-accent\">{profile.revenue1990}</p>\n                    <p className=\"text-xs text-muted-foreground\">1990 Revenue</p>\n                  </div>\n                  <div>\n                    <p className=\"text-2xl font-bold text-accent\">{profile.marketShare1990}</p>\n                    <p className=\"text-xs text-muted-foreground\">1990 Market Share</p>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Market Evolution Visual */}\n        <div className=\"mb-24\">\n          <Card className=\"p-8 bg-gradient-to-br from-accent/10 to-transparent border-accent/30\">\n            <h4 className=\"text-2xl font-semibold mb-6 flex items-center gap-3\">\n              <BarChart2 className=\"w-6 h-6 text-accent\" />\n              GUI Operating System Adoption (Millions of Users)\n            </h4>\n            \n            <div className=\"space-y-4\">\n              {marketMilestones.map((milestone) => (\n                <div key={milestone.year} className=\"flex items-center gap-4\">\n                  <span className=\"font-mono text-sm w-12\">{milestone.year}</span>\n                  <div className=\"flex-1\">\n                    <div className=\"flex h-8 rounded overflow-hidden bg-background/50\">\n                      {milestone.macs > 0 && (\n                        <div \n                          className=\"bg-accent/70 flex items-center justify-center text-xs font-semibold\"\n                          style={{ width: `${(milestone.macs / milestone.total) * 100}%` }}\n                        >\n                          {milestone.macs >= 1 && `Mac: ${milestone.macs}M`}\n                        </div>\n                      )}\n                      {milestone.windows > 0 && (\n                        <div \n                          className=\"bg-blue-500/70 flex items-center justify-center text-xs font-semibold\"\n                          style={{ width: `${(milestone.windows / milestone.total) * 100}%` }}\n                        >\n                          {milestone.windows >= 1 && `Win: ${milestone.windows}M`}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <span className=\"text-sm text-muted-foreground w-24\">{milestone.label}</span>\n                </div>\n              ))}\n            </div>\n            \n            <p className=\"text-sm text-muted-foreground mt-6\">\n              By 2000, Windows dominated with over 90% market share, but Apple's focus on design excellence influenced the entire industry.\n            </p>\n          </Card>\n        </div>\n\n        {/* Core Design Principles */}\n        <div className=\"mb-24\">\n          <h3 className=\"font-display text-3xl font-semibold mb-12\">Design Principles That Shaped Computing</h3>\n          \n          <div className=\"grid gap-6\">\n            {designPrinciples.map((principle) => (\n              <Card key={principle.name} className=\"p-6 bg-card/50 backdrop-blur border-border hover:border-accent/50 transition-colors\" data-testid={`principle-${principle.name.toLowerCase()}`}>\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 rounded-lg bg-accent/20 flex items-center justify-center flex-shrink-0\">\n                    {principle.icon}\n                  </div>\n                  \n                  <div className=\"flex-1\">\n                    <div className=\"flex flex-wrap items-baseline gap-3 mb-3\">\n                      <h4 className=\"text-2xl font-bold\">{principle.name}</h4>\n                      <span className=\"text-sm text-muted-foreground\">({principle.fullName})</span>\n                    </div>\n                    \n                    <p className=\"text-foreground/80 mb-4\">{principle.description}</p>\n                    \n                    <div className=\"grid sm:grid-cols-2 gap-4 pt-4 border-t border-accent/20\">\n                      <div>\n                        <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-1\">Historical Example</p>\n                        <p className=\"text-sm text-foreground/70\">{principle.example}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-1\">Modern Legacy</p>\n                        <p className=\"text-sm text-foreground/70\">{principle.modernUsage}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Data Callouts */}\n        <div className=\"grid md:grid-cols-3 gap-8 mb-20\">\n          <Card className=\"p-8 bg-gradient-to-br from-accent/20 to-accent/10 border-accent/30\">\n            <DollarSign className=\"w-8 h-8 text-accent mb-4\" />\n            <h4 className=\"text-4xl font-bold text-accent mb-2\">75%</h4>\n            <p className=\"text-lg font-medium mb-2\">Price reduction 1983-1984</p>\n            <p className=\"text-sm text-foreground/70\">From Lisa's $9,995 to Macintosh's $2,495 made GUI accessible</p>\n          </Card>\n          \n          <Card className=\"p-8 bg-gradient-to-br from-blue-500/20 to-blue-500/10 border-blue-500/30\">\n            <Users className=\"w-8 h-8 text-blue-400 mb-4\" />\n            <h4 className=\"text-4xl font-bold text-blue-400 mb-2\">40M</h4>\n            <p className=\"text-lg font-medium mb-2\">Windows 95 users in year one</p>\n            <p className=\"text-sm text-foreground/70\">Largest software launch in history at the time</p>\n          </Card>\n          \n          <Card className=\"p-8 bg-gradient-to-br from-accent/20 to-accent/10 border-accent/30\">\n            <Trophy className=\"w-8 h-8 text-accent mb-4\" />\n            <h4 className=\"text-4xl font-bold text-accent mb-2\">$700M</h4>\n            <p className=\"text-lg font-medium mb-2\">Windows 95 marketing budget</p>\n            <p className=\"text-sm text-foreground/70\">Including licensing \"Start Me Up\" by The Rolling Stones</p>\n          </Card>\n        </div>\n\n        {/* Closing Narrative */}\n        <div className=\"max-w-4xl mx-auto\">\n          <Separator className=\"mb-12 bg-accent/20\" />\n          \n          <h3 className=\"font-display text-3xl font-semibold mb-8\">From Revolution to Foundation</h3>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90\">\n            <p>\n              The GUI revolution of the 1980s and 1990s wasn't just about making computers easier to use — it was about reimagining the relationship between humans and machines. Apple's vision of computers as \"bicycles for the mind\" and Microsoft's dream of \"a computer on every desk\" both came true, creating an industry worth trillions and transforming how humanity creates, communicates, and thinks.\n            </p>\n            \n            <p>\n              The principles established during these GUI wars — direct manipulation, visual consistency, WYSIWYG editing — became so fundamental that we now take them for granted. Every smartphone swipe, every drag-and-drop action, every menu you navigate traces its lineage back to these pioneering days when two companies fought to define the future of human-computer interaction.\n            </p>\n            \n            <p className=\"text-xl font-medium text-accent\">\n              What started as a $32,000 research computer at Xerox became a $3 trillion industry. The GUI didn't just change how we use computers — it changed what computers could be: not just tools for calculation, but extensions of human creativity and thought.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":22995},"client/src/components/industry-economics-section.tsx":{"content":"import { Building2, Users, TrendingUp, Globe, Briefcase, DollarSign, Target, Sparkles } from 'lucide-react';\nimport { SiApple, SiGoogle, SiWindows, SiMeta, SiAmazon, SiAdobe } from 'react-icons/si';\n\nexport default function IndustryEconomicsSection() {\n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\" data-testid=\"section-industry-economics\">\n      <div className=\"max-w-6xl mx-auto space-y-16\">\n        {/* Section Header */}\n        <div className=\"text-center space-y-4\">\n          <h2 className=\"font-display text-4xl sm:text-5xl lg:text-6xl font-bold leading-tight\" data-testid=\"text-industry-heading\">\n            Industry & Economics\n          </h2>\n          <p className=\"text-lg text-foreground/70 max-w-3xl mx-auto\">\n            How the UX/UI profession transformed from a single role at Apple to a \n            $18 billion global industry with half a million professionals\n          </p>\n        </div>\n\n        {/* Company Evolution Timeline */}\n        <div className=\"space-y-8\">\n          <div className=\"border-l-2 border-accent/30 pl-8\">\n            <h3 className=\"font-display text-2xl sm:text-3xl font-semibold mb-2\">\n              Company Evolution: Building Design Empires\n            </h3>\n            <p className=\"text-foreground/70 mb-8\">\n              From single designers to thousand-person teams in three decades\n            </p>\n          </div>\n\n          <div className=\"grid gap-6\">\n            {/* Apple */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiApple className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-lg\">Apple</h4>\n                    <span className=\"text-sm text-muted-foreground font-mono\">(1993-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">1993:</span> Don Norman becomes first \"User Experience Architect\" - literally invents the UX title\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2007:</span> iPhone launch with ~50 designers reshapes entire industry\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 500+ designers maintaining design-led culture, Human Interface Guidelines influence millions\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">1 → 500+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <TrendingUp className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">50,000% growth</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Google */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiGoogle className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-lg\">Google</h4>\n                    <span className=\"text-sm text-muted-foreground font-mono\">(2005-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2005:</span> First dedicated UX team formed with 10 designers\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2014:</span> Material Design launches, becomes industry standard\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 2000+ designers, dedicated UX research labs, AI-first design initiatives\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">10 → 2000+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Building2 className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">5 global UX labs</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Microsoft */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiWindows className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-lg\">Microsoft</h4>\n                    <span className=\"text-sm text-muted-foreground font-mono\">(1995-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">1995:</span> Windows 95 UI team of 20 pioneers graphical interfaces\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2012:</span> Metro design language for Windows 8\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 1500+ designers, Fluent Design System across all products\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">20 → 1500+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Sparkles className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">Fluent Design System</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Meta */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiMeta className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-lg\">Facebook/Meta</h4>\n                    <span className=\"text-sm text-muted-foreground font-mono\">(2006-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2006:</span> First designer hired, focus on \"move fast\" philosophy\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2015:</span> Design team grows to 200, React framework changes frontend\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 800+ designers working on social, VR/AR, and metaverse\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">1 → 800+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Target className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">VR/AR focus</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Amazon */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiAmazon className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-lg\">Amazon</h4>\n                    <span className=\"text-sm text-muted-foreground font-mono\">(1998-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">1998:</span> Early web designers focus on e-commerce usability\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2014:</span> Alexa team pioneers voice UI design\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> 1000+ designers across retail, AWS, devices, \"customer obsession\"\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">5 → 1000+ designers</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Briefcase className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">Customer obsession</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Adobe */}\n            <div className=\"group bg-card/50 border border-border rounded-lg p-6 hover:border-accent/50 transition-all\">\n              <div className=\"flex items-start gap-4\">\n                <div className=\"p-3 bg-accent/10 rounded-lg shrink-0\">\n                  <SiAdobe className=\"w-8 h-8 text-accent\" />\n                </div>\n                <div className=\"space-y-3 flex-1\">\n                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                    <h4 className=\"font-semibold text-lg\">Adobe</h4>\n                    <span className=\"text-sm text-muted-foreground font-mono\">(1990s-present)</span>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">1990s:</span> Tool maker for designers, Photoshop dominates\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2013:</span> Creative Cloud subscription model, XD for UX design\n                    </p>\n                    <p className=\"text-foreground/80\">\n                      <span className=\"font-semibold text-accent\">2024:</span> Platform for designers, AI-powered Creative Cloud, Figma acquisition\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4 pt-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <Building2 className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">Tools → Platform</span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <DollarSign className=\"w-4 h-4 text-accent\" />\n                      <span className=\"text-sm font-mono text-accent\">$20B Figma deal</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Role Evolution & Specialization */}\n        <div className=\"space-y-8\">\n          <div className=\"border-l-2 border-accent/30 pl-8\">\n            <h3 className=\"font-display text-2xl sm:text-3xl font-semibold mb-2\">\n              Role Evolution & Specialization\n            </h3>\n            <p className=\"text-foreground/70\">\n              From webmasters to specialized design engineers\n            </p>\n          </div>\n\n          {/* Role Branching Diagram */}\n          <div className=\"bg-card/50 border border-border rounded-lg p-8\">\n            <div className=\"space-y-8\">\n              {/* 1990s */}\n              <div className=\"relative\">\n                <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-accent/30\"></div>\n                <div className=\"pl-8\">\n                  <div className=\"flex items-center gap-4 mb-3\">\n                    <span className=\"font-mono text-accent font-semibold\">1990s</span>\n                    <div className=\"h-px bg-accent/20 flex-1\"></div>\n                  </div>\n                  <div className=\"flex flex-wrap gap-3\">\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">Webmaster</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">Graphic Designer</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* 2000s */}\n              <div className=\"relative\">\n                <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-accent/30\"></div>\n                <div className=\"pl-8\">\n                  <div className=\"flex items-center gap-4 mb-3\">\n                    <span className=\"font-mono text-accent font-semibold\">2000s</span>\n                    <div className=\"h-px bg-accent/20 flex-1\"></div>\n                  </div>\n                  <div className=\"flex flex-wrap gap-3\">\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">Information Architect</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">Interaction Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">Visual Designer</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* 2010s */}\n              <div className=\"relative\">\n                <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-accent/30\"></div>\n                <div className=\"pl-8\">\n                  <div className=\"flex items-center gap-4 mb-3\">\n                    <span className=\"font-mono text-accent font-semibold\">2010s</span>\n                    <div className=\"h-px bg-accent/20 flex-1\"></div>\n                  </div>\n                  <div className=\"flex flex-wrap gap-3\">\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">UX Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">UI Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">UX Researcher</span>\n                    <span className=\"px-3 py-1 bg-accent/10 border border-accent/30 rounded text-sm\">UX Writer</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* 2020s */}\n              <div className=\"relative\">\n                <div className=\"absolute left-0 top-0 bottom-0 w-0.5 bg-accent/30\"></div>\n                <div className=\"pl-8\">\n                  <div className=\"flex items-center gap-4 mb-3\">\n                    <span className=\"font-mono text-accent font-semibold\">2020s</span>\n                    <div className=\"h-px bg-accent/20 flex-1\"></div>\n                  </div>\n                  <div className=\"flex flex-wrap gap-3\">\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">Product Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">Design Systems Engineer</span>\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">UX Engineer</span>\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">Conversation Designer</span>\n                    <span className=\"px-3 py-1 bg-accent/20 border border-accent/40 rounded text-sm font-medium\">AR/VR Designer</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Economic Growth Data */}\n        <div className=\"space-y-8\">\n          <div className=\"border-l-2 border-accent/30 pl-8\">\n            <h3 className=\"font-display text-2xl sm:text-3xl font-semibold mb-2\">\n              Economic Impact & Growth\n            </h3>\n            <p className=\"text-foreground/70\">\n              The financial transformation of design from cost center to profit driver\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Design Team Sizes */}\n            <div className=\"bg-card/50 border border-border rounded-lg p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h4 className=\"font-semibold text-lg\">Team Size Evolution</h4>\n                <Users className=\"w-5 h-5 text-accent\" />\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">1995</span>\n                  <span className=\"font-mono font-semibold text-accent\">2-3 designers</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2005</span>\n                  <span className=\"font-mono font-semibold text-accent\">10-20 designers</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2015</span>\n                  <span className=\"font-mono font-semibold text-accent\">30-100 designers</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2024</span>\n                  <span className=\"font-mono font-semibold text-accent\">50-200 designers</span>\n                </div>\n              </div>\n              <div className=\"mt-4 pt-4 border-t border-border\">\n                <p className=\"text-xs text-foreground/60\">Average for mid-to-large tech companies</p>\n              </div>\n            </div>\n\n            {/* Budget Allocation */}\n            <div className=\"bg-card/50 border border-border rounded-lg p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h4 className=\"font-semibold text-lg\">Design Budget Growth</h4>\n                <DollarSign className=\"w-5 h-5 text-accent\" />\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">1990s</span>\n                  <span className=\"font-mono font-semibold text-accent\">1% of tech budget</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2000s</span>\n                  <span className=\"font-mono font-semibold text-accent\">2-3% of tech budget</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2010s</span>\n                  <span className=\"font-mono font-semibold text-accent\">5-8% of tech budget</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/70\">2020s</span>\n                  <span className=\"font-mono font-semibold text-accent\">5-15% of tech budget</span>\n                </div>\n              </div>\n              <div className=\"mt-4 pt-4 border-t border-border\">\n                <p className=\"text-xs text-foreground/60\">Percentage of total technology investment</p>\n              </div>\n            </div>\n\n            {/* ROI of Design */}\n            <div className=\"bg-card/50 border border-border rounded-lg p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h4 className=\"font-semibold text-lg\">ROI of Design</h4>\n                <TrendingUp className=\"w-5 h-5 text-accent\" />\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-foreground/90\">\n                    <span className=\"font-semibold text-accent\">2x</span> revenue growth for design-led companies\n                  </p>\n                  <p className=\"text-xs text-foreground/60\">McKinsey Design Index (2018)</p>\n                </div>\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-foreground/90\">\n                    <span className=\"font-semibold text-accent\">32%</span> higher revenue growth\n                  </p>\n                  <p className=\"text-xs text-foreground/60\">Design Management Institute (2015)</p>\n                </div>\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-foreground/90\">\n                    <span className=\"font-semibold text-accent\">56%</span> higher shareholder returns\n                  </p>\n                  <p className=\"text-xs text-foreground/60\">Design Value Index (2020)</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Unicorn Companies */}\n            <div className=\"bg-card/50 border border-border rounded-lg p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <h4 className=\"font-semibold text-lg\">Designer-Founded Unicorns</h4>\n                <Sparkles className=\"w-5 h-5 text-accent\" />\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/90\">Airbnb</span>\n                  <span className=\"font-mono text-sm text-accent\">$75B</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/90\">Pinterest</span>\n                  <span className=\"font-mono text-sm text-accent\">$12B</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/90\">Canva</span>\n                  <span className=\"font-mono text-sm text-accent\">$40B</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-foreground/90\">Figma</span>\n                  <span className=\"font-mono text-sm text-accent\">$20B</span>\n                </div>\n              </div>\n              <div className=\"mt-4 pt-4 border-t border-border\">\n                <p className=\"text-xs text-foreground/60\">Companies with designer co-founders</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Current Industry State */}\n        <div className=\"space-y-8\">\n          <div className=\"border-l-2 border-accent/30 pl-8\">\n            <h3 className=\"font-display text-2xl sm:text-3xl font-semibold mb-2\">\n              Current Industry State (2024)\n            </h3>\n            <p className=\"text-foreground/70\">\n              The global design profession by the numbers\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <div className=\"bg-gradient-to-br from-accent/20 to-accent/10 border border-accent/30 rounded-lg p-6 text-center\">\n              <Globe className=\"w-8 h-8 text-accent mx-auto mb-3\" />\n              <div className=\"text-3xl font-bold font-mono text-accent mb-1\">500,000+</div>\n              <div className=\"text-sm text-foreground/70\">UX Professionals Worldwide</div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-accent/20 to-accent/10 border border-accent/30 rounded-lg p-6 text-center\">\n              <DollarSign className=\"w-8 h-8 text-accent mx-auto mb-3\" />\n              <div className=\"text-3xl font-bold font-mono text-accent mb-1\">$18B</div>\n              <div className=\"text-sm text-foreground/70\">Design Tools Market</div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-accent/20 to-accent/10 border border-accent/30 rounded-lg p-6 text-center\">\n              <Users className=\"w-8 h-8 text-accent mx-auto mb-3\" />\n              <div className=\"text-3xl font-bold font-mono text-accent mb-1\">1:5-8</div>\n              <div className=\"text-sm text-foreground/70\">Designer to Engineer Ratio</div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-accent/20 to-accent/10 border border-accent/30 rounded-lg p-6 text-center\">\n              <Building2 className=\"w-8 h-8 text-accent mx-auto mb-3\" />\n              <div className=\"text-3xl font-bold font-mono text-accent mb-1\">65%</div>\n              <div className=\"text-sm text-foreground/70\">Remote or Hybrid Work</div>\n            </div>\n          </div>\n\n          <div className=\"bg-accent/5 border border-accent/20 rounded-lg p-6\">\n            <h4 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\n              <Globe className=\"w-5 h-5 text-accent\" />\n              Global Talent Distribution Impact\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-3\">\n                <h5 className=\"font-medium text-foreground/90\">Pre-Pandemic (2019)</h5>\n                <ul className=\"space-y-2 text-sm text-foreground/70\">\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    85% concentrated in tech hubs (SF, NYC, London, Berlin)\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    Limited opportunities outside major cities\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    Salary disparities based on location\n                  </li>\n                </ul>\n              </div>\n              <div className=\"space-y-3\">\n                <h5 className=\"font-medium text-foreground/90\">Post-Pandemic (2024)</h5>\n                <ul className=\"space-y-2 text-sm text-foreground/70\">\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    40% distributed across smaller cities and countries\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    Remote-first companies dominating hiring\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <span className=\"text-accent\">•</span>\n                    Location-adjusted but competitive global salaries\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Future Outlook */}\n        <div className=\"bg-gradient-to-br from-accent/10 to-transparent border border-accent/30 rounded-lg p-8\">\n          <h3 className=\"font-display text-2xl font-semibold mb-4\">The Next Decade: 2025-2035</h3>\n          <div className=\"space-y-4 text-foreground/80\">\n            <p className=\"text-lg leading-relaxed\">\n              As we enter the AI era, the UX/UI profession stands at another inflection point. \n              The industry that grew from one person to half a million professionals now faces \n              its greatest transformation yet.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-6\">\n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-accent\">AI Integration</h4>\n                <p className=\"text-sm text-foreground/70\">\n                  Design tools becoming AI-powered co-creators, not just productivity enhancers\n                </p>\n              </div>\n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-accent\">New Interfaces</h4>\n                <p className=\"text-sm text-foreground/70\">\n                  Spatial computing, brain-computer interfaces, and ambient computing\n                </p>\n              </div>\n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-accent\">Ethical Design</h4>\n                <p className=\"text-sm text-foreground/70\">\n                  Growing focus on responsible AI, privacy, and human-centered ethics\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":31503},"client/src/components/job-market-chart.tsx":{"content":"import { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend, ReferenceLine, ReferenceArea } from 'recharts';\n\n// Job market data with postings and search interest\nconst jobMarketData = [\n  {\n    year: 2014,\n    postings: 15,\n    searchInterest: 25,\n    annotation: null\n  },\n  {\n    year: 2015,\n    postings: 22,\n    searchInterest: 30,\n    annotation: null\n  },\n  {\n    year: 2016,\n    postings: 35,\n    searchInterest: 38,\n    annotation: null\n  },\n  {\n    year: 2017,\n    postings: 48,\n    searchInterest: 45,\n    annotation: null\n  },\n  {\n    year: 2018,\n    postings: 65,\n    searchInterest: 55,\n    annotation: null\n  },\n  {\n    year: 2019,\n    postings: 85,\n    searchInterest: 62,\n    annotation: null\n  },\n  {\n    year: 2020,\n    postings: 70,\n    searchInterest: 70,\n    annotation: 'COVID-19 Impact'\n  },\n  {\n    year: 2021,\n    postings: 110,\n    searchInterest: 85,\n    annotation: 'Recovery Surge'\n  },\n  {\n    year: 2022,\n    postings: 140,\n    searchInterest: 95,\n    annotation: null\n  },\n  {\n    year: 2023,\n    postings: 125,\n    searchInterest: 100,\n    annotation: 'Peak Interest'\n  },\n  {\n    year: 2024,\n    postings: 130,\n    searchInterest: 92,\n    annotation: null\n  }\n];\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  if (active && payload && payload.length) {\n    const data = jobMarketData.find(d => d.year === label);\n    \n    return (\n      <div className=\"bg-[#121212] border border-[#8AA97A]/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200 min-w-[200px]\">\n        <p className=\"font-semibold text-[#f4f4e4] mb-2\">{label}</p>\n        \n        <div className=\"space-y-2\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-sm bg-[#8AA97A]\" />\n              <span className=\"text-sm text-[#f4f4e4]/90\">Job Postings</span>\n            </div>\n            <span className=\"text-sm font-mono font-semibold text-[#8AA97A]\">\n              {data?.postings}k\n            </span>\n          </div>\n          \n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-full bg-[#9BB88B]\" />\n              <span className=\"text-sm text-[#f4f4e4]/90\">Search Interest</span>\n            </div>\n            <span className=\"text-sm font-mono font-semibold text-[#9BB88B]\">\n              {data?.searchInterest}\n            </span>\n          </div>\n        </div>\n        \n        {data?.annotation && (\n          <p className=\"text-xs text-[#8AA97A] mt-3 pt-2 border-t border-[#8AA97A]/20 italic\">\n            ✦ {data.annotation}\n          </p>\n        )}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Custom legend component\nconst CustomLegend = () => {\n  return (\n    <div className=\"flex justify-center gap-6 mt-4\">\n      <div className=\"flex items-center gap-2\">\n        <div className=\"w-4 h-4 bg-[#8AA97A] rounded-sm\" />\n        <span className=\"text-xs text-[#f4f4e4]/90 font-medium\">\n          Job Postings (thousands)\n        </span>\n      </div>\n      <div className=\"flex items-center gap-2\">\n        <div className=\"w-4 h-4 bg-[#9BB88B] rounded-full\" />\n        <span className=\"text-xs text-[#f4f4e4]/90 font-medium\">\n          Search Interest Index (0-100)\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default function JobMarketChart() {\n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-[#8AA97A]/[0.02] rounded-xl border border-[#8AA97A]/10 p-6 transition-all duration-300 hover:border-[#8AA97A]/20\">\n          <div className=\"mb-6\">\n            <span className=\"text-[#f4f4e4]/50 uppercase tracking-wider text-xs font-mono\">Fig 04</span>\n            <h3 className=\"text-2xl font-semibold font-display text-[#f4f4e4] mt-1\">\n              UX/UI Job Market Growth\n            </h3>\n            <p className=\"text-sm text-[#f4f4e4]/70 mt-2\">\n              Annual job postings and search interest trends\n            </p>\n          </div>\n          \n          <div className=\"h-96 w-full\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <ComposedChart \n                data={jobMarketData} \n                margin={{ top: 20, right: 60, left: 20, bottom: 60 }}\n              >\n                <CartesianGrid \n                  strokeDasharray=\"3 3\" \n                  stroke=\"#8AA97A\" \n                  opacity={0.05}\n                  verticalPoints={[0]}\n                />\n                \n                {/* X Axis */}\n                <XAxis \n                  dataKey=\"year\" \n                  stroke=\"transparent\"\n                  tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                  axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                  tickLine={false}\n                  interval={0}\n                  angle={-45}\n                  textAnchor=\"end\"\n                />\n                \n                {/* Left Y Axis - Job Postings */}\n                <YAxis \n                  yAxisId=\"postings\"\n                  orientation=\"left\"\n                  stroke=\"transparent\"\n                  tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                  axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                  tickLine={false}\n                  domain={[0, 150]}\n                  tickFormatter={(value) => `${value}k`}\n                  label={{ \n                    value: 'Job Postings (thousands)', \n                    angle: -90, \n                    position: 'insideLeft',\n                    style: { fill: '#8AA97A', opacity: 0.8, fontSize: 11 }\n                  }}\n                />\n                \n                {/* Right Y Axis - Search Interest */}\n                <YAxis \n                  yAxisId=\"interest\"\n                  orientation=\"right\"\n                  stroke=\"transparent\"\n                  tick={{ fill: '#f4f4e4', opacity: 0.7, fontSize: 11 }}\n                  axisLine={{ stroke: '#f4f4e4', opacity: 0.1 }}\n                  tickLine={false}\n                  domain={[0, 100]}\n                  label={{ \n                    value: 'Search Interest Index', \n                    angle: 90, \n                    position: 'insideRight',\n                    style: { fill: '#9BB88B', opacity: 0.8, fontSize: 11 }\n                  }}\n                />\n                \n                <Tooltip \n                  content={<CustomTooltip />}\n                  cursor={{ fill: '#8AA97A', opacity: 0.05 }}\n                  animationDuration={200}\n                />\n                \n                <Legend \n                  content={<CustomLegend />}\n                />\n                \n                {/* COVID-19 Reference Area */}\n                <ReferenceArea\n                  yAxisId=\"postings\"\n                  x1={2019.5}\n                  x2={2020.5}\n                  fill=\"#FF6B6B\"\n                  fillOpacity={0.03}\n                  strokeOpacity={0}\n                />\n                \n                {/* Bar Chart - Job Postings */}\n                <Bar\n                  yAxisId=\"postings\"\n                  dataKey=\"postings\"\n                  fill=\"#8AA97A\"\n                  fillOpacity={0.8}\n                  radius={[4, 4, 0, 0]}\n                  animationDuration={1000}\n                  animationBegin={0}\n                />\n                \n                {/* Line Chart - Search Interest */}\n                <Line\n                  yAxisId=\"interest\"\n                  type=\"monotone\"\n                  dataKey=\"searchInterest\"\n                  stroke=\"#9BB88B\"\n                  strokeWidth={3}\n                  dot={{ fill: '#9BB88B', r: 5 }}\n                  activeDot={{ r: 7 }}\n                  animationDuration={1200}\n                  animationBegin={200}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </div>\n          \n          {/* Annotations for Key Events */}\n          <div className=\"mt-8 pt-6 border-t border-[#8AA97A]/10\">\n            <h4 className=\"text-sm font-semibold text-[#f4f4e4]/90 mb-3\">Key Market Events:</h4>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#8AA97A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2020</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">COVID-19 causes temporary dip in job postings while search interest rises as professionals upskill</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#8AA97A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2021</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">Post-pandemic recovery surge with record hiring and digital transformation initiatives</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#8AA97A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2023</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">Search interest peaks at 100 as field matures, slight market correction in postings</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Market Insights */}\n          <div className=\"mt-6 pt-6 border-t border-[#8AA97A]/10\">\n            <h4 className=\"text-sm font-semibold text-[#f4f4e4]/90 mb-3\">Market Insights:</h4>\n            <ul className=\"space-y-2 text-xs text-[#f4f4e4]/70\">\n              <li className=\"flex items-start\">\n                <span className=\"text-[#8AA97A] mr-2\">•</span>\n                Job postings grew 767% from 2014 to 2024, reflecting the industry's explosive expansion\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-[#8AA97A] mr-2\">•</span>\n                Search interest increased 268%, showing growing career interest in UX/UI design\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-[#8AA97A] mr-2\">•</span>\n                The 2020 pandemic briefly disrupted hiring but accelerated digital transformation demand\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"text-[#8AA97A] mr-2\">•</span>\n                2022 marked peak hiring with 140k postings, followed by market normalization\n              </li>\n            </ul>\n          </div>\n          \n          <p className=\"text-xs text-[#f4f4e4]/50 mt-6 font-mono\">\n            Source: Industry job boards aggregated data & Google Trends search interest data (2014-2024)\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":11148},"client/src/components/origins-section.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Clock, Cpu, Monitor, Mouse, Users, Lightbulb } from \"lucide-react\";\n\nexport default function OriginsSection() {\n  const timelineEvents = [\n    {\n      year: \"1945\",\n      title: \"The Memex Vision\",\n      person: \"Vannevar Bush\",\n      description: \"Conceived the Memex - a theoretical device that would store books, records, and communications, allowing users to follow associative trails through information.\",\n      impact: \"Precursor to hypertext and the World Wide Web\",\n      icon: <Lightbulb className=\"w-5 h-5\" />\n    },\n    {\n      year: \"1963\",\n      title: \"Birth of Computer Graphics\",\n      person: \"Ivan Sutherland\",\n      description: \"Created Sketchpad at MIT - the first program to use a graphical user interface with a light pen for direct manipulation.\",\n      impact: \"First GUI program, foundation of CAD systems\",\n      icon: <Monitor className=\"w-5 h-5\" />\n    },\n    {\n      year: \"1968\",\n      title: \"The Mother of All Demos\",\n      person: \"Douglas Engelbart\",\n      description: \"Demonstrated the computer mouse, windows, hypertext, graphics, video conferencing, and collaborative real-time editing.\",\n      impact: \"90-minute demo that defined computing's future\",\n      icon: <Mouse className=\"w-5 h-5\" />\n    },\n    {\n      year: \"1973\",\n      title: \"First GUI Computer\",\n      person: \"Xerox PARC Team\",\n      description: \"The Xerox Alto became the first computer designed with a graphical user interface and mouse as primary interaction.\",\n      impact: \"Cost $32,000 ($220,000 in 2025 dollars)\",\n      icon: <Cpu className=\"w-5 h-5\" />\n    },\n    {\n      year: \"1981\",\n      title: \"Commercial GUI Era\",\n      person: \"Xerox Corporation\",\n      description: \"The Xerox Star (8010) became the first commercially available computer with a GUI, icons, folders, and WYSIWYG editing.\",\n      impact: \"Inspired Apple Lisa and Macintosh\",\n      icon: <Monitor className=\"w-5 h-5\" />\n    }\n  ];\n\n  const pioneers = [\n    {\n      name: \"Vannevar Bush\",\n      title: \"Information Architecture Visionary\",\n      years: \"1890-1974\",\n      contribution: \"His 1945 essay 'As We May Think' described the Memex, envisioning a future where humans could navigate vast amounts of interconnected information through associative trails - the conceptual foundation of hypertext.\",\n      quote: \"Consider a future device... in which an individual stores all his books, records, and communications, and which is mechanized so that it may be consulted with exceeding speed and flexibility.\",\n      legacy: \"Inspired Douglas Engelbart and Ted Nelson to pursue hypertext systems\"\n    },\n    {\n      name: \"Douglas Engelbart\",\n      title: \"Human Augmentation Pioneer\",\n      years: \"1925-2013\",\n      contribution: \"Founded the Augmentation Research Center at Stanford Research Institute. Invented the computer mouse, developed early hypertext systems, and pioneered collaborative computing tools.\",\n      quote: \"The digital revolution is far more significant than the invention of writing or even of printing.\",\n      legacy: \"His 1968 demo influenced every major advancement in personal computing\"\n    },\n    {\n      name: \"Ivan Sutherland\",\n      title: \"Computer Graphics Pioneer\",\n      years: \"1938-Present\",\n      contribution: \"Created Sketchpad in 1963, demonstrating that computers could be used for more than just processing numbers. Introduced concepts of graphical computing and direct manipulation interfaces.\",\n      quote: \"The ultimate display would, of course, be a room within which the computer can control the existence of matter.\",\n      legacy: \"Father of computer graphics, VR pioneer, Turing Award winner\"\n    },\n    {\n      name: \"Alan Kay\",\n      title: \"Object-Oriented UI Inventor\",\n      years: \"1940-Present\",\n      contribution: \"Conceived the Dynabook concept - a portable computer for children. Led development of Smalltalk at Xerox PARC, creating the first true object-oriented programming language with a graphical interface.\",\n      quote: \"The best way to predict the future is to invent it.\",\n      legacy: \"Influenced Steve Jobs, pioneered modern educational computing\"\n    },\n    {\n      name: \"Larry Tesler\",\n      title: \"Modeless Interface Champion\",\n      years: \"1945-2020\",\n      contribution: \"Invented cut, copy, and paste operations. Advocated for modeless interfaces where users don't need to switch between different states. Made computing more intuitive for non-programmers.\",\n      quote: \"There's no mode that can't be eliminated.\",\n      legacy: \"His 'no modes' philosophy shaped modern user interface design\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 px-4 sm:px-6 lg:px-8\" data-testid=\"section-origins\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Opening Narrative */}\n        <div className=\"max-w-4xl mx-auto mb-20\">\n          <h2 className=\"font-display text-5xl sm:text-6xl font-bold mb-8 leading-tight\" data-testid=\"text-origins-heading\">\n            Before the pixel, there was the vision\n          </h2>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p className=\"text-xl\">\n              Long before screens glowed with graphical interfaces, before mice clicked and fingers tapped, visionaries imagined a future where humans and computers would collaborate as partners. This is the untold prehistory of UX/UI design — a story that begins not with pixels, but with profound questions about human cognition and information architecture.\n            </p>\n            \n            <p>\n              In the aftermath of World War II, as early computers filled entire rooms and required specialized operators, a handful of pioneers dared to imagine something radical: machines that would augment human intelligence rather than merely calculate. They envisioned systems that would feel natural, interfaces that would disappear into intuition, and tools that would amplify human creativity.\n            </p>\n            \n            <p>\n              These weren't designers in the modern sense — they were mathematicians, engineers, and cognitive scientists. Yet their work laid the foundation for everything we now call user experience. They asked the questions that still drive our field: How should humans and computers communicate? What makes an interface intuitive? How can technology enhance rather than replace human capabilities?\n            </p>\n          </div>\n        </div>\n\n        {/* Timeline Section */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <Clock className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-3xl font-semibold\">Critical Moments in Pre-Digital Interface History</h3>\n          </div>\n          \n          <div className=\"relative\">\n            {/* Timeline Line */}\n            <div className=\"absolute left-0 md:left-1/2 transform md:-translate-x-px h-full w-0.5 bg-accent/30\" />\n            \n            {/* Timeline Events */}\n            <div className=\"space-y-12\">\n              {timelineEvents.map((event, index) => (\n                <div\n                  key={event.year}\n                  className={`relative flex items-center ${\n                    index % 2 === 0 ? 'md:flex-row' : 'md:flex-row-reverse'\n                  }`}\n                  data-testid={`timeline-event-${event.year}`}\n                >\n                  <div className=\"flex-1\" />\n                  \n                  {/* Center dot and year */}\n                  <div className=\"absolute left-0 md:left-1/2 transform md:-translate-x-1/2 flex items-center gap-4\">\n                    <div className=\"w-12 h-12 rounded-full bg-accent/20 border-2 border-accent flex items-center justify-center\">\n                      {event.icon}\n                    </div>\n                  </div>\n                  \n                  {/* Content Card */}\n                  <div className={`flex-1 ${index % 2 === 0 ? 'md:pr-16' : 'md:pl-16'} pl-20 md:pl-0`}>\n                    <Card className=\"p-6 bg-card/50 backdrop-blur border-accent/30 hover:border-accent/50 transition-colors\">\n                      <div className=\"flex items-baseline gap-3 mb-2\">\n                        <span className=\"text-2xl font-bold text-accent\">{event.year}</span>\n                        <h4 className=\"text-xl font-semibold\">{event.title}</h4>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground mb-2\">by {event.person}</p>\n                      <p className=\"text-foreground/80 mb-3\">{event.description}</p>\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-1 h-4 bg-accent/50\" />\n                        <p className=\"text-sm font-medium text-accent/80\">{event.impact}</p>\n                      </div>\n                    </Card>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Research Centers Callout */}\n        <Card className=\"p-8 mb-20 bg-accent/10 border-accent/30\">\n          <div className=\"flex items-start gap-4\">\n            <Users className=\"w-6 h-6 text-accent mt-1\" />\n            <div>\n              <h4 className=\"text-xl font-semibold mb-3\">Early HCI Research Centers</h4>\n              <div className=\"grid md:grid-cols-3 gap-6 text-foreground/80\">\n                <div>\n                  <p className=\"font-semibold text-accent\">MIT</p>\n                  <p className=\"text-sm\">Lincoln Laboratory pioneered interactive computing with TX-0 and TX-2 computers, enabling Sutherland's Sketchpad.</p>\n                </div>\n                <div>\n                  <p className=\"font-semibold text-accent\">Stanford Research Institute</p>\n                  <p className=\"text-sm\">Engelbart's Augmentation Research Center developed NLS (oN-Line System), the first hypertext system with a mouse.</p>\n                </div>\n                <div>\n                  <p className=\"font-semibold text-accent\">Xerox PARC</p>\n                  <p className=\"text-sm\">The Computer Science Laboratory created Alto and Star, defining the desktop metaphor we still use today.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Pioneers Section */}\n        <div className=\"mb-20\">\n          <h3 className=\"font-display text-3xl font-semibold mb-12\">The Visionaries Who Defined Our Digital Future</h3>\n          \n          <div className=\"space-y-8\">\n            {pioneers.map((pioneer) => (\n              <Card key={pioneer.name} className=\"p-8 bg-card/50 backdrop-blur border-border hover:border-accent/30 transition-colors\" data-testid={`pioneer-${pioneer.name.replace(' ', '-').toLowerCase()}`}>\n                <div className=\"grid md:grid-cols-3 gap-6\">\n                  <div className=\"md:col-span-1\">\n                    <h4 className=\"text-2xl font-semibold mb-1\">{pioneer.name}</h4>\n                    <p className=\"text-sm text-muted-foreground mb-2\">{pioneer.years}</p>\n                    <p className=\"text-accent font-medium\">{pioneer.title}</p>\n                  </div>\n                  \n                  <div className=\"md:col-span-2 space-y-4\">\n                    <p className=\"text-foreground/80\">{pioneer.contribution}</p>\n                    \n                    <blockquote className=\"border-l-4 border-accent/50 pl-4 italic text-foreground/70\">\n                      \"{pioneer.quote}\"\n                    </blockquote>\n                    \n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"w-2 h-2 rounded-full bg-accent/50\" />\n                      <p className=\"text-sm font-medium text-accent/80\">{pioneer.legacy}</p>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Data Callout */}\n        <div className=\"grid md:grid-cols-2 gap-8 mb-20\">\n          <Card className=\"p-8 bg-gradient-to-br from-accent/20 to-accent/10 border-accent/30\">\n            <h4 className=\"text-6xl font-bold text-accent mb-2\">$220,000</h4>\n            <p className=\"text-lg font-medium mb-2\">2025 equivalent cost of Xerox Alto</p>\n            <p className=\"text-sm text-foreground/70\">The 1973 price of $32,000 made it accessible only to research institutions, yet it defined personal computing's future</p>\n          </Card>\n          \n          <Card className=\"p-8 bg-gradient-to-br from-accent/20 to-accent/10 border-accent/30\">\n            <h4 className=\"text-6xl font-bold text-accent mb-2\">90</h4>\n            <p className=\"text-lg font-medium mb-2\">Minutes that changed computing</p>\n            <p className=\"text-sm text-foreground/70\">Engelbart's 1968 demo introduced concepts that wouldn't become mainstream for decades</p>\n          </Card>\n        </div>\n\n        {/* Birth of GUI Section */}\n        <div className=\"max-w-4xl mx-auto\">\n          <Separator className=\"mb-12 bg-accent/20\" />\n          \n          <h3 className=\"font-display text-3xl font-semibold mb-8\">The Birth of Graphical Interfaces</h3>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90\">\n            <p>\n              The transition from command-line interfaces to graphical user interfaces wasn't merely a technical evolution — it was a philosophical revolution. When the Xerox Alto displayed its first bitmapped screen in 1973, it represented a fundamental shift in how we conceive the relationship between humans and computers.\n            </p>\n            \n            <p>\n              For the first time, computers could show rather than tell. Icons replaced commands. The mouse enabled direct manipulation. The desktop metaphor made abstract digital concepts tangible. These weren't just new features; they were new languages for human-computer interaction.\n            </p>\n            \n            <p>\n              The researchers at Xerox PARC didn't just create new technology — they created new possibilities for human expression and creativity. Their work proved that computers could be tools for everyone, not just programmers. The GUI democratized computing, setting the stage for the personal computer revolution and, ultimately, for the field of UX/UI design itself.\n            </p>\n            \n            <p className=\"text-xl font-medium text-accent\">\n              What began as academic research in the 1960s and 1970s would, within a generation, transform into a multi-billion dollar industry and reshape human civilization. The foundations laid by these pioneers continue to support every swipe, tap, and click we make today.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":14904},"client/src/components/professional-formalization-section.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  User, \n  BookOpen, \n  Building2, \n  DollarSign, \n  TrendingUp, \n  Award, \n  Users, \n  Briefcase,\n  GraduationCap,\n  Lightbulb,\n  Target,\n  Brain,\n  CheckCircle,\n  ArrowRight\n} from \"lucide-react\";\n\nexport default function ProfessionalFormalizationSection() {\n  const timelineEvents = [\n    {\n      year: \"1993\",\n      event: \"Don Norman coins 'User Experience'\",\n      detail: \"Becomes Apple's first User Experience Architect, establishing UX as a formal discipline\",\n      type: \"milestone\"\n    },\n    {\n      year: \"1994\",\n      event: \"Jakob Nielsen publishes 'Usability Engineering'\",\n      detail: \"Foundational text establishes scientific approach to interface design\",\n      type: \"publication\"\n    },\n    {\n      year: \"1995\",\n      event: \"Nielsen Norman Group founded\",\n      detail: \"World's first UX consultancy launches, legitimizing the field professionally\",\n      type: \"company\"\n    },\n    {\n      year: \"1996\",\n      event: \"Alan Cooper's 'About Face' introduces personas\",\n      detail: \"Revolutionary methodology for understanding and designing for users\",\n      type: \"publication\"\n    },\n    {\n      year: \"1998\",\n      event: \"Jesse James Garrett's Elements framework\",\n      detail: \"Creates the definitive model for understanding user experience layers\",\n      type: \"framework\"\n    },\n    {\n      year: \"2000\",\n      event: \"First Information Architecture Summit\",\n      detail: \"Professional conference establishes IA as distinct discipline within UX\",\n      type: \"milestone\"\n    }\n  ];\n\n  const pioneers = [\n    {\n      name: \"Don Norman\",\n      title: \"The Godfather of UX\",\n      role: \"Cognitive Scientist & Design Theorist\",\n      company: \"Apple (1993-1997)\",\n      contributions: [\n        \"Coined the term 'User Experience' in 1993\",\n        \"Applied cognitive science to design\",\n        \"Wrote 'The Design of Everyday Things'\",\n        \"Advocated for human-centered design\"\n      ],\n      quote: \"I invented the term because I thought human interface and usability were too narrow. I wanted to cover all aspects of the person's experience with the system.\",\n      impact: \"Transformed design from aesthetic exercise to scientific discipline\",\n      keyPublication: \"The Design of Everyday Things (1988)\",\n      philosophy: \"Design for how people actually behave, not how you wish they would\"\n    },\n    {\n      name: \"Jakob Nielsen\",\n      title: \"The Usability Guru\",\n      role: \"Usability Engineer\",\n      company: \"Sun Microsystems (1994-1998)\",\n      contributions: [\n        \"Created the 10 Usability Heuristics\",\n        \"Pioneered discount usability methods\",\n        \"Established usability testing standards\",\n        \"Championed web accessibility\"\n      ],\n      quote: \"Users spend most of their time on other sites. This means that users prefer your site to work the same way as all the other sites they already know.\",\n      impact: \"Made usability testing accessible and affordable for all companies\",\n      keyPublication: \"Usability Engineering (1994)\",\n      philosophy: \"Simplicity wins over complexity, always\"\n    },\n    {\n      name: \"Alan Cooper\",\n      title: \"Father of Visual Basic\",\n      role: \"Software Designer & Theorist\",\n      company: \"Cooper (1992-present)\",\n      contributions: [\n        \"Invented the persona methodology\",\n        \"Created Visual Basic's interface\",\n        \"Defined interaction design as discipline\",\n        \"Wrote influential design manifestos\"\n      ],\n      quote: \"The inmates are running the asylum - programmers design for themselves, not users.\",\n      impact: \"Shifted focus from features to user goals and behaviors\",\n      keyPublication: \"About Face: The Essentials of Interaction Design (1995)\",\n      philosophy: \"Design for specific people with specific needs, not generic users\"\n    },\n    {\n      name: \"Jesse James Garrett\",\n      title: \"The Information Architect\",\n      role: \"User Experience Designer\",\n      company: \"Adaptive Path (2001-2014)\",\n      contributions: [\n        \"Created the Elements of User Experience model\",\n        \"Coined the term 'Ajax' for web development\",\n        \"Advanced information architecture practice\",\n        \"Pioneered UX strategy consulting\"\n      ],\n      quote: \"User experience is the quality of experience a person has when interacting with a specific design.\",\n      impact: \"Provided clear framework for understanding UX layers and dependencies\",\n      keyPublication: \"The Elements of User Experience (2002)\",\n      philosophy: \"Every design decision affects user experience at multiple levels\"\n    },\n    {\n      name: \"Steve Krug\",\n      title: \"The Common Sense Advocate\",\n      role: \"Usability Consultant\",\n      company: \"Independent (1990-present)\",\n      contributions: [\n        \"Popularized guerrilla usability testing\",\n        \"Made UX principles accessible to non-designers\",\n        \"Advocated for simplicity in web design\",\n        \"Influenced a generation of web designers\"\n      ],\n      quote: \"Don't make me think! When I look at a web page it should be self-evident, obvious, self-explanatory.\",\n      impact: \"Democratized UX knowledge beyond specialist practitioners\",\n      keyPublication: \"Don't Make Me Think (2000)\",\n      philosophy: \"The best designs are those that require the least cognitive effort\"\n    }\n  ];\n\n  const industryMilestones = [\n    {\n      year: \"1993\",\n      company: \"Apple\",\n      event: \"First UX Team\",\n      detail: \"Don Norman builds first formal User Experience team\",\n      employees: \"12 designers\",\n      budget: \"$2M\"\n    },\n    {\n      year: \"1995\",\n      company: \"Microsoft\",\n      event: \"Usability Labs\",\n      detail: \"Establishes dedicated usability testing facilities\",\n      employees: \"25 researchers\",\n      budget: \"$5M\"\n    },\n    {\n      year: \"1996\",\n      company: \"IBM\",\n      event: \"User-Centered Design\",\n      detail: \"Adopts company-wide UCD methodology\",\n      employees: \"50+ designers\",\n      budget: \"$10M\"\n    },\n    {\n      year: \"1998\",\n      company: \"Amazon\",\n      event: \"Customer Experience Team\",\n      detail: \"Creates dedicated CX organization\",\n      employees: \"30 specialists\",\n      budget: \"$8M\"\n    },\n    {\n      year: \"1999\",\n      company: \"Google\",\n      event: \"User Experience Group\",\n      detail: \"Hires first UX designer (later VP of Design)\",\n      employees: \"5 designers\",\n      budget: \"$1M\"\n    },\n    {\n      year: \"2000\",\n      company: \"eBay\",\n      event: \"Trust & Safety UX\",\n      detail: \"First UX team focused on user trust\",\n      employees: \"15 designers\",\n      budget: \"$3M\"\n    }\n  ];\n\n  const jobTitleEvolution = [\n    {\n      era: \"1990-1993\",\n      titles: [\"HCI Specialist\", \"Interface Designer\", \"Human Factors Engineer\"],\n      avgSalary: \"$38,000\",\n      totalJobs: \"~500 worldwide\"\n    },\n    {\n      era: \"1994-1996\",\n      titles: [\"Usability Engineer\", \"Interaction Designer\", \"Information Architect\"],\n      avgSalary: \"$45,000\",\n      totalJobs: \"~2,000 worldwide\"\n    },\n    {\n      era: \"1997-1999\",\n      titles: [\"User Experience Designer\", \"UX Architect\", \"Experience Lead\"],\n      avgSalary: \"$55,000\",\n      totalJobs: \"~8,000 worldwide\"\n    },\n    {\n      era: \"2000-2002\",\n      titles: [\"UX Designer\", \"UX Researcher\", \"UX Manager\", \"Chief Experience Officer\"],\n      avgSalary: \"$65,000\",\n      totalJobs: \"~25,000 worldwide\"\n    }\n  ];\n\n  const methodologies = [\n    {\n      name: \"Nielsen's 10 Usability Heuristics\",\n      year: \"1994\",\n      creator: \"Jakob Nielsen\",\n      principles: [\n        \"Visibility of system status\",\n        \"Match between system and real world\",\n        \"User control and freedom\",\n        \"Consistency and standards\",\n        \"Error prevention\",\n        \"Recognition rather than recall\",\n        \"Flexibility and efficiency of use\",\n        \"Aesthetic and minimalist design\",\n        \"Help users recognize and recover from errors\",\n        \"Help and documentation\"\n      ],\n      impact: \"Became the industry standard for heuristic evaluation\",\n      adoptionRate: \"Used by 78% of UX teams by 2000\"\n    },\n    {\n      name: \"Cooper's Persona Development\",\n      year: \"1996\",\n      creator: \"Alan Cooper\",\n      principles: [\n        \"Research-based user archetypes\",\n        \"Goal-directed design approach\",\n        \"Scenario-based thinking\",\n        \"Behavioral patterns over demographics\",\n        \"Primary vs. secondary personas\"\n      ],\n      impact: \"Replaced feature-driven with user-driven design\",\n      adoptionRate: \"Adopted by 45% of Fortune 500 by 2001\"\n    },\n    {\n      name: \"User-Centered Design Process\",\n      year: \"1999\",\n      creator: \"ISO 13407 Standard\",\n      principles: [\n        \"Understand users and tasks\",\n        \"Produce design solutions iteratively\",\n        \"Evaluate designs against requirements\",\n        \"Involve users throughout design\"\n      ],\n      impact: \"First international standard for UX process\",\n      adoptionRate: \"Required for government contracts in 12 countries\"\n    },\n    {\n      name: \"Information Architecture\",\n      year: \"1998\",\n      creator: \"Rosenfeld & Morville\",\n      principles: [\n        \"Organization systems\",\n        \"Labeling systems\",\n        \"Navigation systems\",\n        \"Search systems\",\n        \"Controlled vocabularies and thesauri\"\n      ],\n      impact: \"Established IA as core UX discipline\",\n      adoptionRate: \"Essential for all web projects over 100 pages\"\n    },\n    {\n      name: \"Usability Testing Protocols\",\n      year: \"1993\",\n      creator: \"Multiple practitioners\",\n      principles: [\n        \"Task-based testing scenarios\",\n        \"Think-aloud protocol\",\n        \"Quantitative metrics (time, errors, success)\",\n        \"Qualitative observations\",\n        \"Iterative testing cycles\"\n      ],\n      impact: \"Made user feedback integral to design process\",\n      adoptionRate: \"92% of successful products used testing by 2000\"\n    }\n  ];\n\n  return (\n    <section className=\"py-24 px-4 sm:px-6 lg:px-8\" data-testid=\"section-professional-formalization\">\n      <div className=\"max-w-6xl mx-auto\">\n        {/* Opening Narrative */}\n        <div className=\"max-w-4xl mx-auto mb-20\">\n          <h2 className=\"font-display text-5xl sm:text-6xl font-bold mb-8 leading-tight\" data-testid=\"text-formalization-heading\">\n            The Birth of a Profession: When Design Became Science\n          </h2>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n            <p className=\"text-xl\">\n              In 1993, a cognitive scientist at Apple did something revolutionary: he gave a name to what designers had been doing intuitively for years. When Don Norman coined \"User Experience,\" he didn't just create a job title — he legitimized an entire field of study, transforming design from art into science, from opinion into methodology.\n            </p>\n            \n            <p>\n              The formalization of UX marked a pivotal shift in how companies approached product development. No longer could interfaces be designed based on engineering constraints or executive preferences. A new breed of professionals emerged, armed with psychology degrees, research methodologies, and an unwavering focus on the end user. They didn't just make things pretty; they made them work for humans.\n            </p>\n\n            <p>\n              Between 1993 and 2000, the field exploded from a handful of pioneers to thousands of practitioners. Universities launched programs, consultancies opened doors, and Fortune 500 companies scrambled to build UX teams. This is the story of how user experience transformed from radical idea to essential business function.\n            </p>\n          </div>\n        </div>\n\n        {/* Historical Timeline */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <BookOpen className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-3xl font-semibold\">Key Moments in UX History</h3>\n          </div>\n          \n          <div className=\"relative\">\n            {/* Timeline Line */}\n            <div className=\"absolute left-8 top-0 bottom-0 w-0.5 bg-gradient-to-b from-accent/50 via-accent/30 to-transparent\" />\n            \n            <div className=\"space-y-8\">\n              {timelineEvents.map((event) => (\n                <div key={event.year} className=\"relative pl-20\" data-testid={`timeline-${event.year}`}>\n                  {/* Year Badge */}\n                  <div className=\"absolute left-0 top-0 w-16 h-16 rounded-full bg-background border-2 border-accent/50 flex items-center justify-center\">\n                    <span className=\"text-sm font-bold\">{event.year}</span>\n                  </div>\n                  \n                  {/* Content Card */}\n                  <Card className={`p-6 ${\n                    event.type === 'milestone' ? 'bg-gradient-to-r from-accent/10 to-transparent' :\n                    event.type === 'publication' ? 'bg-gradient-to-r from-blue-500/10 to-transparent' :\n                    event.type === 'company' ? 'bg-gradient-to-r from-green-500/10 to-transparent' :\n                    'bg-gradient-to-r from-purple-500/10 to-transparent'\n                  } border-accent/30`}>\n                    <div className=\"flex items-start justify-between\">\n                      <div>\n                        <h4 className=\"text-xl font-bold mb-2\">{event.event}</h4>\n                        <p className=\"text-foreground/70\">{event.detail}</p>\n                      </div>\n                      <div className={`px-3 py-1 rounded-full text-xs font-semibold ${\n                        event.type === 'milestone' ? 'bg-accent/20 text-accent' :\n                        event.type === 'publication' ? 'bg-blue-500/20 text-blue-400' :\n                        event.type === 'company' ? 'bg-green-500/20 text-green-400' :\n                        'bg-purple-500/20 text-purple-400'\n                      }`}>\n                        {event.type}\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Key Data Callout */}\n        <Card className=\"p-8 mb-20 bg-gradient-to-br from-accent/20 to-transparent border-accent/30\">\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <div className=\"text-center\">\n              <Users className=\"w-8 h-8 text-accent mx-auto mb-4\" />\n              <h4 className=\"text-4xl font-bold text-accent mb-2\">&lt;100</h4>\n              <p className=\"text-lg font-medium\">People with \"UX\" in job title</p>\n              <p className=\"text-sm text-foreground/70 mt-1\">Worldwide in 1995</p>\n            </div>\n            <div className=\"text-center\">\n              <TrendingUp className=\"w-8 h-8 text-accent mx-auto mb-4\" />\n              <h4 className=\"text-4xl font-bold text-accent mb-2\">250x</h4>\n              <p className=\"text-lg font-medium\">Growth in UX jobs</p>\n              <p className=\"text-sm text-foreground/70 mt-1\">1995 to 2000</p>\n            </div>\n            <div className=\"text-center\">\n              <DollarSign className=\"w-8 h-8 text-accent mx-auto mb-4\" />\n              <h4 className=\"text-4xl font-bold text-accent mb-2\">44%</h4>\n              <p className=\"text-lg font-medium\">Salary increase</p>\n              <p className=\"text-sm text-foreground/70 mt-1\">$45k (1995) → $65k (2000)</p>\n            </div>\n          </div>\n        </Card>\n\n        {/* Pioneer Profiles */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <User className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-3xl font-semibold\">The Pioneers Who Defined the Field</h3>\n          </div>\n          \n          <div className=\"space-y-12\">\n            {pioneers.map((pioneer) => (\n              <Card key={pioneer.name} className=\"p-8 bg-card/50 backdrop-blur border-accent/30\" data-testid={`pioneer-${pioneer.name.toLowerCase().replace(' ', '-')}`}>\n                <div className=\"grid lg:grid-cols-3 gap-8\">\n                  {/* Profile Info */}\n                  <div className=\"lg:col-span-1\">\n                    <div className=\"mb-4\">\n                      <h4 className=\"text-2xl font-bold mb-1\">{pioneer.name}</h4>\n                      <p className=\"text-accent text-sm font-semibold\">{pioneer.title}</p>\n                      <p className=\"text-muted-foreground text-sm\">{pioneer.role}</p>\n                      <p className=\"text-muted-foreground text-xs mt-1\">{pioneer.company}</p>\n                    </div>\n                    \n                    <div className=\"mb-4\">\n                      <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-2\">Key Publication</p>\n                      <p className=\"text-sm font-medium\">{pioneer.keyPublication}</p>\n                    </div>\n                    \n                    <div>\n                      <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-2\">Philosophy</p>\n                      <p className=\"text-sm italic text-foreground/70\">{pioneer.philosophy}</p>\n                    </div>\n                  </div>\n                  \n                  {/* Contributions & Impact */}\n                  <div className=\"lg:col-span-2\">\n                    <blockquote className=\"border-l-4 border-accent/50 pl-4 mb-6\">\n                      <p className=\"text-lg italic text-foreground/80\">\"{pioneer.quote}\"</p>\n                    </blockquote>\n                    \n                    <div className=\"grid sm:grid-cols-2 gap-6\">\n                      <div>\n                        <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-3\">Key Contributions</p>\n                        <ul className=\"space-y-2\">\n                          {pioneer.contributions.map((contribution, index) => (\n                            <li key={index} className=\"flex items-start gap-2 text-sm\">\n                              <CheckCircle className=\"w-4 h-4 text-accent mt-0.5 flex-shrink-0\" />\n                              <span className=\"text-foreground/80\">{contribution}</span>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                      \n                      <div>\n                        <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-3\">Industry Impact</p>\n                        <p className=\"text-sm text-foreground/80\">{pioneer.impact}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Industry Formation */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <Building2 className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-3xl font-semibold\">The First UX Teams & Consultancies</h3>\n          </div>\n          \n          <div className=\"grid gap-6 mb-12\">\n            {industryMilestones.map((milestone) => (\n              <Card key={milestone.year + milestone.company} className=\"p-6 bg-gradient-to-r from-accent/5 to-transparent border-accent/30\" data-testid={`industry-${milestone.company.toLowerCase()}`}>\n                <div className=\"flex flex-wrap items-center justify-between gap-4\">\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-12 h-12 rounded-lg bg-accent/20 flex items-center justify-center\">\n                      <span className=\"text-xs font-bold\">{milestone.year}</span>\n                    </div>\n                    <div>\n                      <h4 className=\"text-lg font-bold\">{milestone.company}: {milestone.event}</h4>\n                      <p className=\"text-sm text-foreground/70\">{milestone.detail}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex gap-6\">\n                    <div className=\"text-right\">\n                      <p className=\"text-sm font-bold text-accent\">{milestone.employees}</p>\n                      <p className=\"text-xs text-muted-foreground\">Team Size</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"text-sm font-bold text-accent\">{milestone.budget}</p>\n                      <p className=\"text-xs text-muted-foreground\">Annual Budget</p>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n\n          {/* Consultancy Rise */}\n          <Card className=\"p-8 bg-gradient-to-br from-blue-500/10 to-transparent border-blue-500/30\">\n            <div className=\"flex items-start gap-4\">\n              <Briefcase className=\"w-6 h-6 text-blue-400 mt-1\" />\n              <div>\n                <h4 className=\"text-xl font-semibold mb-3 text-blue-400\">Rise of UX Consultancies</h4>\n                <div className=\"grid sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  <div>\n                    <p className=\"font-semibold mb-2\">Nielsen Norman Group (1998)</p>\n                    <p className=\"text-sm text-foreground/70\">First pure-play UX consultancy. Clients included Microsoft, IBM, and Sun. Established evidence-based design practice.</p>\n                  </div>\n                  <div>\n                    <p className=\"font-semibold mb-2\">Cooper (1992)</p>\n                    <p className=\"text-sm text-foreground/70\">Pioneered interaction design consulting. Created Visual Basic interface. Developed persona methodology for clients.</p>\n                  </div>\n                  <div>\n                    <p className=\"font-semibold mb-2\">Adaptive Path (2001)</p>\n                    <p className=\"text-sm text-foreground/70\">Founded by Jesse James Garrett and peers. Focused on UX strategy. Coined Ajax, advanced web standards.</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Job Title Evolution */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <GraduationCap className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-3xl font-semibold\">Evolution of UX Job Titles & Compensation</h3>\n          </div>\n          \n          <div className=\"grid gap-4\">\n            {jobTitleEvolution.map((era, index) => (\n              <Card key={era.era} className=\"p-6 bg-card/50 backdrop-blur border-accent/30\" data-testid={`job-evolution-${era.era}`}>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <div className=\"flex items-center gap-3 mb-2\">\n                      <div className=\"w-2 h-8 bg-accent rounded-full\" />\n                      <h4 className=\"text-xl font-bold\">{era.era}</h4>\n                    </div>\n                    <div className=\"flex flex-wrap gap-2 mb-3\">\n                      {era.titles.map((title) => (\n                        <span key={title} className=\"px-3 py-1 bg-accent/20 text-accent text-sm rounded-full font-medium\">\n                          {title}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-2xl font-bold text-accent\">{era.avgSalary}</p>\n                    <p className=\"text-xs text-muted-foreground\">Average Salary</p>\n                    <p className=\"text-sm font-medium mt-2\">{era.totalJobs}</p>\n                    <p className=\"text-xs text-muted-foreground\">Total Jobs</p>\n                  </div>\n                </div>\n                {index < jobTitleEvolution.length - 1 && (\n                  <div className=\"flex justify-center mt-4\">\n                    <ArrowRight className=\"w-4 h-4 text-accent/50\" />\n                  </div>\n                )}\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Methodologies */}\n        <div className=\"mb-24\">\n          <div className=\"flex items-center gap-4 mb-12\">\n            <Target className=\"w-6 h-6 text-accent\" />\n            <h3 className=\"font-display text-3xl font-semibold\">Methodologies That Became Standards</h3>\n          </div>\n          \n          <div className=\"space-y-8\">\n            {methodologies.map((method) => (\n              <Card key={method.name} className=\"p-8 bg-gradient-to-br from-accent/5 to-transparent border-accent/30\" data-testid={`methodology-${method.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                <div className=\"grid lg:grid-cols-3 gap-6\">\n                  <div className=\"lg:col-span-1\">\n                    <h4 className=\"text-xl font-bold mb-2\">{method.name}</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <p>\n                        <span className=\"text-muted-foreground\">Created by:</span> <span className=\"font-medium\">{method.creator}</span>\n                      </p>\n                      <p>\n                        <span className=\"text-muted-foreground\">Year:</span> <span className=\"font-medium\">{method.year}</span>\n                      </p>\n                      <p>\n                        <span className=\"text-muted-foreground\">Adoption:</span> <span className=\"font-medium text-accent\">{method.adoptionRate}</span>\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"lg:col-span-2\">\n                    <div className=\"mb-4\">\n                      <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-3\">Core Principles</p>\n                      <ul className=\"grid sm:grid-cols-2 gap-2\">\n                        {method.principles.map((principle, index) => (\n                          <li key={index} className=\"flex items-start gap-2 text-sm\">\n                            <CheckCircle className=\"w-4 h-4 text-accent mt-0.5 flex-shrink-0\" />\n                            <span className=\"text-foreground/80\">{principle}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                    \n                    <div className=\"pt-4 border-t border-accent/20\">\n                      <p className=\"text-xs text-accent font-semibold uppercase tracking-wider mb-2\">Impact</p>\n                      <p className=\"text-sm text-foreground/80\">{method.impact}</p>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Industry Impact Stats */}\n        <div className=\"grid md:grid-cols-4 gap-6 mb-20\">\n          <Card className=\"p-6 bg-gradient-to-br from-accent/20 to-accent/10 border-accent/30\">\n            <Brain className=\"w-6 h-6 text-accent mb-3\" />\n            <h4 className=\"text-3xl font-bold text-accent mb-1\">12</h4>\n            <p className=\"text-sm font-medium\">Psychology PhDs</p>\n            <p className=\"text-xs text-foreground/70\">in first Apple UX team</p>\n          </Card>\n          \n          <Card className=\"p-6 bg-gradient-to-br from-blue-500/20 to-blue-500/10 border-blue-500/30\">\n            <Award className=\"w-6 h-6 text-blue-400 mb-3\" />\n            <h4 className=\"text-3xl font-bold text-blue-400 mb-1\">$1B+</h4>\n            <p className=\"text-sm font-medium\">Saved annually</p>\n            <p className=\"text-xs text-foreground/70\">through usability fixes</p>\n          </Card>\n          \n          <Card className=\"p-6 bg-gradient-to-br from-green-500/20 to-green-500/10 border-green-500/30\">\n            <Lightbulb className=\"w-6 h-6 text-green-400 mb-3\" />\n            <h4 className=\"text-3xl font-bold text-green-400 mb-1\">3,000</h4>\n            <p className=\"text-sm font-medium\">UX Patents filed</p>\n            <p className=\"text-xs text-foreground/70\">1993-2000</p>\n          </Card>\n          \n          <Card className=\"p-6 bg-gradient-to-br from-purple-500/20 to-purple-500/10 border-purple-500/30\">\n            <Users className=\"w-6 h-6 text-purple-400 mb-3\" />\n            <h4 className=\"text-3xl font-bold text-purple-400 mb-1\">92%</h4>\n            <p className=\"text-sm font-medium\">Success rate</p>\n            <p className=\"text-xs text-foreground/70\">for tested products</p>\n          </Card>\n        </div>\n\n        {/* Closing Narrative */}\n        <div className=\"max-w-4xl mx-auto\">\n          <Separator className=\"mb-12 bg-accent/20\" />\n          \n          <h3 className=\"font-display text-3xl font-semibold mb-8\">The Profession Takes Shape</h3>\n          \n          <div className=\"prose prose-lg space-y-6 text-foreground/90\">\n            <p>\n              By the turn of the millennium, user experience had evolved from a radical idea at Apple to an essential business function across the technology industry. The pioneers of the 1990s didn't just create job titles and methodologies — they fundamentally changed how products were conceived, designed, and evaluated.\n            </p>\n            \n            <p>\n              The formalization of UX brought scientific rigor to what had been an intuitive practice. Designers could now point to research, cite principles, and demonstrate ROI. Companies that invested in UX saw their products succeed at rates that made the business case undeniable. A $1 investment in UX returned $100 in value — a ratio that turned skeptics into believers.\n            </p>\n            \n            <p>\n              Perhaps most importantly, this period established the user as the ultimate arbiter of design success. No longer could products be judged solely on technical specifications or aesthetic appeal. The question became: does it work for the people who use it? This simple but profound shift would reshape not just the technology industry, but eventually every industry that touches human lives.\n            </p>\n            \n            <p className=\"font-medium text-accent\">\n              The pioneers of the 1990s didn't know they were creating a profession that would employ millions and shape billions of daily interactions. They simply believed that technology should serve humanity, not the other way around. That belief, formalized into methods and practices during these crucial years, became the foundation of modern product design.\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":30678},"client/src/components/skills-evolution-chart.tsx":{"content":"import { RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer, Legend, Tooltip } from 'recharts';\nimport { useState } from 'react';\n\n// Skills evolution data for different time periods\nconst skillsData = [\n  {\n    skill: 'Visual Design',\n    '2000': 90,\n    '2010': 85,\n    '2020': 75,\n    '2024': 70,\n    fullMark: 100\n  },\n  {\n    skill: 'User Research',\n    '2000': 40,\n    '2010': 60,\n    '2020': 80,\n    '2024': 85,\n    fullMark: 100\n  },\n  {\n    skill: 'Prototyping',\n    '2000': 30,\n    '2010': 70,\n    '2020': 85,\n    '2024': 90,\n    fullMark: 100\n  },\n  {\n    skill: 'Coding/HTML',\n    '2000': 60,\n    '2010': 50,\n    '2020': 40,\n    '2024': 35,\n    fullMark: 100\n  },\n  {\n    skill: 'Psychology',\n    '2000': 50,\n    '2010': 60,\n    '2020': 70,\n    '2024': 75,\n    fullMark: 100\n  },\n  {\n    skill: 'Design Systems',\n    '2000': 10,\n    '2010': 30,\n    '2020': 75,\n    '2024': 90,\n    fullMark: 100\n  },\n  {\n    skill: 'Data Analysis',\n    '2000': 20,\n    '2010': 40,\n    '2020': 70,\n    '2024': 80,\n    fullMark: 100\n  },\n  {\n    skill: 'Business Strategy',\n    '2000': 30,\n    '2010': 45,\n    '2020': 65,\n    '2024': 80,\n    fullMark: 100\n  }\n];\n\n// Color palette - sage gradient for different time periods\nconst periodColors: Record<string, string> = {\n  '2024': '#8AA97A',     // Sage (primary)\n  '2020': '#7A9A6A',     // Darker sage\n  '2010': '#6A8A5A',     // Even darker sage\n  '2000': '#5A7A4A',     // Darkest sage\n};\n\n// Custom tooltip component\nconst CustomTooltip = ({ active, payload }: any) => {\n  if (active && payload && payload.length) {\n    const sortedPayload = [...payload].sort((a, b) => {\n      const yearA = parseInt(a.dataKey);\n      const yearB = parseInt(b.dataKey);\n      return yearB - yearA;\n    });\n    \n    return (\n      <div className=\"bg-[#121212] border border-[#8AA97A]/40 rounded-lg px-4 py-3 shadow-xl transition-all duration-200 min-w-[200px]\">\n        <p className=\"font-semibold text-[#f4f4e4] mb-2\">\n          {payload[0]?.payload?.skill}\n        </p>\n        {sortedPayload.map((entry: any) => {\n          if (entry.value) {\n            return (\n              <div key={entry.dataKey} className=\"flex justify-between items-center py-1\">\n                <div className=\"flex items-center gap-2\">\n                  <div \n                    className=\"w-3 h-3 rounded-sm\" \n                    style={{ backgroundColor: entry.color }}\n                  />\n                  <span className=\"text-sm text-[#f4f4e4]/90\">{entry.dataKey}</span>\n                </div>\n                <span className=\"text-sm font-mono font-semibold text-[#f4f4e4]\">\n                  {entry.value}\n                </span>\n              </div>\n            );\n          }\n          return null;\n        })}\n      </div>\n    );\n  }\n  return null;\n};\n\n// Custom legend component with interactivity\nconst CustomLegend = ({ payload, onToggle, hiddenPeriods }: any) => {\n  return (\n    <div className=\"flex flex-wrap justify-center gap-3 mt-6\">\n      {payload.map((entry: any) => {\n        const isHidden = hiddenPeriods.includes(entry.value);\n        return (\n          <button\n            key={entry.value}\n            onClick={() => onToggle(entry.value)}\n            className={`flex items-center gap-2 px-3 py-1.5 rounded-lg transition-all duration-200 \n              ${isHidden \n                ? 'opacity-40 bg-[#1a1a1a] hover:opacity-60' \n                : 'bg-[#8AA97A]/10 hover:bg-[#8AA97A]/20'\n              }`}\n          >\n            <div \n              className=\"w-3 h-3 rounded-sm transition-all duration-200\"\n              style={{ \n                backgroundColor: isHidden ? '#666' : entry.color,\n              }}\n            />\n            <span className=\"text-xs text-[#f4f4e4]/90 font-medium\">\n              {entry.value}\n            </span>\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\n// Custom label rendering for PolarAngleAxis\nconst renderCustomAxisLabel = (value: string) => {\n  const maxLength = 12;\n  if (value.length > maxLength) {\n    return value.substring(0, maxLength - 3) + '...';\n  }\n  return value;\n};\n\nexport default function SkillsEvolutionChart() {\n  const [hiddenPeriods, setHiddenPeriods] = useState<string[]>([]);\n  \n  const togglePeriod = (period: string) => {\n    setHiddenPeriods(prev => \n      prev.includes(period) \n        ? prev.filter(p => p !== period)\n        : [...prev, period]\n    );\n  };\n  \n  return (\n    <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"bg-[#8AA97A]/[0.02] rounded-xl border border-[#8AA97A]/10 p-6 transition-all duration-300 hover:border-[#8AA97A]/20\">\n          <div className=\"mb-6\">\n            <span className=\"text-[#f4f4e4]/50 uppercase tracking-wider text-xs font-mono\">Fig 03</span>\n            <h3 className=\"text-2xl font-semibold font-display text-[#f4f4e4] mt-1\">\n              Evolution of UX/UI Skill Requirements\n            </h3>\n            <p className=\"text-sm text-[#f4f4e4]/70 mt-2\">\n              Relative importance of skills over time (0-100 scale)\n            </p>\n          </div>\n          \n          <div className=\"h-[500px] w-full\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <RadarChart data={skillsData}>\n                <PolarGrid \n                  stroke=\"#8AA97A\"\n                  strokeOpacity={0.1}\n                  radialLines={true}\n                />\n                <PolarAngleAxis \n                  dataKey=\"skill\"\n                  tick={{ fill: '#f4f4e4', opacity: 0.8, fontSize: 11 }}\n                  className=\"text-xs\"\n                />\n                <PolarRadiusAxis \n                  angle={90}\n                  domain={[0, 100]}\n                  tick={{ fill: '#f4f4e4', opacity: 0.5, fontSize: 10 }}\n                  tickCount={6}\n                />\n                \n                <Tooltip \n                  content={<CustomTooltip />}\n                  cursor={false}\n                  animationDuration={200}\n                />\n                \n                {/* Render radars in reverse chronological order for proper layering */}\n                {!hiddenPeriods.includes('2000') && (\n                  <Radar\n                    name=\"2000\"\n                    dataKey=\"2000\"\n                    stroke={periodColors['2000']}\n                    fill={periodColors['2000']}\n                    fillOpacity={0.15}\n                    strokeWidth={2}\n                    animationDuration={1200}\n                    animationBegin={0}\n                  />\n                )}\n                {!hiddenPeriods.includes('2010') && (\n                  <Radar\n                    name=\"2010\"\n                    dataKey=\"2010\"\n                    stroke={periodColors['2010']}\n                    fill={periodColors['2010']}\n                    fillOpacity={0.15}\n                    strokeWidth={2}\n                    animationDuration={1200}\n                    animationBegin={200}\n                  />\n                )}\n                {!hiddenPeriods.includes('2020') && (\n                  <Radar\n                    name=\"2020\"\n                    dataKey=\"2020\"\n                    stroke={periodColors['2020']}\n                    fill={periodColors['2020']}\n                    fillOpacity={0.15}\n                    strokeWidth={2}\n                    animationDuration={1200}\n                    animationBegin={400}\n                  />\n                )}\n                {!hiddenPeriods.includes('2024') && (\n                  <Radar\n                    name=\"2024\"\n                    dataKey=\"2024\"\n                    stroke={periodColors['2024']}\n                    fill={periodColors['2024']}\n                    fillOpacity={0.25}\n                    strokeWidth={3}\n                    animationDuration={1200}\n                    animationBegin={600}\n                  />\n                )}\n                \n                <Legend \n                  content={(props) => \n                    <CustomLegend \n                      {...props} \n                      onToggle={togglePeriod} \n                      hiddenPeriods={hiddenPeriods} \n                    />\n                  }\n                />\n              </RadarChart>\n            </ResponsiveContainer>\n          </div>\n          \n          {/* Key Insights */}\n          <div className=\"mt-8 pt-6 border-t border-[#8AA97A]/10\">\n            <h4 className=\"text-sm font-semibold text-[#f4f4e4]/90 mb-3\">Key Skill Evolution Insights:</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h5 className=\"text-xs font-mono text-[#8AA97A] mb-2\">Skills Gaining Importance ↑</h5>\n                <ul className=\"space-y-2 text-xs text-[#f4f4e4]/70\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-[#8AA97A] mr-2\">•</span>\n                    <span><strong>Design Systems</strong> (+800% since 2000): From 10 to 90, reflecting the shift to scalable, consistent design</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-[#8AA97A] mr-2\">•</span>\n                    <span><strong>Data Analysis</strong> (+300% since 2000): From 20 to 80, driven by data-informed design decisions</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-[#8AA97A] mr-2\">•</span>\n                    <span><strong>Prototyping</strong> (+200% since 2000): From 30 to 90, enabled by modern tools like Figma</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-[#8AA97A] mr-2\">•</span>\n                    <span><strong>Business Strategy</strong> (+167% since 2000): From 30 to 80, UX as business differentiator</span>\n                  </li>\n                </ul>\n              </div>\n              \n              <div>\n                <h5 className=\"text-xs font-mono text-[#8AA97A] mb-2\">Skills Declining in Emphasis ↓</h5>\n                <ul className=\"space-y-2 text-xs text-[#f4f4e4]/70\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-[#8AA97A] mr-2\">•</span>\n                    <span><strong>Visual Design</strong> (-22% since 2000): From 90 to 70, still important but less dominant</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-[#8AA97A] mr-2\">•</span>\n                    <span><strong>Coding/HTML</strong> (-42% since 2000): From 60 to 35, specialized roles and no-code tools</span>\n                  </li>\n                </ul>\n                \n                <h5 className=\"text-xs font-mono text-[#8AA97A] mb-2 mt-4\">Steady Growth Areas</h5>\n                <ul className=\"space-y-2 text-xs text-[#f4f4e4]/70\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-[#8AA97A] mr-2\">•</span>\n                    <span><strong>User Research</strong>: Consistent upward trend from 40 to 85</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-[#8AA97A] mr-2\">•</span>\n                    <span><strong>Psychology</strong>: Gradual increase from 50 to 75</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          \n          {/* Historical Context */}\n          <div className=\"mt-6 pt-6 border-t border-[#8AA97A]/10\">\n            <h4 className=\"text-sm font-semibold text-[#f4f4e4]/90 mb-3\">Evolution Timeline:</h4>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#5A7A4A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2000</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">Visual-centric web design era, heavy coding requirements</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#6A8A5A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2010</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">Mobile-first revolution, rise of prototyping tools</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#7A9A6A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2020</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">Systems thinking dominance, data-driven design</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <span className=\"text-[#8AA97A] text-lg\">•</span>\n                <div>\n                  <p className=\"text-xs font-mono text-[#f4f4e4]/80\">2024</p>\n                  <p className=\"text-xs text-[#f4f4e4]/60\">AI-augmented design, strategic business focus</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <p className=\"text-xs text-[#f4f4e4]/50 mt-6 font-mono\">\n            Source: Industry job postings analysis, design role surveys, and professional skill assessments (2000-2024)\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":13633},"client/src/components/tools-methodology-section.tsx":{"content":"import { Card } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Layers, \n  Users, \n  Zap, \n  GitBranch, \n  Code, \n  Brain,\n  Clock,\n  Target,\n  TrendingUp,\n  Package\n} from 'lucide-react';\nimport UXTimelineChart from '@/components/ux-timeline-chart';\nimport MarketShareChart from '@/components/market-share-chart';\nimport SkillsEvolutionChart from '@/components/skills-evolution-chart';\nimport UXToolEvolutionChart from '@/components/ux-tool-evolution-chart';\n\nexport default function ToolsMethodologySection() {\n  const toolTimeline = [\n    {\n      era: \"1990s\",\n      title: \"Print-to-Web Transition\",\n      tools: [\n        { name: \"Photoshop\", year: \"1990\", type: \"Raster graphics\", innovation: \"Web design via slicing\" },\n        { name: \"Dreamweaver\", year: \"1997\", type: \"WYSIWYG editor\", innovation: \"Visual HTML editing\" },\n        { name: \"Flash\", year: \"1996\", type: \"Animation\", innovation: \"Interactive web experiences\" }\n      ],\n      keyInnovation: \"Designers began adapting print tools for digital media\"\n    },\n    {\n      era: \"2000s\",\n      title: \"Early Digital Design\",\n      tools: [\n        { name: \"Fireworks\", year: \"2005\", type: \"Web graphics\", innovation: \"Optimized for web workflow\" },\n        { name: \"Visio\", year: \"2000\", type: \"Diagramming\", innovation: \"Early wireframing\" },\n        { name: \"OmniGraffle\", year: \"2005\", type: \"Wireframing\", innovation: \"Mac-native prototyping\" },\n        { name: \"Balsamiq\", year: \"2008\", type: \"Mockups\", innovation: \"Low-fidelity rapid prototyping\" }\n      ],\n      keyInnovation: \"Purpose-built tools for digital design emerged\"\n    },\n    {\n      era: \"2010-2015\",\n      title: \"Vector Revolution\",\n      tools: [\n        { name: \"Sketch\", year: \"2010\", type: \"Vector UI\", innovation: \"First UI-focused design tool\", highlight: true },\n        { name: \"InVision\", year: \"2013\", type: \"Prototyping\", innovation: \"Clickable prototypes\" },\n        { name: \"Marvel\", year: \"2013\", type: \"Prototyping\", innovation: \"Simple prototype creation\" },\n        { name: \"Principle\", year: \"2014\", type: \"Animation\", innovation: \"Timeline-based interactions\" },\n        { name: \"Framer\", year: \"2014\", type: \"Code-based\", innovation: \"Advanced interactions\" }\n      ],\n      keyInnovation: \"Specialized tools for UI design and prototyping\"\n    },\n    {\n      era: \"2016-2020\",\n      title: \"Collaboration Era\",\n      tools: [\n        { name: \"Figma\", year: \"2016\", type: \"Collaborative\", innovation: \"Real-time collaboration\", highlight: true },\n        { name: \"Adobe XD\", year: \"2017\", type: \"All-in-one\", innovation: \"Adobe ecosystem integration\" },\n        { name: \"Abstract\", year: \"2017\", type: \"Version control\", innovation: \"Git for designers\" },\n        { name: \"Zeplin\", year: \"2017\", type: \"Handoff\", innovation: \"Design-to-dev bridge\" }\n      ],\n      keyInnovation: \"Cloud-based, real-time collaborative design\"\n    },\n    {\n      era: \"2020s\",\n      title: \"Systems & AI\",\n      tools: [\n        { name: \"Design Systems\", year: \"2020\", type: \"Standards\", innovation: \"Material, Carbon, Polaris\", highlight: true },\n        { name: \"Storybook\", year: \"2020\", type: \"Components\", innovation: \"Component documentation\" },\n        { name: \"Penpot\", year: \"2021\", type: \"Open source\", innovation: \"Free collaborative design\" },\n        { name: \"AI Tools\", year: \"2023\", type: \"AI-assisted\", innovation: \"Midjourney, DALL-E for design\" }\n      ],\n      keyInnovation: \"Systematic design and AI augmentation\"\n    }\n  ];\n\n  const methodologies = [\n    {\n      era: \"Waterfall Era\",\n      period: \"1990s\",\n      icon: <Clock className=\"w-5 h-5\" />,\n      characteristics: [\n        \"Sequential phases: Requirements → Design → Implementation → Testing\",\n        \"Heavy documentation requirements\",\n        \"Limited user feedback until launch\",\n        \"Long development cycles (6-24 months)\",\n        \"Change-resistant process\"\n      ],\n      pros: [\"Clear structure\", \"Predictable timelines\", \"Detailed documentation\"],\n      cons: [\"Inflexible to changes\", \"Late user feedback\", \"High risk of failure\"]\n    },\n    {\n      era: \"Agile Integration\",\n      period: \"2000s\",\n      icon: <Target className=\"w-5 h-5\" />,\n      characteristics: [\n        \"2-week sprints with iterative delivery\",\n        \"Cross-functional teams\",\n        \"Regular user feedback loops\",\n        \"Continuous improvement\",\n        \"Adaptable to change\"\n      ],\n      pros: [\"Faster delivery\", \"Regular feedback\", \"Team collaboration\"],\n      cons: [\"Less documentation\", \"Scope creep risk\", \"Requires culture shift\"]\n    },\n    {\n      era: \"Lean UX\",\n      period: \"2010s\",\n      icon: <Zap className=\"w-5 h-5\" />,\n      characteristics: [\n        \"Build-Measure-Learn cycles\",\n        \"Minimum Viable Product (MVP) approach\",\n        \"Rapid experimentation\",\n        \"Data-driven decisions\",\n        \"Waste reduction focus\"\n      ],\n      pros: [\"Fast validation\", \"Resource efficient\", \"Risk reduction\"],\n      cons: [\"May lack polish\", \"Requires metrics setup\", \"Short-term focus risk\"]\n    },\n    {\n      era: \"Design Thinking\",\n      period: \"2010s\",\n      icon: <Brain className=\"w-5 h-5\" />,\n      characteristics: [\n        \"Five phases: Empathize, Define, Ideate, Prototype, Test\",\n        \"Human-centered approach\",\n        \"Divergent and convergent thinking\",\n        \"Cross-disciplinary collaboration\",\n        \"Problem reframing\"\n      ],\n      pros: [\"User empathy\", \"Innovation focus\", \"Structured creativity\"],\n      cons: [\"Time intensive\", \"Requires facilitation\", \"Can be abstract\"]\n    },\n    {\n      era: \"Design Sprints\",\n      period: \"2016+\",\n      icon: <TrendingUp className=\"w-5 h-5\" />,\n      characteristics: [\n        \"5-day structured process\",\n        \"Monday: Map the problem\",\n        \"Tuesday: Sketch solutions\",\n        \"Wednesday: Decide and storyboard\",\n        \"Thursday: Prototype\",\n        \"Friday: Test with users\"\n      ],\n      pros: [\"Fast results\", \"Clear process\", \"Team alignment\"],\n      cons: [\"Intensive commitment\", \"Limited scope\", \"Requires preparation\"]\n    },\n    {\n      era: \"DesignOps\",\n      period: \"2020s\",\n      icon: <Package className=\"w-5 h-5\" />,\n      characteristics: [\n        \"Operational excellence for design teams\",\n        \"Workflow standardization\",\n        \"Tool and system management\",\n        \"Design system governance\",\n        \"Metrics and optimization\"\n      ],\n      pros: [\"Scalability\", \"Consistency\", \"Efficiency\"],\n      cons: [\"Overhead cost\", \"Standardization tension\", \"Requires maturity\"]\n    }\n  ];\n\n  const keyInnovations = [\n    {\n      category: \"Version Control\",\n      icon: <GitBranch className=\"w-5 h-5\" />,\n      items: [\n        \"Abstract (2017): Git-like versioning for Sketch\",\n        \"Figma Branching (2021): Native version control\",\n        \"Design file history and rollback\",\n        \"Parallel design exploration\"\n      ]\n    },\n    {\n      category: \"Design Systems\",\n      icon: <Layers className=\"w-5 h-5\" />,\n      items: [\n        \"Component libraries with variants\",\n        \"Design tokens for consistency\",\n        \"Auto-layout and responsive design\",\n        \"Shared team libraries\"\n      ]\n    },\n    {\n      category: \"Collaboration\",\n      icon: <Users className=\"w-5 h-5\" />,\n      items: [\n        \"Real-time multiplayer editing\",\n        \"Commenting and annotations\",\n        \"Stakeholder review modes\",\n        \"Live design sessions\"\n      ]\n    },\n    {\n      category: \"Design-to-Code\",\n      icon: <Code className=\"w-5 h-5\" />,\n      items: [\n        \"Automatic code generation\",\n        \"CSS/Swift/Kotlin export\",\n        \"Developer handoff tools\",\n        \"API-driven design systems\"\n      ]\n    }\n  ];\n\n  const costEvolution = [\n    { period: \"1990s\", individual: \"$3,000+\", team: \"$15,000+\", note: \"Desktop licenses\" },\n    { period: \"2000s\", individual: \"$2,000+\", team: \"$10,000+\", note: \"Suite bundles\" },\n    { period: \"2010s\", individual: \"$99/year\", team: \"$500/year\", note: \"Subscription model\" },\n    { period: \"2020s\", individual: \"$0-15/mo\", team: \"$45/editor/mo\", note: \"Freemium + SaaS\" }\n  ];\n\n  return (\n    <section className=\"relative\">\n      {/* Introduction */}\n      <div className=\"py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-5xl mx-auto\">\n          <div className=\"space-y-6\">\n            <div className=\"space-y-2 text-center\">\n              <p className=\"text-muted uppercase tracking-wider text-sm font-mono\">Part 4</p>\n              <h2 className=\"font-display text-4xl sm:text-5xl font-bold leading-tight\">\n                Tools & Methodology Evolution\n              </h2>\n            </div>\n\n            <div className=\"max-w-3xl mx-auto prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n              <p>\n                The evolution of UX/UI design tools mirrors the profession's journey from <strong>print adaptation to digital-native thinking</strong>. \n                What began as designers using Photoshop to slice images for web pages has transformed into a sophisticated ecosystem of \n                collaborative, cloud-based platforms that enable <strong>real-time design systems at scale</strong>.\n              </p>\n              \n              <p>\n                This transformation wasn't just technological—it fundamentally changed <strong>how teams work together</strong>. \n                The shift from waterfall to agile methodologies, the rise of design thinking, and the emergence of DesignOps \n                reflect the profession's maturation from <strong>service provider to strategic partner</strong>.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tool Evolution Timeline */}\n      <div className=\"py-16 px-4 sm:px-6 lg:px-8 bg-secondary/20\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h3 className=\"text-3xl font-display font-bold mb-8 text-center\">Design Tool Evolution Timeline</h3>\n          \n          <div className=\"space-y-12\">\n            {toolTimeline.map((era, index) => (\n              <div key={era.era} className=\"relative\">\n                {/* Era Header */}\n                <div className=\"flex items-center gap-4 mb-6\">\n                  <div className=\"bg-accent/20 px-4 py-2 rounded-lg\">\n                    <span className=\"font-mono font-bold text-lg text-accent\">{era.era}</span>\n                  </div>\n                  <h4 className=\"text-xl font-semibold\">{era.title}</h4>\n                </div>\n\n                {/* Tools Grid */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\n                  {era.tools.map((tool) => (\n                    <Card \n                      key={tool.name}\n                      className={`p-4 transition-all duration-200 ${\n                        tool.highlight ? 'border-accent bg-accent/5' : 'hover:border-accent/50'\n                      }`}\n                    >\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-start justify-between\">\n                          <h5 className=\"font-semibold\">{tool.name}</h5>\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            {tool.year}\n                          </Badge>\n                        </div>\n                        <p className=\"text-xs text-muted-foreground\">{tool.type}</p>\n                        <p className=\"text-sm text-foreground/80\">{tool.innovation}</p>\n                      </div>\n                    </Card>\n                  ))}\n                </div>\n\n                {/* Key Innovation */}\n                <div className=\"bg-accent/10 border-l-4 border-accent px-4 py-3 rounded-r\">\n                  <p className=\"text-sm font-medium\">\n                    <span className=\"text-accent mr-2\">→</span>\n                    {era.keyInnovation}\n                  </p>\n                </div>\n\n                {/* Timeline Connector */}\n                {index < toolTimeline.length - 1 && (\n                  <div className=\"absolute left-8 top-full h-12 w-0.5 bg-accent/30\" />\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Integrated Charts */}\n      <div className=\"py-8\">\n        <UXToolEvolutionChart />\n        <MarketShareChart />\n        <SkillsEvolutionChart />\n      </div>\n\n      {/* Methodology Evolution */}\n      <div className=\"py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h3 className=\"text-3xl font-display font-bold mb-8 text-center\">Methodology Evolution</h3>\n          \n          <Tabs defaultValue=\"overview\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2 mb-8\">\n              <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n              <TabsTrigger value=\"comparison\">Comparison</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"overview\" className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {methodologies.map((method) => (\n                  <Card key={method.era} className=\"p-6 hover:border-accent/50 transition-all duration-200\">\n                    <div className=\"space-y-4\">\n                      {/* Header */}\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"p-2 bg-accent/10 rounded-lg text-accent\">\n                            {method.icon}\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold text-lg\">{method.era}</h4>\n                            <p className=\"text-sm text-muted-foreground\">{method.period}</p>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Characteristics */}\n                      <div className=\"space-y-2\">\n                        <p className=\"text-xs font-mono uppercase text-muted-foreground\">Key Characteristics</p>\n                        <ul className=\"space-y-1\">\n                          {method.characteristics.slice(0, 3).map((char, i) => (\n                            <li key={i} className=\"text-sm text-foreground/80 flex items-start\">\n                              <span className=\"text-accent mr-2\">•</span>\n                              <span>{char}</span>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"comparison\" className=\"space-y-6\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full border-collapse\">\n                  <thead>\n                    <tr className=\"border-b border-border\">\n                      <th className=\"text-left p-4\">Methodology</th>\n                      <th className=\"text-left p-4\">Timeline</th>\n                      <th className=\"text-left p-4\">Best For</th>\n                      <th className=\"text-left p-4\">Team Size</th>\n                      <th className=\"text-left p-4\">Flexibility</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr className=\"border-b border-border/50\">\n                      <td className=\"p-4 font-medium\">Waterfall</td>\n                      <td className=\"p-4\">6-24 months</td>\n                      <td className=\"p-4\">Fixed requirements</td>\n                      <td className=\"p-4\">Large (20+)</td>\n                      <td className=\"p-4\"><Badge variant=\"secondary\">Low</Badge></td>\n                    </tr>\n                    <tr className=\"border-b border-border/50\">\n                      <td className=\"p-4 font-medium\">Agile</td>\n                      <td className=\"p-4\">2-week sprints</td>\n                      <td className=\"p-4\">Evolving products</td>\n                      <td className=\"p-4\">Small-Medium (5-15)</td>\n                      <td className=\"p-4\"><Badge variant=\"default\">High</Badge></td>\n                    </tr>\n                    <tr className=\"border-b border-border/50\">\n                      <td className=\"p-4 font-medium\">Lean UX</td>\n                      <td className=\"p-4\">1-4 weeks</td>\n                      <td className=\"p-4\">Validation</td>\n                      <td className=\"p-4\">Small (3-7)</td>\n                      <td className=\"p-4\"><Badge variant=\"default\">High</Badge></td>\n                    </tr>\n                    <tr className=\"border-b border-border/50\">\n                      <td className=\"p-4 font-medium\">Design Thinking</td>\n                      <td className=\"p-4\">4-12 weeks</td>\n                      <td className=\"p-4\">Innovation</td>\n                      <td className=\"p-4\">Cross-functional</td>\n                      <td className=\"p-4\"><Badge>Medium</Badge></td>\n                    </tr>\n                    <tr className=\"border-b border-border/50\">\n                      <td className=\"p-4 font-medium\">Design Sprints</td>\n                      <td className=\"p-4\">5 days</td>\n                      <td className=\"p-4\">Rapid prototyping</td>\n                      <td className=\"p-4\">Small (5-7)</td>\n                      <td className=\"p-4\"><Badge variant=\"secondary\">Low</Badge></td>\n                    </tr>\n                    <tr className=\"border-b border-border/50\">\n                      <td className=\"p-4 font-medium\">DesignOps</td>\n                      <td className=\"p-4\">Ongoing</td>\n                      <td className=\"p-4\">Scale</td>\n                      <td className=\"p-4\">Large (30+)</td>\n                      <td className=\"p-4\"><Badge>Medium</Badge></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </div>\n\n      {/* Key Innovations */}\n      <div className=\"py-16 px-4 sm:px-6 lg:px-8 bg-secondary/20\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h3 className=\"text-3xl font-display font-bold mb-8 text-center\">Key Innovations</h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-12\">\n            {keyInnovations.map((innovation) => (\n              <Card key={innovation.category} className=\"p-6\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"p-2 bg-accent/10 rounded-lg text-accent\">\n                    {innovation.icon}\n                  </div>\n                  <h4 className=\"font-semibold text-lg\">{innovation.category}</h4>\n                </div>\n                <ul className=\"space-y-2\">\n                  {innovation.items.map((item, i) => (\n                    <li key={i} className=\"text-sm text-foreground/80 flex items-start\">\n                      <span className=\"text-accent mr-2 mt-0.5\">→</span>\n                      <span>{item}</span>\n                    </li>\n                  ))}\n                </ul>\n              </Card>\n            ))}\n          </div>\n\n          {/* Cost Evolution */}\n          <Card className=\"p-8 border-accent/30 bg-accent/5\">\n            <h4 className=\"font-semibold text-xl mb-6\">Tool Cost Evolution</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              {costEvolution.map((cost) => (\n                <div key={cost.period} className=\"space-y-2\">\n                  <Badge variant=\"outline\" className=\"mb-2\">{cost.period}</Badge>\n                  <div className=\"space-y-1\">\n                    <p className=\"text-sm\">\n                      <span className=\"text-muted-foreground\">Individual:</span>{' '}\n                      <span className=\"font-mono font-semibold\">{cost.individual}</span>\n                    </p>\n                    <p className=\"text-sm\">\n                      <span className=\"text-muted-foreground\">Team:</span>{' '}\n                      <span className=\"font-mono font-semibold\">{cost.team}</span>\n                    </p>\n                    <p className=\"text-xs text-muted-foreground italic\">{cost.note}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n\n          {/* Modern Capabilities */}\n          <div className=\"mt-12 bg-gradient-to-r from-accent/10 to-accent/5 rounded-xl p-8\">\n            <h4 className=\"font-semibold text-xl mb-4\">2025 State of the Art</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n              <div>\n                <p className=\"font-medium mb-2\">AI Integration</p>\n                <ul className=\"space-y-1 text-foreground/80\">\n                  <li>• Auto-layout suggestions</li>\n                  <li>• Content generation</li>\n                  <li>• Accessibility checking</li>\n                </ul>\n              </div>\n              <div>\n                <p className=\"font-medium mb-2\">Enterprise Scale</p>\n                <ul className=\"space-y-1 text-foreground/80\">\n                  <li>• 1000+ designer teams</li>\n                  <li>• Global design systems</li>\n                  <li>• Cross-platform consistency</li>\n                </ul>\n              </div>\n              <div>\n                <p className=\"font-medium mb-2\">Developer Integration</p>\n                <ul className=\"space-y-1 text-foreground/80\">\n                  <li>• Live code sync</li>\n                  <li>• Component matching</li>\n                  <li>• Automated testing</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Conclusion */}\n      <div className=\"py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-3xl mx-auto prose prose-lg space-y-6 text-foreground/90 leading-relaxed\">\n          <p>\n            The evolution from Photoshop slicing to modern design systems represents more than technological progress—it's \n            a <strong>fundamental shift in how digital products are conceived, designed, and delivered</strong>. Today's tools \n            enable collaboration at a scale unimaginable in the 1990s, while methodologies have evolved to embrace uncertainty \n            and change as core principles.\n          </p>\n          \n          <blockquote className=\"border-l-4 border-accent pl-6 italic text-lg\">\n            \"The best tool is the one your team will actually use. The best methodology is the one that delivers value to users. \n            The profession's maturity lies not in our tools, but in knowing when and how to use them.\"\n          </blockquote>\n          \n          <p>\n            As we enter the age of AI-assisted design and increasingly complex digital ecosystems, the tools and methodologies \n            will continue to evolve. But the core principle remains unchanged: <strong>human-centered design that bridges \n            the gap between user needs and technological possibilities</strong>.\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":23259}},"version":1}